{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/error/error.component.css","./src/app/error/error.component.html","./src/app/error/error.component.ts","./src/app/error/error.module.ts","./src/app/guards/error.guard.ts","./src/app/guards/root.guard.ts","./src/app/main-content/content-container/account/account-overview/account-overview.component.css","./src/app/main-content/content-container/account/account-overview/account-overview.component.html","./src/app/main-content/content-container/account/account-overview/account-overview.component.ts","./src/app/main-content/content-container/account/account-routing.module.ts","./src/app/main-content/content-container/account/account.module.ts","./src/app/main-content/content-container/basis-data/basis-data.module.ts","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.ts","./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.css","./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.html","./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.ts","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.ts","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.ts","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.ts","./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.css","./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.html","./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.ts","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.ts","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.ts","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.ts","./src/app/main-content/content-container/basis-data/user/view-user-info/view-user-info.component.css","./src/app/main-content/content-container/basis-data/user/view-user-info/view-user-info.component.html","./src/app/main-content/content-container/basis-data/user/view-user-info/view-user-info.component.ts","./src/app/main-content/content-container/content-container.component.css","./src/app/main-content/content-container/content-container.component.html","./src/app/main-content/content-container/content-container.component.ts","./src/app/main-content/content-container/content-container.module.ts","./src/app/main-content/content-container/port-call/clearance/clearance.component.css","./src/app/main-content/content-container/port-call/clearance/clearance.component.html","./src/app/main-content/content-container/port-call/clearance/clearance.component.ts","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.ts","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.ts","./src/app/main-content/content-container/port-call/load-port-call.service.ts","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.ts","./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.css","./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.html","./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.ts","./src/app/main-content/content-container/port-call/overview/overview.component.css","./src/app/main-content/content-container/port-call/overview/overview.component.html","./src/app/main-content/content-container/port-call/overview/overview.component.ts","./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.css","./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.html","./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.ts","./src/app/main-content/content-container/port-call/port-call.component.css","./src/app/main-content/content-container/port-call/port-call.component.html","./src/app/main-content/content-container/port-call/port-call.component.ts","./src/app/main-content/content-container/port-call/port-call.module.ts","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.css","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.html","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.ts","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.css","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.html","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.ts","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.css","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.html","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.ts","./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.css","./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.html","./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.ts","./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-list.component.css","./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-list.component.html","./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-list.component.ts","./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-member-modal/crew-member-modal.component.css","./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-member-modal/crew-member-modal.component.html","./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-member-modal/crew-member-modal.component.ts","./src/app/main-content/content-container/port-call/registration/forms/crew-list/save-crew-list/save-crew-list.component.css","./src/app/main-content/content-container/port-call/registration/forms/crew-list/save-crew-list/save-crew-list.component.html","./src/app/main-content/content-container/port-call/registration/forms/crew-list/save-crew-list/save-crew-list.component.ts","./src/app/main-content/content-container/port-call/registration/forms/dpg/dpg.component.css","./src/app/main-content/content-container/port-call/registration/forms/dpg/dpg.component.html","./src/app/main-content/content-container/port-call/registration/forms/dpg/dpg.component.ts","./src/app/main-content/content-container/port-call/registration/forms/forms.component.css","./src/app/main-content/content-container/port-call/registration/forms/forms.component.html","./src/app/main-content/content-container/port-call/registration/forms/forms.component.ts","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.css","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.html","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.ts","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-modal/passenger-modal.component.css","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-modal/passenger-modal.component.html","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-modal/passenger-modal.component.ts","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/save-passenger-list/save-passenger-list.component.css","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/save-passenger-list/save-passenger-list.component.html","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/save-passenger-list/save-passenger-list.component.ts","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/smartTableModel.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.ts","./src/app/main-content/content-container/port-call/registration/forms/security/company-security-officer/company-security-officer.component.css","./src/app/main-content/content-container/port-call/registration/forms/security/company-security-officer/company-security-officer.component.html","./src/app/main-content/content-container/port-call/registration/forms/security/company-security-officer/company-security-officer.component.ts","./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls-table/last-10-port-calls-table.component.css","./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls-table/last-10-port-calls-table.component.html","./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls-table/last-10-port-calls-table.component.ts","./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls.component.css","./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls.component.html","./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls.component.ts","./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security-button/save-security-button.component.css","./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security-button/save-security-button.component.html","./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security-button/save-security-button.component.ts","./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security.component.css","./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security.component.html","./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security.component.ts","./src/app/main-content/content-container/port-call/registration/forms/security/security-details/security-details.component.css","./src/app/main-content/content-container/port-call/registration/forms/security/security-details/security-details.component.html","./src/app/main-content/content-container/port-call/registration/forms/security/security-details/security-details.component.ts","./src/app/main-content/content-container/port-call/registration/forms/security/security.component.css","./src/app/main-content/content-container/port-call/registration/forms/security/security.component.html","./src/app/main-content/content-container/port-call/registration/forms/security/security.component.ts","./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity-table/ship-to-ship-activity-table.component.css","./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity-table/ship-to-ship-activity-table.component.html","./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity-table/ship-to-ship-activity-table.component.ts","./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity.component.css","./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity.component.html","./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity.component.ts","./src/app/main-content/content-container/port-call/registration/forms/shared/date-picker/date-picker.component.css","./src/app/main-content/content-container/port-call/registration/forms/shared/date-picker/date-picker.component.html","./src/app/main-content/content-container/port-call/registration/forms/shared/date-picker/date-picker.component.ts","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.css","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.html","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.ts","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores-modal/ship-stores-modal.component.css","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores-modal/ship-stores-modal.component.html","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores-modal/ship-stores-modal.component.ts","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.css","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.html","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.ts","./src/app/main-content/content-container/port-call/registration/forms/voyages/save-new-port-call/save-new-port-call.component.css","./src/app/main-content/content-container/port-call/registration/forms/voyages/save-new-port-call/save-new-port-call.component.html","./src/app/main-content/content-container/port-call/registration/forms/voyages/save-new-port-call/save-new-port-call.component.ts","./src/app/main-content/content-container/port-call/registration/forms/voyages/save-voyages/save-voyages.component.css","./src/app/main-content/content-container/port-call/registration/forms/voyages/save-voyages/save-voyages.component.html","./src/app/main-content/content-container/port-call/registration/forms/voyages/save-voyages/save-voyages.component.ts","./src/app/main-content/content-container/port-call/registration/forms/voyages/voyages.component.css","./src/app/main-content/content-container/port-call/registration/forms/voyages/voyages.component.html","./src/app/main-content/content-container/port-call/registration/forms/voyages/voyages.component.ts","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.ts","./src/app/main-content/content-container/port-call/registration/registration.component.css","./src/app/main-content/content-container/port-call/registration/registration.component.html","./src/app/main-content/content-container/port-call/registration/registration.component.ts","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.ts","./src/app/main-content/footer/footer.component.css","./src/app/main-content/footer/footer.component.html","./src/app/main-content/footer/footer.component.ts","./src/app/main-content/header/header-home/header-home.component.css","./src/app/main-content/header/header-home/header-home.component.html","./src/app/main-content/header/header-home/header-home.component.ts","./src/app/main-content/header/header.component.css","./src/app/main-content/header/header.component.html","./src/app/main-content/header/header.component.ts","./src/app/main-content/header/header.module.ts","./src/app/main-content/header/whats-new/whats-new.component.css","./src/app/main-content/header/whats-new/whats-new.component.html","./src/app/main-content/header/whats-new/whats-new.component.ts","./src/app/main-content/main-content-routing.module.ts","./src/app/main-content/main-content.component.css","./src/app/main-content/main-content.component.html","./src/app/main-content/main-content.component.ts","./src/app/shared/components/action-buttons/action-buttons.component.css","./src/app/shared/components/action-buttons/action-buttons.component.html","./src/app/shared/components/action-buttons/action-buttons.component.ts","./src/app/shared/components/confirmation-modal/confirmation-modal.component.css","./src/app/shared/components/confirmation-modal/confirmation-modal.component.html","./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.css","./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.html","./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.ts","./src/app/shared/components/confirmation-view/cargo-listing-table/cargo-listing-table.component.css","./src/app/shared/components/confirmation-view/cargo-listing-table/cargo-listing-table.component.html","./src/app/shared/components/confirmation-view/cargo-listing-table/cargo-listing-table.component.ts","./src/app/shared/components/confirmation-view/clearances/clearances.component.css","./src/app/shared/components/confirmation-view/clearances/clearances.component.html","./src/app/shared/components/confirmation-view/clearances/clearances.component.ts","./src/app/shared/components/confirmation-view/confirmation-view.component.css","./src/app/shared/components/confirmation-view/confirmation-view.component.html","./src/app/shared/components/confirmation-view/confirmation-view.component.ts","./src/app/shared/components/confirmation-view/crew-info-table/crew-info-table.component.css","./src/app/shared/components/confirmation-view/crew-info-table/crew-info-table.component.html","./src/app/shared/components/confirmation-view/crew-info-table/crew-info-table.component.ts","./src/app/shared/components/confirmation-view/crew-listing-table/crew-listing-table.component.css","./src/app/shared/components/confirmation-view/crew-listing-table/crew-listing-table.component.html","./src/app/shared/components/confirmation-view/crew-listing-table/crew-listing-table.component.ts","./src/app/shared/components/confirmation-view/dpg-listing-table/dpg-listing-table.component.css","./src/app/shared/components/confirmation-view/dpg-listing-table/dpg-listing-table.component.html","./src/app/shared/components/confirmation-view/dpg-listing-table/dpg-listing-table.component.ts","./src/app/shared/components/confirmation-view/passenger-info-table/passenger-info-table.component.css","./src/app/shared/components/confirmation-view/passenger-info-table/passenger-info-table.component.html","./src/app/shared/components/confirmation-view/passenger-info-table/passenger-info-table.component.ts","./src/app/shared/components/confirmation-view/passenger-listing-table/passenger-listing-table.component.css","./src/app/shared/components/confirmation-view/passenger-listing-table/passenger-listing-table.component.html","./src/app/shared/components/confirmation-view/passenger-listing-table/passenger-listing-table.component.ts","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.ts","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.ts","./src/app/shared/components/confirmation-view/ship-stores-info-table/ship-stores-info-table.component.css","./src/app/shared/components/confirmation-view/ship-stores-info-table/ship-stores-info-table.component.html","./src/app/shared/components/confirmation-view/ship-stores-info-table/ship-stores-info-table.component.ts","./src/app/shared/components/confirmation-view/ship-stores-listing-table/ship-stores-listing-table.component.css","./src/app/shared/components/confirmation-view/ship-stores-listing-table/ship-stores-listing-table.component.html","./src/app/shared/components/confirmation-view/ship-stores-listing-table/ship-stores-listing-table.component.ts","./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.css","./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.html","./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.ts","./src/app/shared/components/contact-select/contact-select.component.css","./src/app/shared/components/contact-select/contact-select.component.html","./src/app/shared/components/contact-select/contact-select.component.ts","./src/app/shared/components/country-select/country-select.component.css","./src/app/shared/components/country-select/country-select.component.html","./src/app/shared/components/country-select/country-select.component.ts","./src/app/shared/components/date-picker/date-picker.component.css","./src/app/shared/components/date-picker/date-picker.component.html","./src/app/shared/components/date-picker/date-picker.component.ts","./src/app/shared/components/date-time-picker/date-time-picker.component.css","./src/app/shared/components/date-time-picker/date-time-picker.component.html","./src/app/shared/components/date-time-picker/date-time-picker.component.ts","./src/app/shared/components/delete-button/delete-button.component.css","./src/app/shared/components/delete-button/delete-button.component.html","./src/app/shared/components/delete-button/delete-button.component.ts","./src/app/shared/components/feedback/feedback.component.css","./src/app/shared/components/feedback/feedback.component.html","./src/app/shared/components/feedback/feedback.component.ts","./src/app/shared/components/identity-document/identity-document.component.css","./src/app/shared/components/identity-document/identity-document.component.html","./src/app/shared/components/identity-document/identity-document.component.ts","./src/app/shared/components/issc/issc.component.css","./src/app/shared/components/issc/issc.component.html","./src/app/shared/components/issc/issc.component.ts","./src/app/shared/components/issc/rso-select/rso-select.component.css","./src/app/shared/components/issc/rso-select/rso-select.component.html","./src/app/shared/components/issc/rso-select/rso-select.component.ts","./src/app/shared/components/location-info-table/location-info-table.component.css","./src/app/shared/components/location-info-table/location-info-table.component.html","./src/app/shared/components/location-info-table/location-info-table.component.ts","./src/app/shared/components/location-time-info-table/location-time-info-table.component.css","./src/app/shared/components/location-time-info-table/location-time-info-table.component.html","./src/app/shared/components/location-time-info-table/location-time-info-table.component.ts","./src/app/shared/components/organization-info-table/organization-info-table.component.css","./src/app/shared/components/organization-info-table/organization-info-table.component.html","./src/app/shared/components/organization-info-table/organization-info-table.component.ts","./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.css","./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.html","./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.ts","./src/app/shared/components/organization-smart-table/organization-smart-table.component.css","./src/app/shared/components/organization-smart-table/organization-smart-table.component.html","./src/app/shared/components/organization-smart-table/organization-smart-table.component.ts","./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.css","./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.html","./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.ts","./src/app/shared/components/search-country/search-country.component.css","./src/app/shared/components/search-country/search-country.component.html","./src/app/shared/components/search-country/search-country.component.ts","./src/app/shared/components/search-location/search-location.component.css","./src/app/shared/components/search-location/search-location.component.html","./src/app/shared/components/search-location/search-location.component.ts","./src/app/shared/components/search-location/search-location.service.ts","./src/app/shared/components/search-organization/search-organization.component.css","./src/app/shared/components/search-organization/search-organization.component.html","./src/app/shared/components/search-organization/search-organization.component.ts","./src/app/shared/components/search-organization/search-organization.service.ts","./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.css","./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.html","./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.ts","./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.service.ts","./src/app/shared/components/search-ship/search-ship.component.css","./src/app/shared/components/search-ship/search-ship.component.html","./src/app/shared/components/search-ship/search-ship.component.ts","./src/app/shared/components/search-ship/search-ship.service.ts","./src/app/shared/components/search-user/search-user.component.css","./src/app/shared/components/search-user/search-user.component.html","./src/app/shared/components/search-user/search-user.component.ts","./src/app/shared/components/search-user/search-user.service.ts","./src/app/shared/components/select-ship-contact/select-ship-contact.component.css","./src/app/shared/components/select-ship-contact/select-ship-contact.component.html","./src/app/shared/components/select-ship-contact/select-ship-contact.component.ts","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.ts","./src/app/shared/components/ship-info-table/ship-info-table.component.css","./src/app/shared/components/ship-info-table/ship-info-table.component.html","./src/app/shared/components/ship-info-table/ship-info-table.component.ts","./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.css","./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.html","./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.ts","./src/app/shared/components/ship-smart-table/ship-smart-table.component.css","./src/app/shared/components/ship-smart-table/ship-smart-table.component.html","./src/app/shared/components/ship-smart-table/ship-smart-table.component.ts","./src/app/shared/components/ssn-bg/ssn-bg.component.css","./src/app/shared/components/ssn-bg/ssn-bg.component.html","./src/app/shared/components/ssn-bg/ssn-bg.component.ts","./src/app/shared/components/ssn-card/ssn-card.component.css","./src/app/shared/components/ssn-card/ssn-card.component.html","./src/app/shared/components/ssn-card/ssn-card.component.ts","./src/app/shared/components/ssn-table/ssn-table.component.css","./src/app/shared/components/ssn-table/ssn-table.component.html","./src/app/shared/components/ssn-table/ssn-table.component.ts","./src/app/shared/components/table-card/table-card.component.css","./src/app/shared/components/table-card/table-card.component.html","./src/app/shared/components/table-card/table-card.component.ts","./src/app/shared/components/user-smart-table/user-button-row/user-button-row.component.css","./src/app/shared/components/user-smart-table/user-button-row/user-button-row.component.html","./src/app/shared/components/user-smart-table/user-button-row/user-button-row.component.ts","./src/app/shared/components/user-smart-table/user-smart-table.component.css","./src/app/shared/components/user-smart-table/user-smart-table.component.html","./src/app/shared/components/user-smart-table/user-smart-table.component.ts","./src/app/shared/constants/blacklisted-routes.ts","./src/app/shared/constants/content-names.ts","./src/app/shared/constants/enumValues.ts","./src/app/shared/constants/form-names.ts","./src/app/shared/constants/location-properties.ts","./src/app/shared/constants/location-time-properties.ts","./src/app/shared/constants/menu-claims.ts","./src/app/shared/constants/next-location-time-properties.ts","./src/app/shared/constants/organization-properties.ts","./src/app/shared/constants/organization-types.ts","./src/app/shared/constants/port-call-claims.ts","./src/app/shared/constants/port-call-status-types.ts","./src/app/shared/constants/prev-location-time-properties.ts","./src/app/shared/constants/search-amounts.ts","./src/app/shared/constants/ship-flag-code-properties.ts","./src/app/shared/constants/ship-properties.ts","./src/app/shared/constants/user-properties.ts","./src/app/shared/interfaces/feedback-props.interface.ts","./src/app/shared/models/cargo-item-model.ts","./src/app/shared/models/certificate-of-registry-model.ts","./src/app/shared/models/clearance-model.ts","./src/app/shared/models/company-security-officer-model.ts","./src/app/shared/models/consignment-model.ts","./src/app/shared/models/contact-medium-model.ts","./src/app/shared/models/contact-model.ts","./src/app/shared/models/country-model.ts","./src/app/shared/models/dpg-model.ts","./src/app/shared/models/dpg-on-board-model.ts","./src/app/shared/models/dpg-type-model.ts","./src/app/shared/models/fal-security-model.ts","./src/app/shared/models/feedback.ts","./src/app/shared/models/gender-model.ts","./src/app/shared/models/identity-document-model.ts","./src/app/shared/models/identity-document-type-model.ts","./src/app/shared/models/index.ts","./src/app/shared/models/international-ship-security-certificate-model.ts","./src/app/shared/models/location-model.ts","./src/app/shared/models/measurement-type-model.ts","./src/app/shared/models/organization-model.ts","./src/app/shared/models/package-type-model.ts","./src/app/shared/models/password-change-model.ts","./src/app/shared/models/password-reset-model.ts","./src/app/shared/models/person-on-board-model.ts","./src/app/shared/models/person-on-board-type-model.ts","./src/app/shared/models/port-call-details-model.ts","./src/app/shared/models/port-call-has-port-call-purpose-model.ts","./src/app/shared/models/port-call-model.ts","./src/app/shared/models/port-call-purpose-model.ts","./src/app/shared/models/security-level-model.ts","./src/app/shared/models/security-previous-port-of-call-model.ts","./src/app/shared/models/ship-contact-model.ts","./src/app/shared/models/ship-flag-code-model.ts","./src/app/shared/models/ship-model.ts","./src/app/shared/models/ship-overview-model.ts","./src/app/shared/models/ship-stores-model.ts","./src/app/shared/models/ship-to-ship-activity-model.ts","./src/app/shared/models/token-query-model.ts","./src/app/shared/models/user-model.ts","./src/app/shared/services/account.service.ts","./src/app/shared/services/auth-service.ts","./src/app/shared/services/auth.request.service.ts","./src/app/shared/services/base.service.ts","./src/app/shared/services/constants.service.ts","./src/app/shared/services/content.service.ts","./src/app/shared/services/country.service.ts","./src/app/shared/services/db-connection.service.ts","./src/app/shared/services/dpg.service.ts","./src/app/shared/services/error.service.ts","./src/app/shared/services/fal-cargo.service.ts","./src/app/shared/services/fal-security.service.ts","./src/app/shared/services/fal-ship-stores.service.ts","./src/app/shared/services/gender.service.ts","./src/app/shared/services/identtity-document.service.ts","./src/app/shared/services/index.ts","./src/app/shared/services/location.service.ts","./src/app/shared/services/login.service.ts","./src/app/shared/services/organization.service.ts","./src/app/shared/services/port-call-details.service.ts","./src/app/shared/services/port-call-fal-person-on-board.service.ts","./src/app/shared/services/port-call-overview.service.ts","./src/app/shared/services/port-call.service.ts","./src/app/shared/services/purpose.service.ts","./src/app/shared/services/search.service.ts","./src/app/shared/services/ship.service.ts","./src/app/shared/services/uri-query.service.ts","./src/app/shared/services/validate-date-time.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/utils/base.request.ts","./src/app/shared/utils/config.service.ts","./src/app/shared/utils/custom-validators/extended-alpha-numeric-validator.directive.ts","./src/app/shared/utils/custom-validators/integer-validator.directive.ts","./src/app/shared/utils/custom-validators/number-validator.directive.ts","./src/app/shared/utils/custom-validators/positive-number-validator.directive.ts","./src/authenticate-xhr.backend.ts","./src/environments/environment.ts","./src/main.ts","./src/selective-preloading-strategy.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"app/auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainContentComponent } from './main-content/main-content.component';\n\nimport { SelectivePreloadingStrategy } from 'selective-preloading-strategy';\nimport { ErrorComponent } from './error/error.component';\nimport { ErrorGuard } from './guards/error.guard';\nimport { RootGuard } from './guards/root.guard';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: 'app/auth/auth.module#AuthModule'\n  },\n  // {\n  //   path: 'login',\n  //   component: LoginComponent,\n  //   canActivate: [LoginAuthGuard]\n  // },\n  /* {\n    path: 'ConfirmEmail',\n    component: EmailConfirmationComponent,\n    canActivate: [EmailConfirmationGuard]\n  },\n  {\n    path: 'ResetPassword',\n    component: PasswordResetComponent,\n    canActivate: [PasswordResetGuard]\n  }, */\n  {\n    path: '',\n    component: MainContentComponent,\n    canActivate: [RootGuard],\n    canLoad: [RootGuard]\n  },\n  {\n    path: 'error',\n    component: ErrorComponent\n  },\n  {\n    // TODO: Make ErrorComponent\n    path: '**',\n    component: ErrorComponent,\n    canActivate: [ErrorGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      // enableTracing: true, // <-- debugging purposes only\n      preloadingStrategy: SelectivePreloadingStrategy\n    })\n  ],\n  exports: [RouterModule],\n  providers: [SelectivePreloadingStrategy]\n})\nexport class AppRoutingModule {}\nexport const routedComponents = [MainContentComponent];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \".page-content {\\n    margin-bottom: -100px;\\n}\\n\\n.footer-gap {\\n    height: 100px;\\n}\\n\\n/* Loading screen */\\n\\n#overlay {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    height: 100%;\\n    width: 100%;\\n    z-index: 1010;\\n    background-color: rgba(255, 255, 255, 0.5);\\n}\\n\\n#loading-box {\\n    position: fixed;\\n    left: 50%;\\n    top: 50%;\\n    height: 200px;\\n    width: 400px;\\n    margin-left: -200px;\\n    margin-top: -100px;\\n    z-index: 1011;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div id=\\\"overlay\\\" *ngIf=\\\"loadingScreen && loadingScreen.isLoading\\\">\\n    <div id=\\\"loading-box\\\" class=\\\"text-center\\\">\\n        <img *ngIf=\\\"loadingScreen.loadingIcon\\\" src='{{loadingIconPath}}{{loadingScreen.loadingIcon}}' />\\n        <img *ngIf=\\\"!loadingScreen.loadingIcon\\\" src='{{loadingIconPath}}portcall.gif' />\\n        <h1>{{ loadingScreen.loadingText | uppercase }}</h1>\\n    </div>\\n</div>\\n\\n<div class=\\\"page-content\\\" [ngStyle]=\\\"{'min-height': clientHeight + 'px'}\\\">\\n    <router-outlet></router-outlet>\\n    <div class=\\\"footer-gap\\\"></div>\\n</div>\\n\\n<app-footer></app-footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { LoadingScreen } from './shared/interfaces/loading-screen.interface';\nimport { ContentService } from './shared/services/';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  clientHeight: number;\n\n  loadingIconPath = 'assets/images/animations/';\n  loadingScreen: LoadingScreen;\n\n  constructor(public contentService: ContentService) {\n    this.clientHeight = window.innerHeight;\n  }\n\n  ngOnInit() {\n    this.contentService.loadingScreen$.subscribe(\n      loadingScreenData => {\n        if (loadingScreenData) {\n          this.loadingScreen = loadingScreenData;\n        }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, XHRBackend } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { JwtHelperService, JwtModule } from '@auth0/angular-jwt';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthenticateXHRBackend } from '../authenticate-xhr.backend';\nimport { AppRoutingModule, routedComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ErrorModule } from './error/error.module';\nimport { ErrorGuard } from './guards/error.guard';\nimport { RootGuard } from './guards/root.guard';\nimport { ContentContainerModule } from './main-content/content-container/content-container.module';\nimport { FooterComponent } from './main-content/footer/footer.component';\nimport { HeaderHomeComponent } from './main-content/header/header-home/header-home.component';\nimport { HeaderComponent } from './main-content/header/header.component';\nimport { HeaderModule } from './main-content/header/header.module';\nimport { MainContentRoutingModule } from './main-content/main-content-routing.module';\nimport { BLACKLISTED_ROUTES } from './shared/constants/blacklisted-routes';\nimport { AccountService, AuthRequest, AuthService, ConstantsService, ContentService, LoginService } from './shared/services/';\nimport { ConfigService } from './shared/utils/config.service';\n\n\n\n\n@NgModule({\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    ContentContainerModule,\n    ErrorModule,\n    FormsModule,\n    HttpClientModule,\n    HttpModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: ['localhost:4200'],\n        blacklistedRoutes: BLACKLISTED_ROUTES\n      }\n    }),\n    MainContentRoutingModule,\n    NgbModule.forRoot(),\n    RouterModule,\n    HeaderModule,\n  ],\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    routedComponents\n  ],\n  providers: [\n    { provide: XHRBackend, useClass: AuthenticateXHRBackend },\n    AccountService,\n    AuthRequest,\n    AuthService,\n    ConfigService,\n    ConstantsService,\n    ContentService,\n    ErrorGuard,\n    JwtHelperService,\n    LoginService,\n    RootGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  // Diagnostic only: inspect router configuration\n  /* constructor(router: Router) {\n    console.log('Routes: ', JSON.stringify(router.config, undefined, 2));\n  } */\n }\n\nexport function tokenGetter() {\n  return localStorage.getItem('auth_token');\n}\n\nexport function nameof(obj) {\n  return Object.keys(obj)[0];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/error/error.component.css\n// module id = ./src/app/error/error.component.css\n// module chunks = main","module.exports = \"<app-header-home></app-header-home>\\n<div class=\\\"container pt-5\\\">\\n  <app-ssn-bg>\\n    <app-ssn-card [header]=\\\"header\\\">\\n      <!-- <app-ssn-card> -->\\n        <div class=\\\"jumbotron bg-ssn-light text-ssn\\\">\\n        <div class=\\\"row\\\">\\n            <img src=\\\"../../assets/images/icons/128x128/red/warning.png\\\"\\n          height=\\\"64px\\\" width=\\\"64px\\\" alt=\\\"Error\\\" />\\n        </div>\\n        <div class=\\\"row\\\">\\n          <p>{{message}}</p>\\n        </div>\\n      <!-- </app-ssn-card> -->\\n      </div>\\n    </app-ssn-card>\\n  </app-ssn-bg>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/error/error.component.html\n// module id = ./src/app/error/error.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from '../../../node_modules/rxjs';\nimport { ErrorService } from '../shared/services/error.service';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit, OnDestroy {\n\n  header = 'ERROR PAGE';\n  message: string;\n\n  private errorReasonSubscription: Subscription;\n  private errorMessageSubscription: Subscription;\n\n  constructor(\n    private errorService: ErrorService\n  ) { }\n\n  ngOnInit() {\n    this.errorReasonSubscription = this.errorService.errorReason$.subscribe(\n      reason => this.header = reason\n    );\n    this.errorMessageSubscription = this.errorService.errorMessage$.subscribe(\n      message => this.message = message\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.errorReasonSubscription.unsubscribe();\n    this.errorMessageSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/error/error.component.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HeaderModule } from '../main-content/header/header.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ErrorComponent } from './error.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HeaderModule,\n    SharedModule\n  ],\n  declarations: [\n    ErrorComponent\n  ]\n})\nexport class ErrorModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/error/error.module.ts","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { ErrorService } from '../shared/services/error.service';\n\n@Injectable()\nexport class ErrorGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private errorService: ErrorService\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if (state.url !== '/error') {\n        this.errorService.setErrorReason('Page not found');\n        this.errorService.setErrorMessage('The page you requested could not be found.');\n        this.router.navigate(['/error']);\n        return false;\n      }\n      return true;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/error.guard.ts","import { HttpErrorResponse } from '@angular/common/http';\nimport { Route } from '@angular/compiler/src/core';\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanLoad,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\nimport { AuthService, BaseService, ErrorService, LoginService } from 'app/shared/services/';\nimport { Observable } from 'rxjs/Observable';\nimport { BaseGuard } from '../shared/interfaces/base-guard.interface';\n\n@Injectable()\nexport class RootGuard extends BaseService implements CanActivate, CanLoad, BaseGuard {\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private loginService: LoginService,\n    private errorService: ErrorService\n  ) {\n    super();\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n\n    if (!this.authService.hasToken()) {\n      this.loginService.logout(); // Clear remaining cached data\n      this.router.navigate(['/auth/login']);\n      return false;\n    } else {\n      return this.authService.hasValidToken().map(\n        tokenValid => true,\n        error => false\n      ).catch((error: HttpErrorResponse) => {\n        this.navigateByError(error);\n        return this.handleError(error);\n      });\n    }\n  }\n\n  canLoad(route: Route): Observable<boolean> | Promise<boolean> | boolean {\n    if (!this.authService.hasToken()) {\n      return false;\n    } else {\n      return this.authService.hasValidToken().map(\n        tokenValid => true,\n        error => false\n      ).catch((error: HttpErrorResponse) => {\n        return this.handleError(error);\n      });\n    }\n  }\n\n  navigateByError(error: HttpErrorResponse | any) {\n    // Redirects user to correct page according to the error\n    if (error instanceof HttpErrorResponse) {\n      const httpError = error as HttpErrorResponse;\n      if (httpError.status >= 500) {\n        this.errorService.setDefaultHTTPError(httpError);\n        this.router.navigate(['/error']);\n      } else if (httpError.status === 401 || httpError.status === 403) {\n        // Unauthorized - token invalid\n        this.loginService.logout();\n        this.errorService.setErrorReason(`${httpError.status} ${httpError.statusText}`);\n        this.errorService.setErrorMessage('Token was invalid');\n        this.router.navigate(['/auth/login']);\n      } else {\n        this.loginService.logout();\n        this.errorService.setDefaultHTTPError(httpError);\n        this.router.navigate(['/error']);\n      }\n    } else {\n      this.errorService.setDefaultError();\n      this.router.navigate(['/error']);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/root.guard.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/account/account-overview/account-overview.component.css\n// module id = ./src/app/main-content/content-container/account/account-overview/account-overview.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"Account overview\\\" icon=\\\"eye.png\\\">\\n    <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col\\\">\\n            <app-table-card header=\\\"Personalia\\\" collapsible=true icon=\\\"user-info.png\\\">\\n                <tbody id=\\\"person-details\\\">\\n                    <tr>\\n                        <td *ngFor=\\\"let userLabel of userLabels\\\">\\n                            {{userLabel}}\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td *ngFor=\\\"let userValue of userValues\\\">\\n                            <div *ngIf=\\\"userValue\\\">{{userValue}}</div>\\n                            <div *ngIf=\\\"!userValue\\\" class=\\\"font-italic\\\">Not provided</div>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </app-table-card>\\n        </div>\\n    </div>\\n    <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col\\\">\\n            <app-table-card header=\\\"Organization affiliation and permissions\\\" collapsible=true icon=\\\"pax.png\\\">\\n                <tbody id=\\\"organization-permissions-details\\\">\\n                    <tr>\\n                        <td *ngFor=\\\"let organizationLabel of organizationLabels\\\">\\n                            {{organizationLabel}}\\n                        </td>\\n                        <td *ngFor=\\\"let roleLabel of roleLabels\\\">\\n                            {{roleLabel}}\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td *ngFor=\\\"let organizationValue of organizationValues\\\">\\n                            <div *ngIf=\\\"organizationValue\\\">{{organizationValue}}</div>\\n                            <div *ngIf=\\\"!organizationValue\\\" class=\\\"font-italic\\\">Not provided</div>\\n                        </td>\\n                        <td *ngFor=\\\"let roleValue of roleValues\\\">\\n                            <div *ngIf=\\\"roleValue\\\">{{roleValue}}</div>\\n                            <div *ngIf=\\\"!roleValue\\\" class=\\\"font-italic\\\">Not assigned</div>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </app-table-card>\\n        </div>\\n    </div>\\n</app-ssn-bg>\\n<app-ssn-card header=\\\"Password change\\\">\\n    <div class=\\\"text-center\\\">\\n        <p>If you would like to change the password to your account, please click the button below.</p>\\n        <button routerLink=\\\"/auth/ChangePassword\\\" class=\\\"btn btn-ssn btn-sm\\\">Change password</button>\\n    </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/account/account-overview/account-overview.component.html\n// module id = ./src/app/main-content/content-container/account/account-overview/account-overview.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AccountService } from '../../../../shared/services/';\n\n@Component({\n  selector: 'app-account-overview',\n  templateUrl: './account-overview.component.html',\n  styleUrls: ['./account-overview.component.css']\n})\nexport class AccountOverviewComponent implements OnInit, OnDestroy {\n  private accountOverviewSubscription: Subscription;\n  userDetails: any;\n  userLabels: string[] = [];\n  userValues: string[] = [];\n  labels: string[] = [];\n  values: string[] = [];\n  organizationLabels: string[] = [];\n  organizationValues: string[] = [];\n  roleLabels: string[] = [];\n  roleValues: string[] = [];\n  affiliationLabels: string[] = [];\n  affiliationValues: string[] = [];\n\n  constructor(\n    private accountService: AccountService\n  ) { }\n\n  ngOnInit() {\n    this.accountOverviewSubscription = this.accountService\n      .getAccountOverview()\n      .subscribe(details => {\n        this.userDetails = details;\n        this.labels = Object.keys(details);\n        this.labels.forEach(label => {\n          this.values.push(details[label]);\n        });\n        this.filterOrganizationFields(details);\n        this.filterRoleFields(details);\n        this.setAffiliationFields();\n        this.setUserDetails();\n        this.formatLabels();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.accountOverviewSubscription.unsubscribe();\n  }\n\n  filterOrganizationFields(details: any) {\n    this.organizationLabels = this.labels.filter(label => label.match(/organization/));\n    this.organizationLabels.forEach(orgLabel => {\n      this.organizationValues.push(details[orgLabel]);\n    });\n  }\n\n  filterRoleFields(details: any) {\n    this.roleLabels = this.labels.filter(label => label.match(/role/));\n    this.roleLabels.forEach(roleLabel => this.roleValues.push(details[roleLabel]));\n  }\n\n  setAffiliationFields() {\n    this.affiliationLabels = this.organizationLabels.concat(this.roleLabels);\n    this.affiliationValues = this.organizationValues.concat(this.roleValues);\n  }\n\n  setUserDetails() {\n    // Set difference userLabels \\ affiliationLabels\n    this.userLabels = this.labels\n      .filter(label => !this.affiliationLabels\n        .some(affiliationLabel => affiliationLabel === label));\n\n    this.userValues = this.values\n      .filter(value => !this.affiliationValues\n        .some(affiliationValue => affiliationValue === value));\n  }\n\n  formatLabels() {\n    const camel2title = (camelCase: string) => {\n      return camelCase\n      .replace(/([A-Z])/g, (match) => ` ${match}`)\n      .replace(/^./, (match) => match.toUpperCase());\n    };\n\n    for (let index = 0; index < this.userLabels.length; index++) {\n      const label = this.userLabels[index];\n      this.userLabels[index] = camel2title(label);\n    }\n\n    for (let index = 0; index < this.organizationLabels.length; index++) {\n      const label = this.organizationLabels[index];\n      this.organizationLabels[index] = camel2title(label);\n    }\n\n    for (let index = 0; index < this.roleLabels.length; index++) {\n      const label = this.roleLabels[index];\n      this.roleLabels[index] = camel2title(label);\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/account/account-overview/account-overview.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/account/account-routing.module.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { AccountOverviewComponent } from './account-overview/account-overview.component';\nimport { AccountRoutingModule } from './account-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    NgSelectModule,\n    SharedModule,\n  ],\n  declarations: [\n    AccountOverviewComponent\n  ],\n  exports: [\n    AccountOverviewComponent\n  ]\n})\nexport class AccountModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/account/account.module.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { AccountService, LocationService, OrganizationService, ShipService } from 'app/shared/services/';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { RegisterLocationComponent } from './location/register-location/register-location.component';\nimport { LocationButtonRowComponent } from './location/view-location-info/location-button-row/location-button-row.component';\nimport { ViewLocationInfoComponent } from './location/view-location-info/view-location-info.component';\nimport { RegisterOrganizationComponent } from './organization/register-organization/register-organization.component';\nimport { ViewOrganizationInfoComponent } from './organization/view-organization-info/view-organization-info.component';\nimport { CertificateOfRegistryComponent } from './ship/register-ship/certificate-of-registry/certificate-of-registry.component';\nimport { RegisterShipComponent } from './ship/register-ship/register-ship.component';\nimport { ViewShipInfoComponent } from './ship/view-ship-info/view-ship-info.component';\nimport { RegisterUserComponent } from './user/register-user/register-user.component';\nimport { ViewUserInfoComponent } from './user/view-user-info/view-user-info.component';\n\n@NgModule({\n  imports: [\n    NgbModule,\n    CommonModule,\n    FormsModule,\n    HttpModule,\n    NgSelectModule,\n    SharedModule,\n    Ng2SmartTableModule\n  ],\n  declarations: [\n    RegisterUserComponent,\n    ViewUserInfoComponent,\n    RegisterShipComponent,\n    ViewShipInfoComponent,\n    RegisterOrganizationComponent,\n    ViewOrganizationInfoComponent,\n    RegisterLocationComponent,\n    ViewLocationInfoComponent,\n    LocationButtonRowComponent,\n    CertificateOfRegistryComponent\n  ],\n  exports: [\n    RegisterUserComponent,\n    ViewUserInfoComponent,\n    ViewShipInfoComponent,\n    RegisterShipComponent,\n    RegisterLocationComponent,\n    RegisterOrganizationComponent,\n    ViewOrganizationInfoComponent,\n    ViewLocationInfoComponent\n  ],\n  providers: [\n    LocationService,\n    OrganizationService,\n    ShipService,\n    AccountService\n  ],\n  entryComponents: [\n    LocationButtonRowComponent,\n    RegisterOrganizationComponent\n  ]\n})\nexport class BasisDataModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/basis-data.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css\n// module id = ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"{{ locationHeader }}\\\" icon=\\\"location.png\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header=\\\"Location Information\\\" icon=\\\"pax.png\\\">\\n        <form>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"location_type_dropdown\\\">Location Type</label>\\n                  <div ngbDropdown>\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"location_type_dropdown\\\" ngbDropdownToggle> {{\\n                      locationTypeDropdownString }}</button>\\n                    <div ngbDropdownMenu aria-labelledby=\\\"location_type_dropdown\\\">\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let locationType of locationTypeList\\\" (click)=\\\"selectLocationType(locationType)\\\">{{\\n                        locationType.name }}</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"locationName\\\">Location Name</label>\\n                  <input [(ngModel)]=\\\"locationModel.name\\\" name=\\\"locationName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"location_name\\\" placeholder=\\\"Enter location name\\\" />\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col-1\\\" style=\\\"margin-right: 25px\\\">\\n                    <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"finalLocationCode\\\">Country Code</label>\\n                    <input [(ngModel)]=\\\"selectedTwoCharCode\\\" name=\\\"finalLocationCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                      id=\\\"final_loc_code\\\" disabled />\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"location_code\\\">Location Code</label>\\n                  <input [(ngModel)]=\\\"threeCharLoCode\\\" name=\\\"locationCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"location_code\\\" placeholder=\\\"Enter location code\\\" maxlength=\\\"3\\\" minlength=\\\"3\\\" #threeCarCode=\\\"ngModel\\\"/>\\n                    <div *ngIf=\\\"!threeCarCode.valid\\\" class=\\\"alert alert-danger\\\">\\n                      <li *ngIf=\\\"threeCarCode.hasError('minlength')\\\">\\n                        <small>Location code must be a country code followed by 3 characters.</small>\\n                      </li>\\n                    </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"!countrySelected\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"country_select\\\">Country</label>\\n                  <ng-select id=\\\"country_select\\\" name=\\\"country_select\\\" [items]=\\\"countryList\\\" [multiple]=\\\"false\\\"\\n                    [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select country\\\" [(ngModel)]=\\\"selectedCountry\\\"\\n                    (change)=\\\"selectCountry($event)\\\"></ng-select>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"countrySelected\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"country\\\">Country</label>\\n                  <div class=\\\"input-group\\\">\\n                    <input id=\\\"country\\\" name=\\\"country\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"selectedCountry.name\\\"\\n                      disabled=\\\"true\\\" />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"deselectCountry()\\\">\\n                        <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"location_post_code\\\">Post Code</label>\\n                  <input [(ngModel)]=\\\"locationModel.postCode\\\" name=\\\"locationPostCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"location_post_code\\\" placeholder=\\\"Enter location post code if applicable\\\" />\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"text-center\\\">\\n        <app-ssn-card header='{{ confirmHeader }}' icon=\\\"checkmark.png\\\">\\n          <div class=\\\"text-center\\\" *ngIf=\\\"!(locationTypeSelected && locationModel.name && countrySelected)\\\">\\n            <p *ngIf=\\\"!locationTypeSelected\\\" class=\\\"no-wrap mb-0\\\">Location type not selected.</p>\\n            <p *ngIf=\\\"!locationModel.name\\\" class=\\\"no-wrap mb-0\\\">Location name not set.</p>\\n            <p *ngIf=\\\"!countrySelected\\\" class=\\\"no-wrap\\\">Country not selected.</p>\\n            <p *ngIf=\\\"!threeCarCode.valid\\\" class=\\\"no-wrap\\\">Location Code not valid.</p>\\n            <button class=\\\"btn btn-ssn\\\" disabled>\\n              <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\n          </div>\\n          <div class=\\\"text-center\\\" *ngIf=\\\"locationTypeSelected && locationModel.name && countrySelected && threeCarCode.valid\\\">\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"updateAndSaveModel()\\\">\\n              <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\n          </div>\\n        </app-ssn-card>\\n      </div>\\n    </div>\\n  </div>\\n\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html\n// module id = ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ContentService, LocationService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\nimport { LocationModel } from '../../../../../shared/models';\nconst RESULT_SUCCESS = 'Location was successfully saved to the database.';\nconst RESULT_FAILURE = 'There was a problem when trying to save the location to the database. Please try again later.';\n\n@Component({\n  selector: 'app-register-location',\n  templateUrl: './register-location.component.html',\n  styleUrls: ['./register-location.component.css'],\n  providers: [LocationModel]\n})\nexport class RegisterLocationComponent implements OnInit, OnDestroy {\n\n  newLocation: boolean;\n  locationHeader: string;\n  confirmHeader: string;\n  confirmButtonTitle: string;\n  locationTypeList: any[];\n  locationTypeSelected: boolean;\n  selectedLocationType: any;\n  locationTypeDropdownString = 'Select location type';\n  selectedTwoCharCode: string;\n  threeCharLoCode: string;\n  locationSource: any;\n\n  countryList: any[];\n  countrySelected = false;\n  selectedCountry: any;\n  countrySearchFailed = false;\n\n  locationDataSubscription: Subscription;\n  locationTypesSubscription: Subscription;\n  countriesSubscription: Subscription;\n  locationSourceSubscription: Subscription;\n\n  constructor(\n    public locationModel: LocationModel,\n    private contentService: ContentService,\n    private locationService: LocationService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n\n    this.locationSourceSubscription = this.locationService.getInternalLocationSource()\n    .subscribe(res => {\n      this.locationSource = res;\n    });\n\n\n    this.locationDataSubscription = this.locationService.locationData$.subscribe(\n      data => {\n        if (data) {\n          this.newLocation = false;\n          this.locationHeader = 'Edit Location';\n          this.confirmHeader = 'Confirm Location Changes';\n          this.confirmButtonTitle = 'Apply Changes';\n          this.locationModel = data;\n          this.selectedCountry = this.locationModel.country;\n          this.countrySelected = true;\n          this.selectedLocationType = this.locationModel.locationType;\n          this.locationTypeSelected = true;\n          this.locationTypeDropdownString = this.selectedLocationType.name;\n        } else {\n          this.newLocation = true;\n          this.locationHeader = 'Register New Location';\n          this.confirmHeader = 'Confirm Location Registration';\n          this.confirmButtonTitle = 'Register Location';\n        }\n      }\n    );\n    this.locationTypesSubscription = this.locationService.getLocationTypes()\n    .subscribe(\n      results => {\n        this.locationTypeList = results;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    this.countriesSubscription = this.locationService.getCountries().subscribe(\n      results => {\n        this.countryList = results;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.locationDataSubscription.unsubscribe();\n    this.locationTypesSubscription.unsubscribe();\n    this.countriesSubscription.unsubscribe();\n    this.locationSourceSubscription.unsubscribe();\n  }\n\n  selectCountry($event) {\n    this.selectedCountry = $event;\n    this.locationModel.countryId = $event.countryId;\n    this.selectedTwoCharCode = this.selectedCountry.twoCharCode;\n    this.countrySelected = true;\n  }\n\n  deselectCountry() {\n    this.selectedCountry = null;\n    this.selectedTwoCharCode = '';\n    this.locationModel.country = null;\n    this.locationModel.countryId = null;\n    this.selectedCountry = null;\n    this.countrySelected = false;\n  }\n\n  selectLocationType(locationType: any) {\n    this.locationModel.locationTypeId = locationType.locationTypeId;\n    this.selectedLocationType = locationType;\n    this.locationTypeDropdownString = locationType.name;\n    this.locationTypeSelected = true;\n  }\n\n  updateAndSaveModel() {\n    const newLoCode = this.selectedTwoCharCode + this.threeCharLoCode;\n    this.locationModel.locationCode = newLoCode;\n    this.registerLocation();\n  }\n\n  registerLocation() {\n    this.locationModel.locationSourceId = this.locationSource.locationSourceId;\n    if (this.newLocation) {\n      this.locationService.registerLocation(this.locationModel).subscribe(\n        result => {\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\n        }, error => {\n          console.log(error);\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, error.error);\n        }\n      );\n    } else {\n      this.locationService.updateLocation(this.locationModel).subscribe(\n        result => {\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\n        }, error => {\n          console.log(error);\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\n        }\n      );\n    }\n  }\n\n  private goBack() {\n    this.contentService.setContent(CONTENT_NAMES.LOCATIONS);\n  }\n\n  private openConfirmationModal(modalType: string, bodyText: string) {\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\n    modalRef.componentInstance.modalType = modalType;\n    modalRef.componentInstance.bodyText = bodyText;\n    modalRef.result.then(\n      result => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\n      },\n      reason => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.css\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\n  <div class=\\\"d-table-row\\\">\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Edit location\\\">\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.html\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ConstantsService, ContentService, LocationService} from 'app/shared/services/';\nimport { ViewCell } from 'ng2-smart-table';\n\n@Component({\n  selector: 'app-location-button-row',\n  templateUrl: './location-button-row.component.html',\n  styleUrls: ['./location-button-row.component.css'],\n  providers: [ConstantsService]\n})\nexport class LocationButtonRowComponent implements ViewCell, OnInit {\n\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private contentService: ContentService,\n    private locationService: LocationService\n  ) { }\n\n  ngOnInit() { }\n\n  onEditClick() {\n    this.setContent(CONTENT_NAMES.REGISTER_LOCATION);\n  }\n\n  private setContent(content: string) {\n    this.setLocation(content);\n  }\n\n  setLocation(content) {\n    this.contentService.setLoadingScreen(true, 'location.gif', 'Loading');\n    this.locationService.setLocationData(this.rowData.locationModel);\n    this.contentService.setContent(content);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\n    <app-ssn-card header='Register New Location' icon='location.png'>\\n      <div class=\\\"text-center\\\">\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewLocation()\\\">Register New Location</button>\\n      </div>\\n    </app-ssn-card>\\n  </div>\\n</div>\\n\\n<app-ssn-card header=\\\"Location Search\\\" icon=\\\"pax.png\\\">\\n  <div class=\\\"text-center\\\">\\n    <label for=\\\"search-location\\\">Search using location name or UN/LOCODE code</label>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-2\\\"></div>\\n      <div class=\\\"col-8\\\">\\n        <app-search-location [showDropdown]=false (locationSearchResult)=\\\"onLocationSearchResult($event)\\\"></app-search-location>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <div>\\n    <div class=\\\"mb-3\\\">\\n      <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n        <thead class=\\\"bg-ssn text-white\\\">\\n          <tr>\\n            <th class=\\\"py-1\\\">\\n              <h5 class=\\\"mb-0\\\">Location search results</h5>\\n            </th>\\n          </tr>\\n        </thead>\\n      </table>\\n      <div class=\\\"table-responsive\\\">\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dataSource\\\"></ng2-smart-table>\\n      </div>\\n    </div>\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ContentService, LocationService } from 'app/shared/services/';\nimport { LocalDataSource } from 'ng2-smart-table/lib/data-source/local/local.data-source';\nimport { LocationButtonRowComponent } from './location-button-row/location-button-row.component';\n\n@Component({\n  selector: 'app-view-location-info',\n  templateUrl: './view-location-info.component.html',\n  styleUrls: ['./view-location-info.component.css']\n})\nexport class ViewLocationInfoComponent implements OnInit {\n\n  tableData = [];\n  dataSource: LocalDataSource = new LocalDataSource();\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'There are no locations in this list.',\n\n    columns: {\n      country: {\n        title: 'Country',\n        type: 'html'\n      },\n      name: {\n        title: 'Name',\n        type: 'html'\n      },\n      loCode: {\n        title: 'Location code',\n        type: 'html'\n      },\n      type: {\n        title: 'Type',\n        type: 'html'\n      },\n      actions: {\n        title: 'Actions',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: LocationButtonRowComponent\n      }\n    }\n  };\n\n  constructor(\n    private contentService: ContentService,\n    private locationService: LocationService\n  ) { }\n\n  ngOnInit() { }\n\n  onLocationSearchResult(locationSearchResult) {\n    if (locationSearchResult.length !== 0) {\n      const rowList = [];\n      locationSearchResult.forEach(location => {\n        const row = this.dataRow(location);\n        rowList.push(row);\n      });\n      this.tableData = rowList;\n    }\n    this.dataSource.load(this.tableData);\n  }\n\n  registerNewLocation() {\n    this.locationService.setLocationData(null);\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_LOCATION);\n  }\n\n  dataRow(location) {\n    const row = {\n      locationModel: location,\n      country:\n        `<div class=\"no-wrap\"><div hidden>` +\n        location.country.name + // ugly fix for alphabetical sorting but it works\n        `</div> <div> <img src='assets/images/flags/128x128/` +\n        location.country.twoCharCode.toLowerCase() +\n        `.png' height='20px'/> ` +\n        location.country.name +\n        `</div></div>`,\n      name: location.name,\n      loCode: location.locationCode || `<div class=\"font-italic\">Not provided.</div>`,\n      type: location.locationType.name || `<div class=\"font-italic\">Not provided.</div>`,\n      actions: 'btn'\n    };\n    return row;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css\n// module id = ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"{{ organizationHeader }}\\\" icon=\\\"pax.png\\\" shownAs=\\\"as-dialog\\\"  (closed)=\\\"close($event);\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header=\\\"Organization Information\\\" icon=\\\"pax.png\\\">\\n        <form>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"organization_type_select\\\">Organization Type</label>\\n                  <ng-select id=\\\"organization_type_select\\\" name=\\\"organization_type_select\\\" [items]=\\\"organizationTypeList\\\" [multiple]=\\\"false\\\"\\n                  [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select Organization Type\\\" [(ngModel)]=\\\"selectedOrganizationType\\\"\\n                  (change)=\\\"selectOrganizationType($event)\\\">\\n                  </ng-select>\\n                  \\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"organization_name\\\">Organization Name</label>\\n                  <input [(ngModel)]=\\\"organizationModel.name\\\" name=\\\"organizationName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"organization_name\\\" placeholder=\\\"Enter organization name\\\" />\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"organization_no\\\">Organization Number</label>\\n                  <input [(ngModel)]=\\\"organizationModel.organizationNo\\\" name=\\\"organizationNo\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"organization_no\\\" placeholder=\\\"Enter organization number\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"description\\\">Description</label>\\n                  <input [(ngModel)]=\\\"organizationModel.description\\\" name=\\\"description\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"description\\\" placeholder=\\\"Enter description\\\">\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header='{{ confirmHeader }}' icon=\\\"checkmark.png\\\">\\n        <div *ngIf=\\\"!organizationTypeSelected || !organizationModel.name || !organizationModel.organizationNo\\\" class=\\\"text-center\\\">\\n          <div class=\\\"mb-3\\\">\\n            <p *ngIf=\\\"!organizationTypeSelected\\\" class=\\\"no-wrap mb-0\\\">No organization type selected.</p>\\n            <p *ngIf=\\\"!organizationModel.name\\\" class=\\\"no-wrap mb-0\\\">Organization name not set.</p>\\n            <p *ngIf=\\\"!organizationModel.organizationNo\\\" class=\\\"no-wrap mb-0\\\">Organization number not set.</p>\\n          </div>\\n          <button class=\\\"btn btn-ssn\\\" disabled>\\n            <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\n        </div>\\n\\n        <div *ngIf=\\\"organizationTypeSelected && organizationModel.name && organizationModel.organizationNo\\\" class=\\\"text-center\\\">\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerOrganization()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\n        </div>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html\n// module id = ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { OrganizationModel } from 'app/shared/models';\nimport { ContentService, OrganizationService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst RESULT_SUCCESS = 'Organization was successfully saved to the database.';\nconst RESULT_FAILURE = 'There was a problem when trying to save the organization to the database. Please try again later.';\n\n@Component({\n  selector: 'app-register-organization',\n  templateUrl: './register-organization.component.html',\n  styleUrls: ['./register-organization.component.css'],\n  providers: [OrganizationModel]\n})\nexport class RegisterOrganizationComponent implements OnInit, OnDestroy {\n  newOrganization = false;\n  organizationHeader: string;\n  confirmHeader: string;\n  confirmButtonTitle: string;\n  organizationTypeList: any[];\n  organizationTypeSelected: boolean;\n  selectedOrganizationType: any;\n  organizationTypeDropdownString = 'Select organization type';\n\n  organizationDataSubscription: Subscription;\n  organizationTypesSubscription: Subscription;\n\n  @Input() registered: Function;\n  @Input() closed: Function;\n\n  constructor(\n    public organizationModel: OrganizationModel,\n    private organizationService: OrganizationService,\n    private contentService: ContentService,\n    private modalService: NgbModal\n  ) {}\n\n  ngOnInit() {\n    this.organizationDataSubscription = this.organizationService.organizationData$.subscribe(\n      data => {\n        if (data) {\n          this.organizationHeader = 'Edit Organization';\n          this.confirmHeader = 'Confirm Organization Changes';\n          this.confirmButtonTitle = 'Apply Changes';\n          this.organizationModel = data;\n          this.selectedOrganizationType = this.organizationModel.organizationType;\n          this.organizationTypeSelected = true;\n        } else if (!this.newOrganization) {\n          this.newOrganization = true;\n          this.organizationHeader = 'Register New Organization';\n          this.confirmHeader = 'Confirm Organization Registration';\n          this.confirmButtonTitle = 'Register Organization';\n        }\n      }\n    );\n\n    this.organizationTypesSubscription = this.organizationService.getValidOrganizationTypes().subscribe(\n      organizationTypesData => {\n        this.organizationTypeList = organizationTypesData;\n        // Temporary until we add more organization types (certificate issuer)\n        if (this.newOrganization) {\n          this.selectedOrganizationType = this.organizationTypeList.find(\n            type => type.name === 'Authority'\n          );\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.organizationDataSubscription.unsubscribe();\n    this.organizationTypesSubscription.unsubscribe();\n  }\n\n  registerOrganization() {\n    if (this.newOrganization) {\n      this.organizationService\n        .registerOrganization(this.organizationModel)\n        .subscribe(\n          result => {\n            this.openConfirmationModal(\n              ConfirmationModalComponent.TYPE_SUCCESS,\n              RESULT_SUCCESS\n            );\n\n            // if a call back is set call it.\n            if (this.registered) {\n              this.registered(result);\n            }\n          },\n          error => {\n            console.log(error);\n            this.openConfirmationModal(\n              ConfirmationModalComponent.TYPE_FAILURE,\n              RESULT_FAILURE\n            );\n          }\n        );\n    } else {\n      this.organizationService\n        .updateOrganization(this.organizationModel)\n        .subscribe(\n          result => {\n            this.openConfirmationModal(\n              ConfirmationModalComponent.TYPE_SUCCESS,\n              RESULT_SUCCESS\n            );\n          },\n          error => {\n            console.log(error);\n            this.openConfirmationModal(\n              ConfirmationModalComponent.TYPE_FAILURE,\n              RESULT_FAILURE\n            );\n          }\n        );\n    }\n  }\n\n  selectOrganizationType(organizationType: any) {\n    this.selectedOrganizationType = organizationType;\n\n    if (organizationType === undefined || organizationType == null) {\n    this.organizationModel.organizationTypeId = null;\n    this.organizationTypeSelected = false;\n    } else {\n    this.organizationTypeDropdownString = organizationType.name;\n    this.organizationModel.organizationTypeId = organizationType.organizationTypeId;\n    this.organizationTypeSelected = true;\n    }\n  }\n\n  private goBack() {\n    this.contentService.setContent(CONTENT_NAMES.VIEW_ORGANIZATIONS);\n  }\n\n  private openConfirmationModal(modalType: string, bodyText: string) {\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\n    modalRef.componentInstance.modalType = modalType;\n    modalRef.componentInstance.bodyText = bodyText;\n    modalRef.result.then(\n      result => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE && (!this.registered)) {\n          this.goBack();\n        }\n      },\n      reason => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE && (!this.registered)) {\n          this.goBack();\n        }\n      }\n    );\n  }\n\n  close(): void {\n    if (this.closed) {\n      this.closed();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\n    <app-ssn-card header='Register New Organization' icon='pax.png'>\\n      <div class=\\\"text-center\\\">\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewOrganization()\\\">Register New Organization</button>\\n      </div>\\n    </app-ssn-card>\\n  </div>\\n</div>\\n\\n<app-ssn-card header=\\\"Organization Search\\\" icon=\\\"pax.png\\\">\\n  <app-search-organization [showDropdown]=false (organizationSearchResult)=\\\"onOrganizationSearchResult($event)\\\"></app-search-organization>\\n  <br>\\n  <div>\\n    <app-organization-smart-table></app-organization-smart-table>\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ContentService, OrganizationService } from 'app/shared/services/';\n\n@Component({\n  selector: 'app-view-organization-info',\n  templateUrl: './view-organization-info.component.html',\n  styleUrls: ['./view-organization-info.component.css']\n})\nexport class ViewOrganizationInfoComponent implements OnInit {\n  constructor(\n    private organizationService: OrganizationService,\n    private contentService: ContentService\n  ) {}\n\n  ngOnInit() { }\n\n  onOrganizationSearchResult(organizationSearchResult) {\n    this.organizationService.setOrganizationSearchData(organizationSearchResult);\n  }\n\n  registerNewOrganization() {\n    this.organizationService.setOrganizationData(null);\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_ORGANIZATION);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Certificate of Registry\\\" icon=\\\"pax.png\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header=\\\"Port of Registry\\\">\\n        <div [hidden]=\\\"portLocationSelected\\\">\\n          <div class=\\\"text-center\\\">\\n            <label for=\\\"search-location\\\">Search using location name or UN/LOCODE code</label>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-2\\\"></div>\\n              <div class=\\\"col-8\\\">\\n                <app-search-location [restrictTypeHarbour]=true [showDropdown]=true (locationResult)=\\\"onLocationResult($event)\\\"></app-search-location>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"portLocationSelected\\\" class=\\\"text-center\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <app-ssn-table [entryData]=\\\"locationProperties\\\"></app-ssn-table>\\n          </div>\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectPortLocation()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n        </div>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"d-table mx-auto\\\">\\n        <div class=\\\"d-table-row\\\">\\n          <div class=\\\"d-table-cell p-1\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"eta_date_input\\\">Date of issue</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"doi.toggle()\\\" type=\\\"button\\\">\\n                    <img src=\\\"assets/images/icons/128x128/white/calendar.png\\\" height=\\\"20px\\\" />\\n                  </button>\\n                </div>\\n                <input id=\\\"doi_date_input\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp-doi\\\" [showWeekNumbers]=\\\"true\\\"\\n                  [(ngModel)]=\\\"dateOfIssueModel\\\" (ngModelChange)=\\\"certificateDateChanged($event)\\\" ngbDatepicker #doi=\\\"ngbDatepicker\\\">\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"d-table-row \\\">\\n          <div *ngIf=\\\"!validCertificateDateFormat \\\" class=\\\"alert alert-danger \\\" role=\\\"alert \\\">\\n            <span>Invalid date format.</span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"certificate_number\\\">Ship registry number</label>\\n        <div class=\\\"col\\\">\\n          <input [(ngModel)]=\\\"certificateModel.certificateNumber\\\" name=\\\"certificateNumber\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n            id=\\\"certificate_number\\\" placeholder=\\\"Enter ship registry number\\\" (ngModelChange)=\\\"persistData()\\\" />\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\nimport { LocationProperties } from 'app/shared/constants/location-properties';\nimport { CertificateOfRegistryModel } from 'app/shared/models/';\n\n@Component({\n  selector: 'app-certificate-of-registry',\n  templateUrl: './certificate-of-registry.component.html',\n  styleUrls: ['./certificate-of-registry.component.css']\n})\nexport class CertificateOfRegistryComponent implements OnInit {\n\n  @Input() certificateModel: CertificateOfRegistryModel;\n\n  @Output() certificateResult = new EventEmitter<CertificateOfRegistryModel>();\n\n  dateOfIssueModel: NgbDate;\n  validCertificateDateFormat = true;\n\n  portLocationSelected = false;\n  locationProperties = new LocationProperties().getPropertyList();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (this.certificateModel == null) {\n      this.certificateModel = new CertificateOfRegistryModel();\n    } else {\n      if (this.certificateModel.dateOfIssue) {\n        const date = new Date(this.certificateModel.dateOfIssue);\n        this.dateOfIssueModel = new NgbDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\n      }\n      if (this.certificateModel.portLocation) {\n        this.portLocationSelected = true;\n        this.setLocationProperties(this.certificateModel.portLocation);\n      }\n    }\n  }\n\n  onLocationResult(locationResult) {\n    this.certificateModel.portLocation = locationResult;\n    this.certificateModel.portLocationId = locationResult.locationId;\n    this.portLocationSelected = true;\n    this.setLocationProperties(this.certificateModel.portLocation);\n\n    this.persistData();\n  }\n\n  deselectPortLocation() {\n    this.portLocationSelected = false;\n    this.certificateModel.portLocation = null;\n    this.certificateModel.portLocationId = null;\n    this.persistData();\n  }\n\n  private setLocationProperties(locationModel) {\n    LocationProperties.setLocationData(this.locationProperties, locationModel);\n    const twoCharCode = locationModel.country.twoCharCode.toLowerCase() || 'xx';\n    const countryFlag = twoCharCode + '.png';\n    LocationProperties.setCountry(this.locationProperties, locationModel.country.name, countryFlag);\n  }\n\n  private persistData() {\n    this.certificateResult.emit(this.certificateModel);\n  }\n\n  certificateDateChanged($event) {\n    this.validCertificateDateFormat = this.hasValidDateFormat($event);\n    if (this.validCertificateDateFormat && $event != null) {\n      this.certificateModel.dateOfIssue = new Date(this.dateOfIssueModel.year, this.dateOfIssueModel.month - 1, this.dateOfIssueModel.day);\n    } else {\n      this.certificateModel.dateOfIssue = null;\n    }\n    this.persistData();\n  }\n\n  private hasValidDateFormat(model): boolean {\n    return typeof model !== 'string';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"{{ shipHeader }}\\\" icon=\\\"ship.png\\\">\\n  <form #form=\\\"ngForm\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <app-ssn-card header=\\\"Ship Identification\\\" icon=\\\"ship.png\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_name\\\">Ship Name</label>\\n                  <input [(ngModel)]=\\\"shipModel.name\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"shipName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"ship_name\\\" placeholder=\\\"Enter ship name\\\" />\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"call_sign\\\">Call Sign</label>\\n                  <input [(ngModel)]=\\\"shipModel.callSign\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"callSign\\\" type=\\\"text\\\"\\n                    class=\\\"form-control form-control-sm\\\" id=\\\"call_sign\\\" placeholder=\\\"Enter call sign\\\" minlength=\\\"4\\\"\\n                    maxlength=\\\"8\\\" #callSign=\\\"ngModel\\\">\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!callSign.valid\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"callSign.hasError('minlength')\\\">\\n                  <small>Callsign number must be between 4 and 8 characters.</small>\\n                </li>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"imo_no\\\">IMO Number</label>\\n                  <input [(ngModel)]=\\\"shipModel.imoNo\\\" (ngModelChange)=\\\"validImoNumber()\\\" name=\\\"imoNo\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"imo_no\\\" placeholder=\\\"Enter IMO number\\\" #imoNo=\\\"ngModel\\\" numberValidator integerValidator\\n                    positiveNumberValidator />\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!imoNo.valid || !imoValid\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"imoNo.hasError('notNumberError')\\\">\\n                  <small>IMO number must be a valid number.</small>\\n                </li>\\n                <li *ngIf=\\\"imoNo.hasError('notIntegerError')\\\">\\n                  <small>IMO number must be an integer.</small>\\n                </li>\\n                <li *ngIf=\\\"imoNo.hasError('notPositiveNumberError')\\\">\\n                  <small>IMO number must be a positive number.</small>\\n                </li>\\n                <li *ngIf=\\\"!imoValid\\\">\\n                  <small>{{imoErrorString}}</small>\\n                </li>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"mmsi_no\\\">MMSI Number</label>\\n                  <input [(ngModel)]=\\\"shipModel.mmsiNo\\\" (ngModelChange)=\\\"validMmsiNumber()\\\" name=\\\"mmsiNo\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"mmsi_no\\\" placeholder=\\\"Enter MMSI number\\\" #mmsiNo=\\\"ngModel\\\" integerValidator minlength=\\\"9\\\"\\n                    maxlength=\\\"9\\\" positiveNumberValidator />\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!mmsiNo.valid || !mmsiValid\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"mmsiNo.hasError('notIntegerError')\\\">\\n                  <small>MMSI number must be an integer.</small>\\n                </li>\\n                <li *ngIf=\\\"mmsiNo.hasError('notPositiveNumberError')\\\">\\n                  <small>MMSI number must be a positive number.</small>\\n                </li>\\n                <li *ngIf=\\\"mmsiNo.hasError('minlength')\\\">\\n                    <small>MMSI Number must be 9 numbers.</small>\\n                </li>\\n                <li *ngIf=\\\"mmsiNo.hasError('maxlength')\\\">\\n                    <small>MMSI Number must be 9 numbers.</small>\\n                </li>\\n                <li *ngIf=\\\"!mmsiValid\\\">\\n                  <small>{{mmsiErrorString}}</small>\\n                </li>\\n              </div>\\n            </div>\\n          </div>\\n        </app-ssn-card>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <app-ssn-card header=\\\"Ship Details\\\" icon=\\\"ship.png\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"!shipTypeSelected\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_type_select\\\">Ship Type</label>\\n                  <ng-select id=\\\"ship_type_select\\\" name=\\\"ship_type_select\\\" [items]=\\\"shipTypeList\\\" [multiple]=\\\"false\\\"\\n                    [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select ship type\\\" [(ngModel)]=\\\"selectedShipType\\\"\\n                    (change)=\\\"selectShipType($event)\\\"></ng-select>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"shipTypeSelected\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_type\\\">Ship Type</label>\\n                  <div class=\\\"input-group\\\">\\n                    <input id=\\\"ship_type\\\" name=\\\"ship_type\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"selectedShipType.name\\\"\\n                      disabled=\\\"true\\\" />\\n                    <div class=\\\"input-group-append\\\">\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"deselectShipType()\\\">\\n                        <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"year_of_build\\\">Year of Build</label>\\n                  <input [(ngModel)]=\\\"shipModel.yearOfBuild\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"yearOfBuild\\\" type=\\\"number\\\"\\n                    class=\\\"form-control form-control-sm\\\" id=\\\"year_of_build\\\" placeholder=\\\"Enter year of build\\\"\\n                    #yearOfBuild=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator />\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!yearOfBuild.valid\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"yearOfBuild.hasError('notNumberError')\\\">\\n                  <small>Year of build must be a valid number.</small>\\n                </li>\\n                <li *ngIf=\\\"yearOfBuild.hasError('notIntegerError')\\\">\\n                  <small>Year of build must be an integer.</small>\\n                </li>\\n                <li *ngIf=\\\"yearOfBuild.hasError('notPositiveNumberError')\\\">\\n                  <small>Year of build must be a positive number.</small>\\n                </li>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_length\\\">Length</label>\\n                  <div class=\\\"input-group\\\">\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"lengthTypeDropdown\\\" ngbDropdownToggle> {{\\n                        lengthTypeDropdownString\\n                        }} </button>\\n                      <div ngbDropdownMenu aria-labelledby=\\\"lengthTypeDropdown\\\">\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let lengthType of lengthTypeList\\\" (click)=\\\"selectLengthType(lengthType)\\\">{{\\n                          lengthType.name }}</button>\\n                      </div>\\n                    </div>\\n                    <input [(ngModel)]=\\\"shipModel.length\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"shipLength\\\" type=\\\"number\\\"\\n                      class=\\\"form-control form-control-sm\\\" id=\\\"ship_length\\\" placeholder=\\\"Enter ship length\\\" [disabled]=\\\"!lengthTypeSelected\\\"\\n                      #shipLength=\\\"ngModel\\\" numberValidator positiveNumberValidator />\\n                  </div>\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!shipLength.valid && lengthTypeSelected\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"shipLength.hasError('notNumberError')\\\">\\n                  <small>Ship length must be a valid number.</small>\\n                </li>\\n                <li *ngIf=\\\"shipLength.hasError('notPositiveNumberError')\\\">\\n                  <small>Ship length must be a positive number.</small>\\n                </li>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_breadth\\\">Breadth</label>\\n                  <div class=\\\"input-group\\\">\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"breadthTypeDropdown\\\" ngbDropdownToggle> {{\\n                        breadthTypeDropdownString\\n                        }} </button>\\n                      <div ngbDropdownMenu aria-labelledby=\\\"breadthTypeDropdown\\\">\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let breadthType of breadthTypeList\\\" (click)=\\\"selectBreadthType(breadthType)\\\">{{\\n                          breadthType.name }}</button>\\n                      </div>\\n                    </div>\\n                    <input [(ngModel)]=\\\"shipModel.breadth\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"breadth\\\" type=\\\"number\\\"\\n                      class=\\\"form-control form-control-sm\\\" id=\\\"ship_breadth\\\" placeholder=\\\"Enter ship breadth\\\"\\n                      [disabled]=\\\"!breadthTypeSelected\\\" #shipBreadth=\\\"ngModel\\\" numberValidator positiveNumberValidator />\\n                  </div>\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!shipBreadth.valid && breadthTypeSelected\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"shipBreadth.hasError('notNumberError')\\\">\\n                  <small>Ship breadth must be a valid number.</small>\\n                </li>\\n                <li *ngIf=\\\"shipBreadth.hasError('notPositiveNumberError')\\\">\\n                  <small>Ship breadth must be a positive number.</small>\\n                </li>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_power\\\">Power</label>\\n                  <div class=\\\"input-group\\\">\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"powerTypeDropdown\\\" ngbDropdownToggle> {{\\n                        powerTypeDropdownString\\n                        }} </button>\\n                      <div ngbDropdownMenu aria-labelledby=\\\"powerTypeDropdown\\\">\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let powerType of powerTypeList\\\" (click)=\\\"selectPowerType(powerType)\\\">{{\\n                          powerType.name }}</button>\\n                      </div>\\n                    </div>\\n                    <input [(ngModel)]=\\\"shipModel.power\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"power\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\n                      id=\\\"ship_power\\\" placeholder=\\\"Enter ship power\\\" [disabled]=\\\"!powerTypeSelected\\\" #shipPower=\\\"ngModel\\\"\\n                      numberValidator integerValidator positiveNumberValidator />\\n                  </div>\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!shipPower.valid && powerTypeSelected\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"shipPower.hasError('notNumberError')\\\">\\n                  <small>Ship power must be a valid number.</small>\\n                </li>\\n                <li *ngIf=\\\"shipPower.hasError('notIntegerError')\\\">\\n                  <small>Ship power must be an integer.</small>\\n                </li>\\n                <li *ngIf=\\\"shipPower.hasError('notPositiveNumberError')\\\">\\n                  <small>Ship power must be a positive number.</small>\\n                </li>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1 col-lg-1\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_status_dropdown\\\">Ship Status</label>\\n                  <div ngbDropdown>\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"ship_status_dropdown\\\" ngbDropdownToggle> {{\\n                      shipStatusDropdownString\\n                      }}\\n                    </button>\\n                    <div ngbDropdownMenu aria-labelledby=\\\"ship_status_dropdown\\\">\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let shipStatus of shipStatusList\\\" (click)=\\\"selectShipStatus(shipStatus)\\\">{{\\n                        shipStatus.name }}</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1 col-lg-1\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"hull_type_dropdown\\\">Hull Type</label>\\n                  <div ngbDropdown>\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"hull_type_dropdown\\\" ngbDropdownToggle> {{\\n                      hullTypeDropdownString\\n                      }}\\n                    </button>\\n                    <div ngbDropdownMenu aria-labelledby=\\\"hull_type_dropdown\\\">\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let hullType of hullTypeList\\\" (click)=\\\"selectHullType(hullType)\\\">{{\\n                        hullType.name }}</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_height\\\">Height</label>\\n                  <input [(ngModel)]=\\\"shipModel.height\\\" (ngModelChange)=\\\"touchData()\\\" #shipHeight=\\\"ngModel\\\"\\n                    numberValidator positiveNumberValidator name=\\\"height\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"height\\\" placeholder=\\\"Enter ship height\\\" />\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!shipHeight.valid\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"shipHeight.hasError('notNumberError')\\\">\\n                  <small>Ship height must be a valid number.</small>\\n                </li>\\n                <li *ngIf=\\\"shipHeight.hasError('notPositiveNumberError')\\\">\\n                  <small>Ship height must be a positive number.</small>\\n                </li>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_draught\\\">Draught</label>\\n                  <input [(ngModel)]=\\\"shipModel.draught\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"draught\\\" type=\\\"number\\\"\\n                    class=\\\"form-control form-control-sm\\\" id=\\\"ship_draught\\\" placeholder=\\\"Enter ship draught\\\"\\n                    #shipDraught=\\\"ngModel\\\" numberValidator positiveNumberValidator />\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!shipDraught.valid\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"shipDraught.hasError('notNumberError')\\\">\\n                  <small>Ship draught must be a valid number.</small>\\n                </li>\\n                <li *ngIf=\\\"shipDraught.hasError('notPositiveNumberError')\\\">\\n                  <small>Ship draught must be a positive number.</small>\\n                </li>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">Gross Tonnage</label>\\n                  <input [(ngModel)]=\\\"shipModel.grossTonnage\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"grossTonnage\\\" type=\\\"number\\\"\\n                    class=\\\"form-control form-control-sm\\\" id=\\\"gross_tonnage\\\" placeholder=\\\"Enter gross tonnage\\\"\\n                    #grossTonnage=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator />\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!grossTonnage.valid\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"grossTonnage.hasError('notNumberError')\\\">\\n                  <small>Gross tonnage must be a valid number.</small>\\n                </li>\\n                <li *ngIf=\\\"grossTonnage.hasError('notIntegerError')\\\">\\n                  <small>Gross tonnage must be an integer.</small>\\n                </li>\\n                <li *ngIf=\\\"grossTonnage.hasError('notPositiveNumberError')\\\">\\n                  <small>Gross tonnage must be a positive number.</small>\\n                </li>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">Deadweight Tonnage</label>\\n                  <input [(ngModel)]=\\\"shipModel.deadweightTonnage\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"deadweightTonnage\\\"\\n                    type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"deadweight_tonnage\\\" placeholder=\\\"Enter deadweight tonnage\\\"\\n                    #dwt=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator />\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!dwt.valid\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"dwt.hasError('notNumberError')\\\">\\n                  <small>Deadweight tonnage must be a valid number.</small>\\n                </li>\\n                <li *ngIf=\\\"dwt.hasError('notIntegerError')\\\">\\n                  <small>Deadweight tonnage must be an integer.</small>\\n                </li>\\n                <li *ngIf=\\\"dwt.hasError('notPositiveNumberError')\\\">\\n                  <small>Deadweight tonnage must be a positive number.</small>\\n                </li>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">Net Tonnage</label>\\n                  <input [(ngModel)]=\\\"shipModel.netTonnage\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"netTonnage\\\" type=\\\"number\\\"\\n                    class=\\\"form-control form-control-sm\\\" id=\\\"net_tonnage\\\" placeholder=\\\"Enter net tonnage\\\" #netTonnage=\\\"ngModel\\\"\\n                    numberValidator integerValidator positiveNumberValidator />\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!netTonnage.valid\\\" class=\\\"alert alert-danger\\\">\\n                <li *ngIf=\\\"netTonnage.hasError('notNumberError')\\\">\\n                  <small>Net tonnage must be a valid number.</small>\\n                </li>\\n                <li *ngIf=\\\"netTonnage.hasError('notIntegerError')\\\">\\n                  <small>Net tonnage must be an integer.</small>\\n                </li>\\n                <li *ngIf=\\\"netTonnage.hasError('notPositiveNumberError')\\\">\\n                  <small>Net tonnage must be a positive number.</small>\\n                </li>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"has_side_thrusters\\\">Side thrusters</label>\\n            <div class=\\\"card pt-2\\\" id=\\\"has_side_thrusters\\\">\\n              <div class=\\\"checkbox row\\\">\\n                <div class=\\\"col ml-2\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrustersBack\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"hasSideThrustersBack\\\"\\n                      type=\\\"checkbox\\\" value=\\\"\\\"> Back side thrusters</label>\\n                </div>\\n              </div>\\n              <div class=\\\"checkbox row\\\">\\n                <div class=\\\"col ml-2\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrustersFront\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"hasSideThrustersFront\\\"\\n                      type=\\\"checkbox\\\" value=\\\"\\\"> Front side thrusters</label>\\n                </div>\\n              </div>\\n              <div class=\\\"checkbox row\\\">\\n                <div class=\\\"col ml-2\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrusters\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"hasSideThrusters\\\"\\n                      type=\\\"checkbox\\\" value=\\\"\\\"> Side thrusters\\n                  </label>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"remark\\\">Remark</label>\\n            <textarea [(ngModel)]=\\\"shipModel.remark\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"remark\\\" class=\\\"form-control form-control-sm\\\"\\n              rows=\\\"4\\\" id=\\\"remark\\\"></textarea>\\n          </div>\\n        </app-ssn-card>\\n      </div>\\n    </div>\\n  </form>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header=\\\"Flag Code\\\" icon=\\\"flag.png\\\">\\n        <div *ngIf=\\\"!shipFlagCodeSelected\\\">\\n          <app-search-ship-flag-code (shipFlagCodeResult)=\\\"onShipFlagCodeResult($event)\\\"></app-search-ship-flag-code>\\n        </div>\\n\\n        <div *ngIf=\\\"shipFlagCodeSelected\\\" class=\\\"text-center\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <app-ssn-table [entryData]=shipFlagCodeProperties></app-ssn-table>\\n          </div>\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectShipFlagCode()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n        </div>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-select-ship-contact [selectedContactModelList]=\\\"shipModel.shipContact\\\" (contactModelListResult)=\\\"onContactDataResult($event)\\\"></app-select-ship-contact>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header=\\\"Owner\\\" icon=\\\"pax.png\\\">\\n        <div *ngIf=\\\"!organizationSelected\\\">\\n          <app-search-organization (organizationResult)=\\\"onOrganizationResult($event)\\\"></app-search-organization>\\n        </div>\\n\\n        <div *ngIf=\\\"organizationSelected\\\" class=\\\"text-center\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <app-ssn-table [entryData]=organizationProperties></app-ssn-table>\\n          </div>\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectOrganization()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n        </div>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-certificate-of-registry [certificateModel]=\\\"shipModel.certificateOfRegistry\\\" (certificateResult)=\\\"onCertificateOfRegistryResult($event)\\\">\\n      </app-certificate-of-registry>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header=\\\"{{ confirmHeader }}\\\" icon=\\\"checkmark.png\\\">\\n\\n        <div class=\\\"text-center\\\" *ngIf=\\\"!form.valid || !(shipModel.name && shipModel.callSign && shipModel.imoNo && shipTypeSelected\\n                        && shipModel.yearOfBuild && shipModel.length && lengthTypeSelected && shipModel.breadth && breadthTypeSelected\\n                        && shipModel.power && powerTypeSelected && hullTypeSelected && shipModel.height && shipModel.draught\\n                        && shipModel.grossTonnage && shipModel.deadweightTonnage && shipFlagCodeSelected && contactSelected\\n                        && organizationSelected && certificateSelected && shipStatusSelected)\\\">\\n          <div *ngIf=\\\"!form.valid\\\" class=\\\"text-center\\\">\\n            <div class=\\\"alert alert-danger\\\">\\n              There are errors in the form that needs to be resolved.\\n            </div>\\n          </div>\\n          <div class=\\\"mb-3\\\">\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.name\\\">Ship name not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.callSign\\\">Call sign not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.imoNo\\\">IMO number not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!imoValid\\\">IMO number not valid.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!mmsiValid\\\">MMSI number not valid.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipTypeSelected\\\">Ship type not selected.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.yearOfBuild\\\">Year of build not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.length || !lengthTypeSelected\\\">Ship length not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.breadth || !breadthTypeSelected\\\">Ship breadth not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.power || !powerTypeSelected\\\">Ship power not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!hullTypeSelected\\\">Hull type not selected.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipStatusSelected\\\">Ship status not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.height\\\">Ship height not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.draught\\\">Ship draught not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.grossTonnage\\\">Gross tonnage not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.deadweightTonnage\\\">Deadweight tonnage not set.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipFlagCodeSelected\\\">Flag code not selected.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!contactSelected\\\">At least one contact medium must be provided.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!organizationSelected\\\">Organization not selected.</p>\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!certificateSelected\\\">Certificate of registry must be provided.</p>\\n          </div>\\n          <button class=\\\"btn btn-ssn\\\" disabled>\\n            <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" />{{ confirmButtonTitle }}</button>\\n        </div>\\n\\n        <div class=\\\"text-center\\\" *ngIf=\\\"form.valid && shipModel.name && shipModel.callSign && shipModel.imoNo && shipTypeSelected\\n                        && shipModel.yearOfBuild && shipModel.length && lengthTypeSelected && shipModel.breadth && breadthTypeSelected\\n                        && shipModel.power && powerTypeSelected && hullTypeSelected && shipModel.height && shipModel.draught\\n                        && shipModel.grossTonnage && shipModel.deadweightTonnage && shipFlagCodeSelected && contactSelected\\n                        && organizationSelected && certificateSelected && shipStatusSelected && imoValid && mmsiValid\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-bordered\\\">\\n              <thead>\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\n                  <th>Ship Name</th>\\n                  <th>Call Sign</th>\\n                  <th>IMO Number</th>\\n                  <th *ngIf=\\\"shipModel.mmsiNo\\\">MMSI Number</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>{{ shipModel.name }}</td>\\n                  <td>{{ shipModel.callSign }}</td>\\n                  <td>{{ shipModel.imoNo }}</td>\\n                  <td *ngIf=\\\"shipModel.mmsiNo\\\">{{ shipModel.mmsiNo }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-bordered\\\">\\n              <thead>\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\n                  <th>Ship Type</th>\\n                  <th>Year of Build</th>\\n                  <th>Length</th>\\n                  <th>Breadth</th>\\n                  <th>Power</th>\\n                  <th>Hull Type</th>\\n                  <th>Status</th>\\n                  <th>Height</th>\\n                  <th>Draught</th>\\n                  <th>Gross Tonnage</th>\\n                  <th>Deadweight Tonnage</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td *ngIf=\\\"shipTypeSelected\\\">{{ selectedShipType.name }}</td>\\n                  <td>{{ shipModel.yearOfBuild }}</td>\\n                  <td>{{ lengthTypeDropdownString }}\\n                    <br>{{ shipModel.length }}</td>\\n                  <td>{{ breadthTypeDropdownString }}\\n                    <br>{{ shipModel.breadth }}</td>\\n                  <td>{{ powerTypeDropdownString }}\\n                    <br>{{ shipModel.power }}</td>\\n                  <td>{{ hullTypeDropdownString }}</td>\\n                  <td>{{ shipStatusDropdownString }}</td>\\n                  <td>{{ shipModel.height }}</td>\\n                  <td>{{ shipModel.draught }}</td>\\n                  <td>{{ shipModel.grossTonnage }}</td>\\n                  <td>{{ shipModel.deadweightTonnage }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <p *ngIf=\\\"shipModel.hasSideThrusters\\\">Ship has side thrusters.</p>\\n          <p *ngIf=\\\"shipModel.hasSideThrustersFront\\\">Ship has front side thrusters.</p>\\n          <p *ngIf=\\\"shipModel.hasSideThrustersBack\\\">Ship has back side thrusters.</p>\\n\\n          <div *ngIf=\\\"shipModel.remark\\\">\\n            <span>Remark:</span>\\n            <div class=\\\"card p-1 pt-3 text-left mb-3\\\">\\n              <pre>{{ shipModel.remark }}</pre>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-bordered\\\">\\n              <thead>\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\n                  <th>Country Flag</th>\\n                  <th>Ship Flag Code</th>\\n                  <th>Country</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <img src=\\\"assets/images/flags/{{ shipFlagCodeModel.country.twoCharCode | lowercase }}.png\\\" height=\\\"20px\\\" />\\n                  </td>\\n                  <td>{{ shipFlagCodeModel.country.threeCharCode }}</td>\\n                  <td>{{ shipFlagCodeModel.country.name }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n\\n          <app-selected-contact-mediums [selectedContactModelList]=\\\"shipModel.shipContact\\\"></app-selected-contact-mediums>\\n\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-bordered\\\">\\n              <thead>\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\n                  <th>Organization Name</th>\\n                  <th>Organization Number</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>{{ organizationModel.name }}</td>\\n                  <td>{{ organizationModel.organizationNo }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-bordered\\\">\\n              <thead>\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\n                  <th>Port of Registry</th>\\n                  <th>Ship Registry Number</th>\\n                  <th>Date of issue</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>{{ certificateModel.portLocation.name }}</td>\\n                  <td>{{ certificateModel.certificateNumber }}</td>\\n                  <td>{{ certificateDateString }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"text-center\\\" *ngIf=\\\"dataIsPristine\\\">\\n            <span>{{ dataIsPristineText }}</span>\\n            <br>\\n            <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n              <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n              <span>{{ confirmButtonTitle }}</span>\\n            </button>\\n          </div>\\n          <div class=\\\"text-center\\\" *ngIf=\\\"!(dataIsPristine)\\\">\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerShip()\\\">\\n              <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\n          </div>\\n        </div>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html\n// module chunks = main","import { Component, DoCheck, OnDestroy, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { OrganizationProperties } from 'app/shared/constants/organization-properties';\nimport { ShipFlagCodeProperties } from 'app/shared/constants/ship-flag-code-properties';\nimport { CertificateOfRegistryModel, OrganizationModel, ShipContactModel, ShipFlagCodeModel, ShipModel } from 'app/shared/models';\nimport { ContentService, ShipService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst RESULT_SUCCESS = 'Ship was successfully saved to the database.';\nconst RESULT_FAILURE = 'There was a problem when trying to save the ship to the database. Please try again later.';\nconst RESULT_SAVED_WITHOUT_CONTACT = 'Ship was saved to the database, but there was an error when trying to save the ship\\'s contact information. Please provide this information later.';\nconst INITIAL_DATA_IS_PRISTINE_TEXT = 'There are no unsaved changes in this page.';\nconst UPDATED_DATA_IS_PRISTINE_TEXT = 'Your changes have been saved.';\n\n@Component({\n  selector: 'app-register-ship',\n  templateUrl: './register-ship.component.html',\n  styleUrls: ['./register-ship.component.css']\n})\nexport class RegisterShipComponent implements OnInit, OnDestroy {\n\n  shipModel = new ShipModel();\n  shipSource: any;\n\n  newShip = false;\n  shipHeader: string;\n  confirmHeader: string;\n  confirmButtonTitle: string;\n\n  hullTypeSelected = false;\n  lengthTypeSelected = false;\n  breadthTypeSelected = false;\n  powerTypeSelected = false;\n  shipStatusSelected = false;\n\n  shipTypeList: any[];\n  hullTypeList: any[];\n  lengthTypeList: any[];\n  breadthTypeList: any[];\n  powerTypeList: any[];\n  shipStatusList: any[];\n\n  selectedShipType: any;\n  shipTypeSelected = false;\n  shipTypeSearchFailed = false;\n\n  hullTypeDropdownString = 'Select hull type';\n  lengthTypeDropdownString = 'Select type';\n  breadthTypeDropdownString = 'Select type';\n  powerTypeDropdownString = 'Select type';\n  shipStatusDropdownString = 'Select status';\n  mmsiErrorString = '';\n  imoErrorString = '';\n  mmsiValid = true;\n  imoValid = true;\n\n  shipFlagCodeSelected: boolean;\n  shipFlagCodeModel: ShipFlagCodeModel;\n  shipFlagCodeProperties = new ShipFlagCodeProperties().getPropertyList();\n\n  contactSelected: boolean;\n  selectedContactModelList: ShipContactModel[];\n\n  organizationSelected: boolean;\n  organizationModel: OrganizationModel;\n  organizationProperties = new OrganizationProperties().getPropertyList();\n\n  certificateSelected = false;\n  certificateModel: CertificateOfRegistryModel;\n  certificateDateString: string;\n\n  dataIsPristine = true;\n  dataIsPristineText: string;\n\n  shipDataSubscription: Subscription;\n\n  shipTypesSubscription: Subscription;\n  hullTypesSubscription: Subscription;\n  lengthTypesSubscription: Subscription;\n  breadthTypesSubscription: Subscription;\n  powerTypesSubscription: Subscription;\n  shipStatusListSubscription: Subscription;\n  shipSourceSubscription: Subscription;\n\n  constructor(\n    private shipService: ShipService,\n    private contentService: ContentService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n\n    this.shipSourceSubscription = this.shipService.getInternalShipSource().subscribe(res => {\n      this.shipSource = res;\n    });\n\n    this.dataIsPristineText = INITIAL_DATA_IS_PRISTINE_TEXT;\n    this.certificateModel = new CertificateOfRegistryModel();\n    this.shipDataSubscription = this.shipService.shipData$.subscribe(data => {\n      if (data) {\n        this.setAllValues(data);\n      } else if (!this.newShip) {\n        this.newShip = true;\n        this.shipHeader = 'Register New Ship';\n        this.confirmHeader = 'Confirm Ship Registration';\n        this.confirmButtonTitle = 'Register Ship';\n      }\n    });\n    this.shipTypesSubscription = this.shipService.getShipTypes().subscribe(data => (this.shipTypeList = data));\n    this.hullTypesSubscription = this.shipService.getHullTypes().subscribe(data => (this.hullTypeList = data));\n    this.lengthTypesSubscription = this.shipService.getLengthTypes().subscribe(data => (this.lengthTypeList = data));\n    this.breadthTypesSubscription = this.shipService.getBreadthTypes().subscribe(data => (this.breadthTypeList = data));\n    this.powerTypesSubscription = this.shipService.getPowerTypes().subscribe(data => (this.powerTypeList = data));\n    this.shipStatusListSubscription = this.shipService.getShipStatusList().subscribe(data => (this.shipStatusList = data));\n  }\n\n  ngOnDestroy() {\n    this.shipDataSubscription.unsubscribe();\n    this.shipTypesSubscription.unsubscribe();\n    this.hullTypesSubscription.unsubscribe();\n    this.lengthTypesSubscription.unsubscribe();\n    this.breadthTypesSubscription.unsubscribe();\n    this.powerTypesSubscription.unsubscribe();\n    this.shipStatusListSubscription.unsubscribe();\n  }\n\n  setAllValues(ship: ShipModel) {\n    this.newShip = false;\n    this.shipHeader = 'Edit Ship';\n    this.confirmHeader = 'Confirm Ship Changes';\n    this.confirmButtonTitle = 'Apply Changes';\n    this.shipModel = ship;\n    this.selectedShipType = ship.shipType;\n    this.shipTypeSelected = ship.shipType != null;\n    this.organizationModel = ship.organization;\n    this.organizationSelected = ship.organization != null;\n    this.selectedContactModelList = ship.shipContact;\n\n    this.hullTypeSelected = ship.shipHullType != null;\n    if (this.hullTypeSelected) {\n      this.hullTypeDropdownString = ship.shipHullType.name;\n    }\n    this.lengthTypeSelected = ship.shipLengthType != null;\n    if (this.lengthTypeSelected) {\n      this.lengthTypeDropdownString = ship.shipLengthType.name;\n    }\n    this.hullTypeSelected = ship.shipHullType != null;\n    if (this.hullTypeSelected) {\n      this.hullTypeDropdownString = ship.shipHullType.name;\n    }\n    this.breadthTypeSelected = ship.shipBreadthType != null;\n    if (this.breadthTypeSelected) {\n      this.breadthTypeDropdownString = ship.shipBreadthType.name;\n    }\n    this.powerTypeSelected = ship.shipPowerType != null;\n    if (this.powerTypeSelected) {\n      this.powerTypeDropdownString = ship.shipPowerType.name;\n    }\n    this.shipStatusSelected = ship.shipStatus != null;\n    if (this.shipStatusSelected) {\n      this.shipStatusDropdownString = ship.shipStatus.name;\n    }\n    this.setShipFlagCode(ship.shipFlagCode);\n    this.setOrganization(ship.organization);\n    this.setCertificateOfRegistry(ship.certificateOfRegistry);\n    this.setContactData(ship.shipContact);\n\n  }\n\n  selectShipType($event: any) {\n    this.shipModel.shipTypeId = $event.shipTypeId;\n    this.shipTypeSelected = true;\n    this.touchData();\n  }\n\n  deselectShipType() {\n    this.shipModel.shipTypeId = null;\n    this.selectedShipType = null;\n    this.shipTypeSelected = false;\n  }\n\n  selectLengthType(lengthType: any) {\n    this.shipModel.shipLengthTypeId = lengthType.shipLengthTypeId;\n    this.lengthTypeDropdownString = lengthType.name;\n    this.lengthTypeSelected = true;\n    this.touchData();\n  }\n\n  selectBreadthType(breadthType: any) {\n    this.shipModel.shipBreadthTypeId = breadthType.shipBreadthTypeId;\n    this.breadthTypeDropdownString = breadthType.name;\n    this.breadthTypeSelected = true;\n    this.touchData();\n  }\n\n  selectPowerType(powerType: any) {\n    this.shipModel.shipPowerTypeId = powerType.shipPowerTypeId;\n    this.powerTypeDropdownString = powerType.name;\n    this.powerTypeSelected = true;\n    this.touchData();\n  }\n\n  selectHullType(hullType: any) {\n    this.shipModel.shipHullTypeId = hullType.shipHullTypeId;\n    this.hullTypeDropdownString = hullType.name;\n    this.hullTypeSelected = true;\n    this.touchData();\n  }\n\n  selectShipStatus(shipStatus: any) {\n    this.shipModel.shipStatusId = shipStatus.shipStatusId;\n    this.shipStatusDropdownString = shipStatus.name;\n    this.shipStatusSelected = true;\n    this.touchData();\n  }\n\n  onShipFlagCodeResult(shipFlagCodeResult) {\n    this.setShipFlagCode(shipFlagCodeResult);\n    this.touchData();\n  }\n\n  setShipFlagCode(shipFlagCodeData: ShipFlagCodeModel) {\n    this.shipFlagCodeModel = shipFlagCodeData;\n    if (shipFlagCodeData) {\n      this.shipModel.shipFlagCodeId = shipFlagCodeData.shipFlagCodeId;\n      this.shipFlagCodeSelected = true;\n      ShipFlagCodeProperties.setShipFlagCodeData(this.shipFlagCodeProperties, this.shipFlagCodeModel);\n      const twoCharCode = this.shipFlagCodeModel.country.twoCharCode.toLowerCase() || 'xx';\n      const countryFlag = twoCharCode + '.png';\n      ShipFlagCodeProperties.setCountry(this.shipFlagCodeProperties, this.shipFlagCodeModel.country.name, countryFlag);\n    }\n  }\n\n  deselectShipFlagCode() {\n    this.shipFlagCodeSelected = false;\n    this.shipFlagCodeModel = null;\n    this.shipModel.shipFlagCodeId = null;\n  }\n\n  onContactDataResult(contactData: ShipContactModel[]) {\n    this.setContactData(contactData);\n    this.touchData();\n  }\n\n  setContactData(contactData) {\n    this.selectedContactModelList = contactData;\n    this.shipModel.shipContact = this.selectedContactModelList;\n    this.contactSelected = contactData.length !== 0;\n  }\n\n  onOrganizationResult(organizationResult) {\n    this.setOrganization(organizationResult);\n    this.touchData();\n  }\n\n  setOrganization(organizationData: OrganizationModel) {\n    this.organizationModel = organizationData;\n    if (organizationData) {\n      this.shipModel.organizationId = organizationData.organizationId;\n      this.organizationSelected = true;\n      OrganizationProperties.setOrganizationData(\n        this.organizationProperties,\n        this.organizationModel\n      );\n    }\n  }\n\n  deselectOrganization() {\n    this.organizationSelected = false;\n    this.organizationModel = null;\n    this.shipModel.organizationId = null;\n  }\n\n  onCertificateOfRegistryResult(certificateResult) {\n    this.setCertificateOfRegistry(certificateResult);\n    this.touchData();\n  }\n\n  setCertificateOfRegistry(certificateData: CertificateOfRegistryModel) {\n    this.certificateModel = certificateData;\n    if (certificateData) {\n      if (this.certificateModel.dateOfIssue) {\n        this.certificateDateString = this.dateString(new Date(this.certificateModel.dateOfIssue));\n      }\n      if (this.certificateModel.dateOfIssue && this.certificateModel.portLocationId\n          && this.certificateModel.portLocation && this.certificateModel.certificateNumber) {\n        this.certificateSelected = true;\n      } else {\n        this.certificateSelected = false;\n      }\n    } else {\n      this.certificateSelected = false;\n    }\n  }\n\n  touchData() {\n    this.dataIsPristine = false;\n  }\n\n  private updateCertificate() {\n    // safeCertificate is used for removing unnecessary location objects within the certificate\n    const safeCertificate = new CertificateOfRegistryModel();\n    safeCertificate.certificateNumber = this.certificateModel.certificateNumber;\n    safeCertificate.dateOfIssue = this.certificateModel.dateOfIssue;\n    safeCertificate.portLocationId = this.certificateModel.portLocationId;\n    this.shipModel.certificateOfRegistry = safeCertificate;\n  }\n\n  registerShip() {\n    this.updateCertificate();\n    if (this.newShip) {\n      this.shipModel.shipSourceId = this.shipSource.shipSourceId;\n      this.shipService.registerShip(this.shipModel).subscribe(\n        result => {\n          this.shipModel.shipId = result.shipId;\n          const shipContactList = this.selectedContactModelList.map(\n            contactModel => {\n              const shipContact = new ShipContactModel();\n              shipContact.shipId = this.shipModel.shipId;\n              shipContact.contactMediumId = contactModel.contactMedium.contactMediumId;\n              shipContact.contactValue = contactModel.contactValue;\n              shipContact.isPreferred = contactModel.isPreferred;\n              shipContact.comments = contactModel.comments;\n              return shipContact;\n            }\n          );\n          this.saveShipContactList(shipContactList);\n        },\n        error => {\n          console.log(error);\n          this.openConfirmationModal(\n            ConfirmationModalComponent.TYPE_FAILURE,\n            RESULT_FAILURE\n          );\n        }\n      );\n    } else {\n      // remove child dependencies\n      this.shipModel.certificateOfRegistryId = this.certificateModel.certificateOfRegistryId;\n      this.shipModel.organization = null;\n      this.shipModel.shipStatus = null;\n      this.shipModel.shipPowerType = null;\n      this.shipModel.shipBreadthType = null;\n      this.shipModel.shipLengthType = null;\n      this.shipModel.shipSource = null;\n      this.shipModel.shipFlagCode = null;\n      this.shipModel.shipType = null;\n      this.shipModel.shipContact = null;\n      // update\n      this.shipService.updateShip(this.shipModel).subscribe(\n        result => {\n          const shipContactList = this.selectedContactModelList.map(\n            contactModel => {\n              const shipContact = new ShipContactModel();\n              shipContact.shipId = this.shipModel.shipId;\n              shipContact.contactMediumId = contactModel.contactMedium.contactMediumId;\n              shipContact.contactValue = contactModel.contactValue;\n              shipContact.isPreferred = contactModel.isPreferred;\n              shipContact.comments = contactModel.comments;\n              return shipContact;\n            }\n          );\n          this.saveShipContactList(shipContactList);\n        },\n        error => {\n          console.log(error);\n          this.openConfirmationModal(\n            ConfirmationModalComponent.TYPE_FAILURE,\n            RESULT_FAILURE\n          );\n        }\n      );\n    }\n    this.dataIsPristineText = UPDATED_DATA_IS_PRISTINE_TEXT;\n  }\n\n  saveShipContactList(shipContactList: ShipContactModel[]) {\n    this.shipService.saveShipContactList(shipContactList).subscribe(\n      result => {\n        if (result) {\n          this.openConfirmationModal(\n            ConfirmationModalComponent.TYPE_SUCCESS,\n            RESULT_SUCCESS\n          );\n        }\n      },\n      error => {\n        console.log(error);\n        this.openConfirmationModal(\n          ConfirmationModalComponent.TYPE_WARNING,\n          RESULT_SAVED_WITHOUT_CONTACT\n        );\n      }\n    );\n  }\n\n  private goBack() {\n    this.contentService.setContent(CONTENT_NAMES.VIEW_SHIPS);\n  }\n\n  dateString(date: Date) {\n    return (\n      date.getFullYear() +\n      '-' +\n      this.dateTimeFormat(date.getMonth() + 1) +\n      '-' +\n      this.dateTimeFormat(date.getDate())\n    );\n  }\n\n  dateTimeFormat(number: number) {\n    if (number <= 9) {\n      return '0' + number;\n    } else {\n      return number;\n    }\n  }\n\n  validMmsiNumber() {\n    this.mmsiValid = true;\n    this.mmsiErrorString = '';\n    const mmsi = this.shipModel.mmsiNo;\n    if (mmsi == null || mmsi === undefined) {\n      return;\n    }\n    if (mmsi.toString().length !== 9) {\n      this.mmsiErrorString = 'MMSI number must be 9 characters';\n      this.mmsiValid = false;\n      return;\n    }\n    if (mmsi < 200000000 || mmsi > 799999999) {\n      this.mmsiErrorString = 'MMSI number must be between 200000000 and 799999999';\n      this.mmsiValid = false;\n      return;\n    }\n    this.touchData();\n  }\n\n  validImoNumber() {\n    this.imoValid = true;\n    this.imoErrorString = '';\n    const Imo = this.shipModel.imoNo.toString();\n    if (Imo == null || Imo === undefined) {\n      this.imoValid = true;\n      this.imoErrorString = '';\n      return;\n    }\n    if (Imo.length !== 7) {\n      this.imoErrorString = 'IMO number must be 7 characters';\n      this.imoValid = false;\n      return;\n    }\n    const imoNumberInt = parseInt(Imo, 10);\n\n    const c1 = Math.floor((imoNumberInt / 1000000));\n    const c2 = Math.floor((imoNumberInt / 100000));\n    const c3 = Math.floor((imoNumberInt / 10000));\n    const c4 = Math.floor((imoNumberInt / 1000));\n    const c5 = Math.floor((imoNumberInt / 100));\n    const c6 = Math.floor((imoNumberInt / 10));\n\n    const d1 = Math.floor(c1);\n    const d2 = Math.floor(c2 - (c1 * 10));\n    const d3 = Math.floor(c3 - (c2 * 10));\n    const d4 = Math.floor(c4 - (c3 * 10));\n    const d5 = Math.floor(c5 - (c4 * 10));\n    const d6 = Math.floor(c6 - (c5 * 10));\n    const d7 = Math.floor(imoNumberInt - (c6 * 10));\n\n\n    const CheckSum = (d1 * 7 + d2 * 6 + d3 * 5 + d4 * 4 + d5 * 3 + d6 * 2) % 10;\n\n    if (CheckSum === d7) {\n      this.imoValid = true;\n      this.touchData();\n      return;\n    } else {\n      this.imoErrorString = 'This is not a valid IMO number';\n      this.imoValid = false;\n      return;\n    }\n  }\n\n  private openConfirmationModal(modalType: string, bodyText: string) {\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\n    modalRef.componentInstance.modalType = modalType;\n    modalRef.componentInstance.bodyText = bodyText;\n    modalRef.result.then(\n      result => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\n          this.goBack();\n        }\n      },\n      reason => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\n          this.goBack();\n        }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\n    <app-ssn-card header=\\\"Register New Ship\\\" icon=\\\"ship.png\\\">\\n      <div class=\\\"text-center\\\">\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewShip()\\\">Register New Ship</button>\\n      </div>\\n    </app-ssn-card>\\n  </div>\\n</div>\\n\\n<app-ssn-card header=\\\"Ship Search\\\" icon=\\\"ship.png\\\">\\n  <app-search-ship [showDropdown]=false (shipSearchResult)=\\\"onShipSearchResult($event)\\\"></app-search-ship>\\n  <br>\\n  <div>\\n    <app-ship-smart-table></app-ship-smart-table>\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ContentService, ShipService } from 'app/shared/services/';\n\n@Component({\n  selector: 'app-view-ship-info',\n  templateUrl: './view-ship-info.component.html',\n  styleUrls: ['./view-ship-info.component.css']\n})\nexport class ViewShipInfoComponent implements OnInit {\n\n  constructor(\n    private shipService: ShipService,\n    private contentService: ContentService\n  ) { }\n\n  ngOnInit() { }\n\n  onShipSearchResult(shipSearchResult) {\n    this.shipService.setShipSearchData(shipSearchResult);\n  }\n\n  registerNewShip() {\n    this.shipService.setShipData(null);\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_SHIP);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css\n// module id = ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"{{userHeader}}\\\" icon=\\\"user.png\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card *ngIf=\\\"!isDrafted\\\" header=\\\"Personal Details\\\" icon=\\\"user-info.png\\\" id=\\\"personalia\\\">\\n        <form #f=\\\"ngForm\\\" novalidate>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"email\\\">Email</label>\\n                  <input id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\"\\n                    [email]=\\\"true\\\" (ngModelChange)=\\\"emailChecked = false\\\" (blur)=\\\"userExists(email.valid)\\\" autocomplete=\\\"username\\\"\\n                    tmFocus validateEmail>\\n                  <small *ngIf=\\\"!email.valid && !email.pristine\\\" class=\\\"text-danger\\\">Please enter a valid email address</small>\\n                  <div *ngIf=\\\"emailChecked && !emailTaken\\\">\\n                    <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/green/checkmark.png\\\">\\n                    <small class=\\\"text-success\\\">email available</small>\\n                  </div>\\n                  <div *ngIf=\\\"emailChecked && emailTaken\\\">\\n                    <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/red/warning.png\\\">\\n                    <small class=\\\"text-danger\\\">email is already in use</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"given_name\\\">Given name</label>\\n                  <input id=\\\"given_name\\\" name=\\\"givenName\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.givenName\\\" placeholder=\\\"Enter Given name\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"surname\\\">Surname</label>\\n                  <input id=\\\"surname\\\" name=\\\"surname\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.surname\\\" placeholder=\\\"Enter surname\\\">\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"phone_number\\\">Phone number</label>\\n                  <input id=\\\"phone_number\\\" name=\\\"phoneNumber\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.phoneNumber\\\" placeholder=\\\"Enter phone number\\\" type=\\\"number\\\">\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"company_phone_number\\\">Company phone number</label>\\n                  <input id=\\\"company_phone_number\\\" name=\\\"companyPhoneNumber\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.companyPhoneNumber\\\"\\n                    placeholder=\\\"Enter your company phone number\\\" type=\\\"number\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"company_email\\\">Company email</label>\\n                  <input id=\\\"company_email\\\" name=\\\"companyEmail\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.companyEmail\\\" #compEmail=\\\"ngModel\\\"\\n                    [email]=\\\"true\\\" tmFocus validateEmail placeholder=\\\"Enter your company email address\\\">\\n                </div>\\n                <small *ngIf=\\\"!compEmail.valid && !compEmail.pristine\\\" class=\\\"text-danger\\\">Please enter a valid email address</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header=\\\"Select Agent Company\\\" icon=\\\"pax.png\\\">\\n        <div *ngIf=\\\"!organizationSelected\\\">\\n          <app-search-organization [filter]=\\\"filterOrganization\\\" (organizationResult)=\\\"onOrganizationResult($event)\\\"></app-search-organization>\\n        </div>\\n\\n        <div *ngIf=\\\"organizationSelected\\\" class=\\\"text-center\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <app-ssn-table [entryData]=organizationProperties></app-ssn-table>\\n          </div>\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectOrganization()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n        </div>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header=\\\"User rights\\\" icon=\\\"verification-clipboard.png\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-center\\\">\\n            <span class=\\\"no-wrap\\\">Select a role for this user</span>\\n          </div>\\n          <ng-select id=\\\"roleSelected\\\" [items]=\\\"roleList\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select role\\\"\\n            [(ngModel)]=\\\"user.roleName\\\">\\n          </ng-select>\\n        </div>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header=\\\"{{confirmHeader}}\\\">\\n        <div class=\\\"text-center\\\" *ngIf=\\\"!(user.email && emailChecked && !emailTaken && organizationSelected && user.roleName)\\\">\\n          <div class=\\\"mb-3\\\">\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!user.email\\\">Email not set.</p>\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"user.email && emailChecked && emailTaken\\\">Selected email is already in use.</p>\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!organizationSelected\\\">Organization not selected.</p>\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!user.roleName\\\">Role not assigned.</p>\\n          </div>\\n          <button class=\\\"btn btn-ssn\\\" disabled>Register User</button>\\n        </div>\\n        <div class=\\\"text-center\\\" *ngIf=\\\"user.email && emailChecked && !emailTaken && organizationSelected && user.roleName\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-bordered\\\">\\n              <thead>\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\n                  <th *ngIf=\\\"user.givenName\\\">Given name</th>\\n                  <th *ngIf=\\\"user.surname\\\">Surname</th>\\n                  <th>Email</th>\\n                  <th *ngIf=\\\"user.phoneNumber\\\">Phone number</th>\\n                  <th>Organization</th>\\n                  <th>Role</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td *ngIf=\\\"user.givenName\\\">{{ user.givenName }}</td>\\n                  <td *ngIf=\\\"user.surname\\\">{{ user.surname }}</td>\\n                  <td> {{ user.email }} </td>\\n                  <td *ngIf=\\\"user.phoneNumber\\\">{{ user.phoneNumber }}</td>\\n                  <td>{{ organizationModel.name }}</td>\\n                  <td>{{ user.roleName }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerUser()\\\">{{confirmButtonTitle}}</button>\\n        </div>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n</app-ssn-bg>\\n\\n\\n\\n<!-- <ng-template #template let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">User registration result</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div *ngIf=\\\"registrationSuccessful\\\">\\n      <span>User registered successfully.</span>\\n      <br>\\n      <span>Please click the link below to set a new password for the user:</span>\\n      <br>\\n      <span><a href={{emailConfirmationLink}}>link</a></span>\\n    </div>\\n    <div *ngIf=\\\"!registrationSuccessful\\\">\\n      <span>Something went wrong while attempting to register the user!</span>\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\n        <span>Close</span>\\n      </button>\\n  </div>\\n</ng-template> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html\n// module id = ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ORGANIZATION_TYPES } from 'app/shared/constants/enumValues';\nimport { OrganizationProperties } from 'app/shared/constants/organization-properties';\nimport { AccountService, ContentService, OrganizationService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\nimport { OrganizationModel, UserModel } from '../../../../../shared/models/';\n\nconst RESULT_SUCCESS = 'User was successfully registered.';\nconst RESULT_FAILURE = 'There was a problem when trying to register the user. Please try again later.';\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit, OnDestroy {\n\n  newUser = true;\n  userHeader = 'REGISTER USER';\n  confirmHeader = 'Confirm User Registration';\n  confirmButtonTitle = 'Register User';\n  filterOrganization = ORGANIZATION_TYPES.AGENT_COMPANY;\n\n  preUpdateEmail = '';\n\n  user: UserModel = {\n    email: '',\n    phoneNumber: '',\n    givenName: '',\n    surname: '',\n    roleName: '',\n    organizationId: '',\n    companyEmail: '',\n    companyPhoneNumber: '',\n    id: null\n  };\n  emailTaken: boolean;\n  emailChecked: boolean;\n\n  organizationModel: any;\n  organizationSelected: boolean;\n  organizationProperties = new OrganizationProperties().getPropertyList();\n\n  roleList: any[];\n  selectedRole: any;\n\n  getAllRolesSubscription: Subscription;\n  userDataSubscription: Subscription;\n\n  registrationSuccessful: boolean;\n  emailConfirmationLink: string;\n\n  constructor(\n    private accountService: AccountService,\n    private contentService: ContentService,\n    private modalService: NgbModal,\n    private organizationService: OrganizationService\n  ) { }\n\n  ngOnInit() {\n    this.getAllRolesSubscription = this.accountService.getAllRoles()\n    .subscribe(\n      data => this.roleList = data\n    );\n\n    this.userDataSubscription = this.accountService.userData$.subscribe(data => {\n      if (data) {\n        data.roleName = data.role;\n        this.setAllValues(data);\n      }\n    });\n\n    this.organizationService.setOrganizationData(null);\n    this.organizationService.organizationData$.subscribe(\n      data => {\n        if (data) {\n          this.organizationModel = data;\n          this.user.organizationId = data.organizationId;\n          this.organizationSelected = true;\n        } else {\n          this.organizationSelected = false;\n        }\n      }\n    );\n  }\n\n  setAllValues(user: UserModel) {\n    this.newUser = false;\n    this.userHeader = 'EDIT USER';\n    this.confirmHeader = 'Confirm User Changes';\n    this.confirmButtonTitle = 'Apply Changes';\n\n    this.preUpdateEmail = user.email;\n\n    // get and set the associated organization.\n    // tslint:disable-next-line:radix\n    this.organizationService.getOrganizationById(parseInt(user.organizationId)).subscribe(data => {\n      this.organizationService.setOrganizationData(data);\n      this.setOrganization(data);\n    });\n\n    // this.emailTaken = false;\n    this.emailChecked = true;\n\n    this.user = user;\n  }\n\n  ngOnDestroy() {\n    this.getAllRolesSubscription.unsubscribe();\n  }\n  userExists(emailValid: boolean) {\n\n    if (emailValid) {\n\n      if (this.user.email != this.preUpdateEmail) {\n\n        return this.accountService.emailTaken(this.user.email)\n        .subscribe(result => {\n          this.emailTaken = result;\n          this.emailChecked = true;\n        });\n      } else {\n        this.emailTaken = false;\n        this.emailChecked = true;\n      }\n    }\n  }\n\n  registerUser() {\n\n    if (this.newUser) {\n\n      this.accountService.registerUser(this.user)\n      .subscribe(\n        result => {\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\n            // this.openCustomModal(template, true);  // SUCCESS\n        },\n        error => {\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\n          // this.openCustomModal(template, false);  // FAILURE\n        }\n      );\n\n    } else {\n\n      this.accountService.updateUser(this.user).subscribe(result => {\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\n      },\n      error => {\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\n        // this.openCustomModal(template, false);  // FAILURE\n      });\n    }\n\n  }\n\n  onOrganizationResult(organizationResult) {\n    this.setOrganization(organizationResult);\n  }\n\n  setOrganization(organizationData) {\n    this.organizationModel = organizationData;\n    this.user.organizationId = organizationData.organizationId;\n    this.organizationSelected = true;\n    OrganizationProperties.setOrganizationData(this.organizationProperties, this.organizationModel);\n  }\n\n  deselectOrganization() {\n    this.organizationModel = null;\n    this.user.organizationId = null;\n    this.organizationSelected = false;\n  }\n\n  private goBack() {\n    this.contentService.setContent(CONTENT_NAMES.VIEW_USERS);\n  }\n\n  private openConfirmationModal(modalType: string, bodyText: string) {\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\n    modalRef.componentInstance.modalType = modalType;\n    modalRef.componentInstance.bodyText = bodyText;\n    modalRef.result.then(\n      result => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\n      },\n      reason => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\n      }\n    );\n  }\n\n  private openCustomModal(template: any, success: boolean) {\n    this.registrationSuccessful = success;\n    this.modalService.open(template);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/user/view-user-info/view-user-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/user/view-user-info/view-user-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\n    <app-ssn-card header=\\\"Register New User\\\" icon=\\\"user.png\\\">\\n      <div class=\\\"text-center\\\">\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewUser()\\\">Register New User</button>\\n      </div>\\n    </app-ssn-card>\\n  </div>\\n</div>\\n\\n<app-ssn-card header=\\\"User Search\\\" icon=\\\"user.png\\\">\\n  <app-search-user [showDropdown]=false (userSearchResult)=\\\"onUserSearchResult($event)\\\"></app-search-user>\\n  <br>\\n  <div>\\n    <app-user-smart-table></app-user-smart-table>\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/user/view-user-info/view-user-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/user/view-user-info/view-user-info.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { AccountService, ContentService } from 'app/shared/services/';\n\n@Component({\n  selector: 'app-view-user-info',\n  templateUrl: './view-user-info.component.html',\n  styleUrls: ['./view-user-info.component.css']\n})\nexport class ViewUserInfoComponent implements OnInit, OnDestroy {\n\n  constructor(\n    private accountService: AccountService,\n    private contentService: ContentService\n  ) { }\n\n  ngOnInit() { }\n\n  onUserSearchResult(userSearchResult) {\n    this.accountService.setUserSearchData(userSearchResult);\n  }\n\n  registerNewUser() {\n    this.accountService.setUserData(null);\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_USER);\n  }\n\n  ngOnDestroy() {\n    this.accountService.setUserSearchData([]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/user/view-user-info/view-user-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/content-container.component.css\n// module id = ./src/app/main-content/content-container/content-container.component.css\n// module chunks = main","module.exports = \"<div [ngSwitch]=\\\"selectedComponent\\\">\\n  <app-account-overview *ngSwitchCase=\\\"cn.ACCOUNT_HOME\\\"></app-account-overview>\\n  <app-register-user *ngSwitchCase=\\\"cn.REGISTER_USER\\\"></app-register-user>\\n  <app-view-user-info *ngSwitchCase=\\\"cn.VIEW_USERS\\\"></app-view-user-info>\\n  <app-view-ship-info *ngSwitchCase=\\\"cn.VIEW_SHIPS\\\"></app-view-ship-info>\\n  <app-register-ship *ngSwitchCase=\\\"cn.REGISTER_SHIP\\\"></app-register-ship>\\n  <app-view-location-info *ngSwitchCase=\\\"cn.LOCATIONS\\\"></app-view-location-info>\\n  <app-register-location *ngSwitchCase=\\\"cn.REGISTER_LOCATION\\\"></app-register-location>\\n  <app-view-organization-info *ngSwitchCase=\\\"cn.VIEW_ORGANIZATIONS\\\"></app-view-organization-info>\\n  <app-register-organization *ngSwitchCase=\\\"cn.REGISTER_ORGANIZATION\\\"></app-register-organization>\\n  <app-port-call *ngSwitchCase=\\\"cn.VIEW_PORT_CALLS\\\"></app-port-call>\\n  <app-registration *ngSwitchCase=\\\"cn.REGISTER_PORT_CALL\\\"></app-registration>\\n  <app-view-port-call *ngSwitchCase=\\\"cn.VIEW_PORT_CALL\\\"></app-view-port-call>\\n  <app-clearance *ngSwitchCase=\\\"cn.PORT_CALL_CLEARANCE\\\"></app-clearance>\\n  <app-whats-new *ngSwitchCase=\\\"cn.WHATS_NEW\\\"></app-whats-new>\\n  <div class=\\\"alert alert-danger\\\" *ngSwitchDefault>Oops, something went wrong. Please reload the page.</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/content-container.component.html\n// module id = ./src/app/main-content/content-container/content-container.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ContentService } from 'app/shared/services/content.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-content-container',\n  templateUrl: './content-container.component.html',\n  styleUrls: ['./content-container.component.css']\n})\nexport class ContentContainerComponent implements OnInit, OnDestroy {\n\n  cn = CONTENT_NAMES;\n  selectedComponent: string;\n\n  contentNameSubscription: Subscription;\n\n  constructor(private contentService: ContentService) {}\n\n  ngOnInit() {\n    this.contentNameSubscription = this.contentService.contentName$.subscribe((content) => {\n      this.selectedComponent = content;\n    });\n  }\n\n  ngOnDestroy() {\n    this.contentNameSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/content-container.component.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { HeaderModule } from '../header/header.module';\nimport { AccountModule } from './account/account.module';\nimport { BasisDataModule } from './basis-data/basis-data.module';\nimport { ContentContainerComponent } from './content-container.component';\nimport { PortCallModule } from './port-call/port-call.module';\n\n@NgModule({\n  imports: [\n    NgbModule,\n    CommonModule,\n    PortCallModule,\n    BasisDataModule,\n    SharedModule,\n    AccountModule,\n    HeaderModule\n  ],\n  declarations: [ContentContainerComponent],\n  exports: [ContentContainerComponent]\n})\nexport class ContentContainerModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/content-container.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.css\n// module id = ./src/app/main-content/content-container/port-call/clearance/clearance.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"PORT CALL CLEARANCE\\\" icon=\\\"stamp.png\\\">\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col\\\">\\n      <app-ship-info-table></app-ship-info-table>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col\\\">\\n      <app-location-time-info-table></app-location-time-info-table>\\n    </div>\\n  </div>\\n\\n  <app-confirmation-view></app-confirmation-view>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card header=\\\"Clearance\\\" icon=\\\"stamp.png\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"remark\\\">Remark</label>\\n          <textarea class=\\\"form-control\\\" rows=\\\"3\\\" id=\\\"remark\\\" [(ngModel)]=\\\"clearanceText\\\"></textarea>\\n        </div>\\n        <div class=\\\"text-center\\\">\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"showWarningBox(content, true)\\\">\\n            <div class=\\\"mx-auto\\\">\\n              <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"32px\\\">\\n            </div>\\n            <small>Accept</small>\\n          </button>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"showWarningBox(content, false)\\\">\\n            <div class=\\\"mx-auto\\\">\\n              <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"32px\\\">\\n            </div>\\n            <small>Reject</small>\\n          </button>\\n        </div>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row text-center\\\">\\n    <div class=\\\"col\\\">\\n      <button class=\\\"btn btn-outline-light\\\" (click)=\\\"goBack()\\\" (mouseover)=\\\"backButtonIcon='left-arrow'\\\" (mouseout)=\\\"backButtonIcon='white/left-arrow'\\\">\\n        <img src=\\\"assets/images/icons/128x128/{{backButtonIcon}}.png\\\" height=\\\"32px\\\">\\n        <span class=\\\"no-wrap\\\"> GO BACK</span>\\n      </button>\\n    </div>\\n  </div>\\n</app-ssn-bg>\\n\\n<ng-template #content let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Confirm Clearance</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div *ngIf=\\\"clearanceText && clearanceText.length > 0\\\">\\n      <span>Are you sure you want to submit a clearance response with the following remark:</span>\\n      <br>\\n      <pre>{{ clearanceText }}</pre>\\n    </div>\\n    <div *ngIf=\\\"!(clearanceText && clearanceText.length > 0)\\\">\\n      <span>Are you sure you want to submit a clearance response with no remark?</span>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-success\\\" *ngIf=\\\"givingClearance\\\" (click)=\\\"saveClearance(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\">\\n      <span>Give Clearance</span>\\n    </button>\\n    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"!givingClearance\\\" (click)=\\\"saveClearance(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\n      <span>Reject Clearance</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\n      <span>Cancel</span>\\n    </button>\\n  </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.html\n// module id = ./src/app/main-content/content-container/port-call/clearance/clearance.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ClearanceModel } from 'app/shared/models/';\nimport { ContentService, PortCallService, ShipService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-clearance',\n  templateUrl: './clearance.component.html',\n  styleUrls: ['./clearance.component.css']\n})\nexport class ClearanceComponent implements OnInit, OnDestroy {\n  clearanceModel: ClearanceModel = new ClearanceModel();\n\n  backButtonIcon = 'white/left-arrow';\n\n  clearanceList: any[] = [];\n\n  givingClearance: boolean;\n  clearanceText;\n\n  clearanceListSubscription: Subscription;\n  shipDataSubscription: Subscription;\n\n  constructor(\n    private contentService: ContentService,\n    private modalService: NgbModal,\n    private portCallService: PortCallService,\n    private shipService: ShipService\n  ) { }\n\n  ngOnInit() {\n    this.clearanceListSubscription = this.portCallService.clearanceListData$.subscribe(data => {\n      if (data) {\n        this.clearanceList = data;\n        this.portCallService.clearanceData$.subscribe(clearanceUser => {\n          if (clearanceUser) {\n            this.clearanceModel = this.clearanceList.find(\n              cl => cl.organizationId === clearanceUser.organizationId\n            );\n            this.clearanceText = this.clearanceModel.remark;\n          }\n        });\n      }\n    });\n\n    this.shipDataSubscription = this.portCallService.shipData$.subscribe(shipResult => {\n      this.shipService.setShipData(shipResult);\n    });\n  }\n\n  ngOnDestroy() {\n    this.clearanceListSubscription.unsubscribe();\n    this.shipDataSubscription.unsubscribe();\n  }\n\n  showWarningBox(content: any, clearance: boolean) {\n    this.givingClearance = clearance;\n    this.modalService.open(content);\n  }\n\n  saveClearance() {\n    this.clearanceModel.portCall = null;\n    // this.clearanceModel.organization = null;\n    this.clearanceModel.remark = this.clearanceText;\n    this.clearanceModel.cleared = this.givingClearance;\n    this.portCallService.saveClearance(this.clearanceModel);\n\n    if (this.clearanceModel.cleared) {\n      this.portCallService.getClearanceListForPortCall(this.clearanceModel.portCallId).subscribe(\n        result => {\n          const clearances = result;\n          let allCleared = true;\n          clearances.forEach(clearance => {\n            if (!clearance.cleared && clearance.organizationPortCallId !== this.clearanceModel.organizationPortCallId) {\n              allCleared = false;\n            }\n          });\n          if (allCleared) {\n            this.portCallService.updatePortCallStatusCleared(this.clearanceModel.portCallId).subscribe(\n              res => {\n              },\n              err => console.log(err)\n            );\n          }\n        }\n      );\n    } else {\n      this.portCallService.updatePortCallStatusAwaitingClearance(this.clearanceModel.portCallId).subscribe(\n        res => {\n        },\n        err => console.log(err)\n      );\n    }\n  }\n\n  goBack() {\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Activate Port Call\\\" icon=\\\"save.png\\\" class=\\\"text-center\\\">\\n  <div class=\\\"text-center\\\">\\n\\n    <div *ngIf=\\\"numberOfCrewError\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"alert alert-danger\\\">\\n          <span>Error: Crew information does not correspond to number of crew specified.</span>\\n          <br>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"numberOfPassengersError\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"alert alert-danger\\\">\\n          <span>Error: Passenger information does not correspond to number of passengers specified.</span>\\n          <br>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"!voyagesIsPristine\\\" class=\\\"row\\\">\\n\\n      <div *ngIf=\\\"!voyagesErrors\\\" class=\\\"col\\\">\\n        <div class=\\\"alert alert-warning\\\">\\n          <span>Warning: Voyages are unsaved.</span>\\n          <br>\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveVoyages()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Voyages</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"voyagesErrors\\\" class=\\\"col\\\">\\n        <div class=\\\"alert alert-danger\\\">\\n          <span>Error: Voyages contains invalid data.</span>\\n          <br>\\n          <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Voyages</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"!detailsDataIsPristine\\\" class=\\\"row\\\">\\n\\n      <div *ngIf=\\\"detailsMeta.valid\\\" class=\\\"col\\\">\\n        <div class=\\\"alert alert-warning\\\">\\n          <span>Warning: Port Call Details are unsaved.</span>\\n          <br>\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveDetails()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Details</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"!detailsMeta.valid\\\" class=\\\"col\\\">\\n        <div class=\\\"alert alert-danger\\\">\\n          <span>Error: Port Call Details contains invalid data.</span>\\n          <br>\\n          <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Details</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"!cargoDataIsPristine && cargoIsChecked\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"alert alert-warning\\\">\\n          <span>Warning: Cargo data is unsaved.</span>\\n          <br>\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveCargo()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Cargo\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"!shipStoresDataIsPristine && reportingShipStoresIsChecked\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"alert alert-warning\\\">\\n          <span>Warning: Ship Stores data is unsaved.</span>\\n          <br>\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveShipStores()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Ship Stores\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"!passengerDataIsPristine && passengerListIsChecked\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"alert alert-warning\\\">\\n          <span>Warning: Passenger data is unsaved.</span>\\n          <br>\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"savePassengerList()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Passenger List\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"!crewDataIsPristine && crewListIsChecked\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"alert alert-warning\\\">\\n          <span>Warning: Crew list data is unsaved.</span>\\n          <br>\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveCrewList()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Crew List\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"allowSavingSecurity\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"alert alert-warning\\\">\\n          <span>Warning: Security data is unsaved.</span>\\n          <br>\\n          <app-save-security-button [portCallId]=\\\"portCallId\\\"></app-save-security-button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"!dpgDataIsPristine && dpgIsChecked\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"alert alert-warning\\\">\\n          <span>Warning: DPG data is unsaved.</span>\\n          <br>\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveDpgOnBoardList()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save DPG List\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"portCallIsDraft\\\">\\n      <div *ngIf=\\\"(detailsDataIsPristine && detailsMeta.valid) && voyagesIsPristine && !numberOfCrewError && !numberOfPassengersError\\\"\\n        class=\\\"col\\\">\\n        <p class=\\\"mb-0\\\">After activating the port call, it will no longer be a draft, and will be visible for\\n          authorities to review.</p>\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"send()\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Activate</button>\\n      </div>\\n      <div *ngIf=\\\"!((detailsDataIsPristine && detailsMeta.valid) && voyagesIsPristine) || (numberOfCrewError || numberOfPassengersError)\\\"\\n        class=\\\"col\\\">\\n        <button class=\\\"btn btn-ssn\\\" disabled>\\n          <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Activate</button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { FormMetaData } from 'app/shared/interfaces/form-meta-data.interface';\nimport { ConsignmentModel, DpgOnBoardModel, PersonOnBoardModel, PortCallDetailsModel } from 'app/shared/models/';\nimport { ContentService, DpgService, FalCargoService, FalSecurityService, FalShipStoresService, PortCallDetailsService, PortCallFalPersonOnBoardService, PortCallService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst RESULT_SUCCES = 'This port call has been activated, and is now awaiting clearance.';\nconst RESULT_FAILURE = 'There was a problem when trying to activate this port call. Please try again later.';\n\n@Component({\n  selector: 'app-activate-port-call',\n  templateUrl: './activate-port-call.component.html',\n  styleUrls: ['./activate-port-call.component.css']\n})\nexport class ActivatePortCallComponent implements OnInit, OnDestroy {\n\n  portCallId: number;\n\n  voyagesIsPristine = true;\n  detailsDataIsPristine = true;\n  shipStoresDataIsPristine = true;\n  cargoDataIsPristine = true;\n  passengerDataIsPristine = true;\n  crewDataIsPristine = true;\n  securityIsPristine = true;\n  dpgDataIsPristine = true;\n\n  reportingShipStoresIsChecked = false;\n  cargoIsChecked = false;\n  passengerListIsChecked = false;\n  crewListIsChecked = false;\n  securityIsChecked = false;\n  dpgIsChecked = false;\n\n\n  voyagesErrors = false;\n\n  crewPassengersAndDimensionsModel: any;\n  purposeModel: any;\n  reportingModel: any;\n  otherPurposeName = '';\n  detailsMeta: FormMetaData;\n  detailsModel: PortCallDetailsModel = new PortCallDetailsModel();\n  cargoData: ConsignmentModel[];\n\n  shipStoresList: any[];\n  passengerList: PersonOnBoardModel[];\n  crewList: PersonOnBoardModel[];\n  dpgOnBoardList: DpgOnBoardModel[];\n\n  portCallStatus: string;\n  portCallIsDraft = false;\n  STATUS_DRAFT = 'Draft';\n\n  numberOfCrewError = false;\n  numberOfPassengersError = false;\n\n  voyagesIsPristineSubscription: Subscription;\n  voyagesErrorSubscription: Subscription;\n  detailsPristineSubscription: Subscription;\n  portCallIdDataSubscription: Subscription;\n  crewPassengersAndDimensionsDataSubscription: Subscription;\n  cargoDescriptionSubscription: Subscription;\n  reportingForThisPortCallDataSubscription: Subscription;\n  portCallPurposeDataSubscription: Subscription;\n  otherPurposeNameSubscription: Subscription;\n  crewPassengersAndDimensionsMetaSubscription: Subscription;\n  portCallStatusDataSubscription: Subscription;\n  shipStoresDataSubscription: Subscription;\n  shipStoresIsPristineSubscription: Subscription;\n  shipStoresIsCheckedSubscription: Subscription;\n  cargoDataSubscription: Subscription;\n  cargoIsPristineSubscription: Subscription;\n  passengerDataSubscription: Subscription;\n  passengerListIsPristineSubscription: Subscription;\n  passengerListIsCheckedSubscription: Subscription;\n  crewDataSubscription: Subscription;\n  crewListIsPristineSubscription: Subscription;\n  crewListIsCheckedSubscription: Subscription;\n  securityIsCheckedSubscription: Subscription;\n  securityIsPristineSubscription: Subscription;\n  allowSavingSecuritySubscription: Subscription;\n  dpgDataSubscription: Subscription;\n  dpgListIsPristineSubscription: Subscription;\n  dpgIsCheckedSubscription: Subscription;\n  allowSavingSecurity = false;\n\n  constructor(\n    private contentService: ContentService,\n    private portCallService: PortCallService,\n    private portCallDetailsService: PortCallDetailsService,\n    private shipStoresService: FalShipStoresService,\n    private cargoService: FalCargoService,\n    private modalService: NgbModal,\n    private personOnBoardService: PortCallFalPersonOnBoardService,\n    private securityService: FalSecurityService,\n    private dpgService: DpgService\n  ) { }\n\n  ngOnInit() {\n    //\n    // PortCalls\n    //\n    this.voyagesIsPristineSubscription = this.portCallService.voyagesIsPristine$.subscribe(\n      pristineData => {\n        this.voyagesIsPristine = pristineData;\n      }\n    );\n    this.voyagesErrorSubscription = this.portCallService.voyagesErrors$.subscribe(\n      hasError => {\n        this.voyagesErrors = hasError;\n      }\n    );\n    //\n    // Details\n    //\n    this.detailsPristineSubscription = this.portCallDetailsService.detailsPristine$.subscribe(detailsDataIsPristine => {\n      this.detailsDataIsPristine = detailsDataIsPristine;\n    });\n    this.portCallIdDataSubscription = this.portCallService.portCallIdData$.subscribe(\n      portCallIdData => {\n        if (portCallIdData) {\n          this.portCallId = portCallIdData;\n        }\n      }\n    );\n    this.crewPassengersAndDimensionsDataSubscription = this.portCallDetailsService.crewPassengersAndDimensionsData$.subscribe(\n      cpadData => {\n        if (cpadData) {\n          this.crewPassengersAndDimensionsModel = cpadData;\n        }\n      }\n    );\n    this.cargoDescriptionSubscription = this.portCallDetailsService.cargoBriefDescriptionData$.subscribe(\n      cargoDescriptionData => {\n        this.detailsModel.cargoBriefDescription = cargoDescriptionData;\n      }\n    );\n    this.reportingForThisPortCallDataSubscription = this.portCallDetailsService.reportingForThisPortCallData$.subscribe(\n      reportingData => {\n        if (reportingData) {\n          this.reportingModel = reportingData;\n          this.cargoIsChecked = this.reportingModel.reportingCargo || false;\n        }\n      }\n    );\n    this.portCallPurposeDataSubscription = this.portCallDetailsService.portCallPurposeData$.subscribe(purposeData => {\n      if (purposeData) {\n        this.purposeModel = purposeData;\n      }\n    });\n    this.otherPurposeNameSubscription = this.portCallDetailsService.otherPurposeName$.subscribe(otherPurposeNameData => {\n      if (otherPurposeNameData) {\n        this.otherPurposeName = otherPurposeNameData;\n      }\n    });\n    this.crewPassengersAndDimensionsMetaSubscription = this.portCallDetailsService.crewPassengersAndDimensionsMeta$.subscribe(\n      metaData => {\n        this.detailsMeta = metaData;\n      }\n    );\n    //\n    // Ship Stores\n    //\n    this.shipStoresDataSubscription = this.shipStoresService.shipStoresList$.subscribe(\n      shipStoresData => {\n        if (shipStoresData) {\n          this.shipStoresList = shipStoresData;\n        }\n      }\n    );\n    this.shipStoresIsPristineSubscription = this.shipStoresService.dataIsPristine$.subscribe(\n      pristineData => {\n        this.shipStoresDataIsPristine = pristineData;\n      }\n    );\n    this.shipStoresIsCheckedSubscription = this.shipStoresService.reportingShipStoresIsChecked$.subscribe(\n      isCheckedData => {\n        this.reportingShipStoresIsChecked = isCheckedData;\n      }\n    );\n    //\n    // Cargo\n    //\n    this.cargoDataSubscription = this.cargoService.consignmentListData$.subscribe(\n      cargoData => {\n        this.cargoData = cargoData;\n      }\n    );\n    this.cargoIsPristineSubscription = this.cargoService.dataIsPristine$.subscribe(\n      pristineData => {\n        this.cargoDataIsPristine = pristineData;\n      }\n    );\n    //\n    // Passenger List\n    //\n    this.passengerDataSubscription = this.personOnBoardService.passengerList$.subscribe(\n      passengerData => {\n        this.passengerList = passengerData;\n        if (this.passengerList.length !== this.crewPassengersAndDimensionsModel.numberOfPassengers) {\n          this.numberOfPassengersError = true;\n        } else {\n          this.numberOfPassengersError = false;\n        }\n      }\n    );\n    this.passengerListIsPristineSubscription = this.personOnBoardService.passengerDataIsPristine$.subscribe(\n      pristineData => {\n        this.passengerDataIsPristine = pristineData;\n      }\n    );\n    this.passengerListIsCheckedSubscription = this.personOnBoardService.passengerListIsChecked$.subscribe(\n      isChecked => {\n        this.passengerListIsChecked = isChecked;\n      }\n    );\n    //\n    // Crew List\n    //\n    this.crewDataSubscription = this.personOnBoardService.crewList$.subscribe(\n      crewData => {\n        this.crewList = crewData;\n        if (this.crewList.length !== this.crewPassengersAndDimensionsModel.numberOfCrew) {\n          this.numberOfCrewError = true;\n        } else {\n          this.numberOfCrewError = false;\n        }\n      }\n    );\n    this.crewListIsPristineSubscription = this.personOnBoardService.crewDataIsPristine$.subscribe(\n      pristineData => {\n        this.crewDataIsPristine = pristineData;\n      }\n    );\n    this.crewListIsCheckedSubscription = this.personOnBoardService.crewListIsChecked$.subscribe(\n      isChecked => {\n        this.crewListIsChecked = isChecked;\n      }\n    );\n\n    //\n    // Dpg on Board\n    //\n    this.dpgDataSubscription = this.dpgService.dpgOnBoardList$.subscribe(\n      dpgData => {\n        this.dpgOnBoardList = dpgData;\n      }\n    );\n\n    this.dpgListIsPristineSubscription = this.dpgService.dataIsPristine$.subscribe(\n      pristineData => {\n        this.dpgDataIsPristine = pristineData;\n      }\n    );\n\n    this.dpgIsCheckedSubscription = this.dpgService.dpgIsChecked$.subscribe(\n      isChecked => {\n        this.dpgIsChecked = isChecked;\n      }\n    );\n\n\n    //\n    // Security\n    //\n    this.securityIsPristineSubscription = this.securityService.pristineData$.subscribe(\n      pristineData => {\n        this.securityIsPristine = pristineData;\n      }\n    );\n    this.securityIsCheckedSubscription = this.securityService.securityIsCheckedData$.subscribe(\n      isChecked => {\n        this.securityIsChecked = isChecked;\n      }\n    );\n    this.allowSavingSecuritySubscription = this.securityService.allowSavingData$.subscribe(\n      allowSavingData => {\n        this.allowSavingSecurity = allowSavingData;\n      }\n    );\n\n    //\n    // Status\n    //\n    this.portCallStatusDataSubscription = this.portCallService.portCallStatusData$.subscribe(statusData => {\n      if (statusData) {\n        if (statusData === this.STATUS_DRAFT) {\n          this.portCallIsDraft = true;\n        } else {\n          this.portCallIsDraft = false;\n        }\n        this.portCallStatus = statusData;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.voyagesIsPristineSubscription.unsubscribe();\n    this.voyagesErrorSubscription.unsubscribe();\n    this.detailsPristineSubscription.unsubscribe();\n    this.portCallIdDataSubscription.unsubscribe();\n    this.crewPassengersAndDimensionsDataSubscription.unsubscribe();\n    this.cargoDescriptionSubscription.unsubscribe();\n    this.reportingForThisPortCallDataSubscription.unsubscribe();\n    this.portCallPurposeDataSubscription.unsubscribe();\n    this.otherPurposeNameSubscription.unsubscribe();\n    this.crewPassengersAndDimensionsMetaSubscription.unsubscribe();\n    this.portCallStatusDataSubscription.unsubscribe();\n    this.shipStoresDataSubscription.unsubscribe();\n    this.shipStoresIsCheckedSubscription.unsubscribe();\n    this.shipStoresIsPristineSubscription.unsubscribe();\n    this.cargoDataSubscription.unsubscribe();\n    this.cargoIsPristineSubscription.unsubscribe();\n    this.passengerDataSubscription.unsubscribe();\n    this.passengerListIsCheckedSubscription.unsubscribe();\n    this.passengerListIsPristineSubscription.unsubscribe();\n    this.crewDataSubscription.unsubscribe();\n    this.crewListIsCheckedSubscription.unsubscribe();\n    this.crewListIsPristineSubscription.unsubscribe();\n  }\n\n  saveVoyages() {\n    alert('Saving voyages from this page is not yet implemented. Please return to the Voyages page to save your changes.');\n  }\n\n  saveDetails() {\n    // this.detailsModel.portCallDetailsId = this.portCallId;\n    this.detailsModel.portCallId = this.portCallId;\n    this.detailsModel.numberOfCrew = this.crewPassengersAndDimensionsModel.numberOfCrew;\n    this.detailsModel.numberOfPassengers = this.crewPassengersAndDimensionsModel.numberOfPassengers;\n    this.detailsModel.airDraught = this.crewPassengersAndDimensionsModel.airDraught;\n    this.detailsModel.actualDraught = this.crewPassengersAndDimensionsModel.actualDraught;\n    this.detailsModel.reportingCargo = this.reportingModel.reportingCargo;\n    this.detailsModel.reportingCrew = this.reportingModel.reportingCrew;\n    this.detailsModel.reportingDpg = this.reportingModel.reportingDpg;\n    this.detailsModel.reportingPax = this.reportingModel.reportingPax;\n    this.detailsModel.reportingSecurity = this.reportingModel.reportingSecurity;\n    this.detailsModel.reportingShipStores = this.reportingModel.reportingShipStores;\n    this.portCallService.saveDetails(\n      this.detailsModel,\n      this.purposeModel,\n      this.otherPurposeName\n    ).subscribe(detailsResponse => {\n      this.portCallDetailsService.setPortCallDetailsId(detailsResponse.portCallDetailsId);\n      this.portCallService.savePurposesForPortCall(this.portCallId, this.purposeModel, this.otherPurposeName);\n    });\n  }\n\n  saveShipStores() {\n    const formattedShipStoresList = this.shipStoresService.formatShipStores(this.shipStoresList);\n    this.shipStoresService.saveShipStores(formattedShipStoresList, this.portCallId).subscribe(\n      res => {\n        this.shipStoresService.setDataIsPristine(true);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  saveCargo() {\n    const formattedCargoData = this.cargoService.formatConsignment(this.cargoData);\n    this.cargoService.saveConsignmentListForPortCall(formattedCargoData, this.portCallId).subscribe(\n      res => {\n        this.cargoService.setDataIsPristine(true);\n      }, error => {\n        console.error(error);\n      }\n    );\n  }\n\n  savePassengerList() {\n    this.personOnBoardService.updatePersonOnBoardList(this.portCallId, this.passengerList, 2).subscribe(\n      res => {\n        this.personOnBoardService.setPassengerDataIsPristine(true);\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  saveCrewList() {\n    this.personOnBoardService.updatePersonOnBoardList(this.portCallId, this.crewList, 1).subscribe(\n      res => {\n        this.personOnBoardService.setCrewDataIsPristine(true);\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  saveDpgOnBoardList() {\n    this.dpgService.saveDpgOnBoard(this.dpgOnBoardList, this.portCallId).subscribe(\n      res => {\n        this.dpgService.setDataIsPristineTrue();\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  send() {\n    this.portCallService\n      .updatePortCallStatusAwaitingClearance(this.portCallId)\n      .subscribe(\n        updateStatusResponse => {\n          this.openConfirmationModal(\n            ConfirmationModalComponent.TYPE_SUCCESS,\n            RESULT_SUCCES\n          );\n        },\n        error => {\n          console.log(error);\n          this.openConfirmationModal(\n            ConfirmationModalComponent.TYPE_FAILURE,\n            RESULT_FAILURE\n          );\n        }\n      );\n  }\n\n  goBack() {\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\n  }\n\n  private openConfirmationModal(modalType: string, bodyText: string) {\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\n    modalRef.componentInstance.modalType = modalType;\n    modalRef.componentInstance.bodyText = bodyText;\n    modalRef.result.then(\n      result => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\n          this.goBack();\n        }\n      },\n      reason => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\n          this.goBack();\n        }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css\n// module id = ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css\n// module chunks = main","module.exports = \"<app-confirmation-view></app-confirmation-view>\\n\\n<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-activate-port-call></app-activate-port-call>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html\n// module id = ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.css']\n})\nexport class ConfirmationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.ts","import { Injectable } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\nimport { ContentService, DpgService, FalCargoService, FalShipStoresService, PortCallDetailsService, PortCallOverviewService, PortCallService } from 'app/shared/services/';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class LoadPortCallService {\n\n  content: string;\n  portCallId: number;\n\n  private isLoadingSource = new BehaviorSubject<boolean>(false);\n  isLoading$ = this.isLoadingSource.asObservable();\n\n  constructor(\n    private overviewService: PortCallOverviewService,\n    private portCallService: PortCallService,\n    private contentService: ContentService,\n    private cargoService: FalCargoService,\n    private shipStoresService: FalShipStoresService,\n    private portCallDetailsService: PortCallDetailsService,\n    private dpgService: DpgService,\n  ) { }\n\n  setContent(portCallId: number, content: string = CONTENT_NAMES.REGISTER_PORT_CALL) {\n    this.content = content;\n    this.portCallId = portCallId;\n    this.isLoadingSource.next(true);\n    this.setPortCall();\n  }\n\n  private setPortCall() {\n    this.overviewService.getOverview(this.portCallId).subscribe(\n      data => {\n        if (data) {\n          // 2018.08.17 Trying new pattern:\n          this.portCallService.setPortCallData(data.portCall);\n          //\n          this.portCallService.setPortCall(data);\n          this.portCallService.setVoyagesIsPristine(true);\n          this.cargoService.setDataIsPristine(true);\n          this.shipStoresService.setShipStoresList(data.portCall.falShipStores);\n          this.shipStoresService.setDataIsPristine(true);\n          this.dpgService.setDataIsPristineTrue();\n          this.setPurpose();\n        }\n      }\n    );\n  }\n  private setPurpose() {\n    this.portCallDetailsService.getPurposeByPortCallId(this.portCallId).subscribe(\n      purposeData => {\n        if (purposeData) {\n          if (purposeData.find(p => p.name === 'Other')) {\n            this.portCallDetailsService.getOtherName(this.portCallId).subscribe(\n              otherNameData => {\n                this.portCallDetailsService.setOtherPurposeName(otherNameData);\n                this.portCallDetailsService.setPortCallPurposeData(purposeData);\n                this.setDetails();\n              }\n            );\n          } else {\n            this.portCallDetailsService.setPortCallPurposeData(purposeData);\n            this.setDetails();\n          }\n        } else {\n        }\n      },\n      error => {\n        console.log('Get Purpose Error: ', error);\n      }\n    );\n  }\n  private setDetails() {\n    this.portCallDetailsService.getDetailsByPortCallId(this.portCallId).subscribe(\n      detailsData => {\n        if (detailsData) {\n          this.portCallDetailsService.setDetails(detailsData);\n        } else {\n          const portCallDetails = new PortCallDetailsModel();\n          portCallDetails.portCallId = this.portCallId;\n          this.portCallDetailsService.setDetails(portCallDetails);\n        }\n        this.finishLoading();\n      },\n      error => {\n        console.log('Get Details Error: ', error);\n      }\n    );\n  }\n  private finishLoading() {\n    this.portCallService.setPortCallIdData(this.portCallId);\n    this.isLoadingSource.next(false);\n    this.contentService.setContent(this.content);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/load-port-call.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\n  <div class=\\\"d-table-row\\\">\\n\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"View port call information\\\" *ngIf=\\\"permissions.view\\\">\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onViewClick()\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/eye.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.edit\\\">\\n      <div ngbTooltip=\\\"You cannot edit a {{rowData.overviewModel.status}} port call\\\" *ngIf=\\\"portCallIsCancelled || portCallIsCompleted\\\">\\n        <button class=\\\"btn btn-sm btn-ssn\\\" disabled>\\n          <div class=\\\"mx-auto\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\n          </div>\\n        </button>\\n      </div>\\n\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Edit port call\\\" (click)=\\\"openModal(editModal)\\\" *ngIf=\\\"portCallIsAwaitingClearance || portCallIsCleared\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Edit port call\\\" (click)=\\\"onEditClick()\\\" *ngIf=\\\"portCallIsDraft\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.edit && !portCallIsDraft\\\">\\n      <div ngbTooltip=\\\"{{ portCallIsCancelled ? 'You cannot set actual times for Cancelled port calls' : 'All clearances must be cleared before you can set actual times'}}\\\" *ngIf=\\\"portCallIsCancelled || portCallIsAwaitingClearance\\\">\\n        <button class=\\\"btn btn-sm btn-ssn\\\" disabled>\\n          <div class=\\\"mx-auto\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/time.png\\\" height=\\\"20px\\\" />\\n          </div>\\n        </button>\\n      </div>\\n      <app-set-actual-time\\n        [portCallModel]=\\\"rowData.overviewModel\\\"\\n        (portCallCompleted)=\\\"onCompletePortCall($event)\\\"\\n        (portCallCleared)=\\\"onUncompletePortCall($event)\\\"  \\n        *ngIf=\\\"portCallIsCleared || portCallIsCompleted\\\"\\n      ></app-set-actual-time>\\n    </div>\\n\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.clearance\\\">\\n      <div ngbTooltip=\\\"You cannot clear a {{rowData.overviewModel.status}} port call\\\" *ngIf=\\\"portCallIsCancelled || portCallIsCompleted\\\">\\n        <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"portCallIsCancelled || portCallIsCompleted\\\" disabled>\\n          <div class=\\\"mx-auto\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/stamp.png\\\" height=\\\"16px\\\" />\\n          </div>\\n        </button>\\n      </div>\\n\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Review port call clearance\\\" (click)=\\\"onClearanceClick()\\\" *ngIf=\\\"!portCallIsCancelled && !portCallIsCompleted\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/stamp.png\\\" height=\\\"16px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.cancel && !portCallIsDraft\\\">\\n      <div ngbTooltip=\\\"{{ portCallIsCancelled ? 'Port Call is already Cancelled' : 'You cannot cancel a Completed port call'}}\\\" *ngIf=\\\"portCallIsCancelled || portCallIsCompleted\\\">\\n        <button class=\\\"btn btn-sm btn-ssn\\\" disabled>\\n          <div class=\\\"mx-auto\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\" />\\n          </div>\\n        </button>\\n      </div>\\n\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Cancel port call\\\" (click)=\\\"openModal(cancelModal)\\\" *ngIf=\\\"portCallIsAwaitingClearance || portCallIsCleared\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.delete && portCallIsDraft\\\">\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Delete port call\\\" (click)=\\\"openModal(deleteModal)\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/trash.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<ng-template #editModal let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">WARNING</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      <span>To edit this port call, you must revert it back to a draft.</span>\\n      <br>\\n      <span>Any active clearances for the port call will be reset.</span>\\n      <br>\\n      <span>The port call must be reactivated to receive new clearances.</span>\\n      <br>\\n      <br>\\n      <span>Are you sure you wish to edit this port call?</span>\\n      <br>\\n      <span>This action cannot be undone.</span>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"editAwaitingClearancePortCall(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/warning.png\\\" height=\\\"20px\\\">\\n      <span>Reset Clearance & Edit Port Call as Draft</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\n      <span>Exit</span>\\n    </button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #cancelModal let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Cancel Port Call</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      <span>Are you sure you wish to cancel this port call?</span>\\n      <br>\\n      <span>This action cannot be undone.</span>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"cancelPortCall(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"20px\\\">\\n      <span>Cancel Port Call</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\n      <span>Exit</span>\\n    </button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #deleteModal let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Delete Port Call</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      <span>Are you sure you wish to delete this port call?</span>\\n      <br>\\n      <span>This action cannot be undone.</span>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"deletePortCall(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"20px\\\">\\n      <span>Delete Port Call</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\n      <span>Exit</span>\\n    </button>\\n  </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { PortCallClaims } from 'app/shared/constants/port-call-claims';\nimport { PortCallStatusTypes } from 'app/shared/constants/port-call-status-types';\nimport { PortCallModel } from 'app/shared/models/';\nimport { AccountService, ConstantsService, ContentService, PortCallOverviewService, PortCallService } from 'app/shared/services/';\nimport { ViewCell } from 'ng2-smart-table';\nimport { LoadPortCallService } from '../../load-port-call.service';\n\n@Component({\n  selector: 'app-button-row',\n  templateUrl: './button-row.component.html',\n  styleUrls: ['./button-row.component.css'],\n  providers: [ConstantsService]\n})\nexport class ButtonRowComponent implements ViewCell, OnInit {\n\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n\n  @Output() portCallCancelled = new EventEmitter<number>();\n  @Output() portCallCompleted = new EventEmitter<number>();\n  @Output() portCallUncompleted = new EventEmitter<number>();\n\n  overviewData: any[];\n  draftOverviewData: any[];\n  clearedOverviewData: any[];\n\n  permissions = PortCallClaims.buttonRowPermissions;\n  portCallIsDraft = false;\n  portCallIsCancelled = false;\n  portCallIsAwaitingClearance = false;\n  portCallIsCleared = false;\n  portCallIsCompleted = false;\n\n  constructor(\n    private accountService: AccountService,\n    private overviewService: PortCallOverviewService,\n    private contentService: ContentService,\n    private portCallService: PortCallService,\n    private modalService: NgbModal,\n    private loadPortCallService: LoadPortCallService\n  ) { }\n\n  ngOnInit() {\n    this.portCallIsDraft = (this.rowData.overviewModel.status === PortCallStatusTypes.DRAFT);\n    this.portCallIsCancelled = (this.rowData.overviewModel.status === PortCallStatusTypes.CANCELLED);\n    this.portCallIsAwaitingClearance = (this.rowData.overviewModel.status === PortCallStatusTypes.AWAITING_CLEARANCE);\n    this.portCallIsCleared = (this.rowData.overviewModel.status === PortCallStatusTypes.CLEARED);\n    this.portCallIsCompleted = (this.rowData.overviewModel.status === PortCallStatusTypes.COMPLETED);\n    this.accountService.userClaimsData$.subscribe(\n      userClaims => {\n        if (userClaims) {\n          // Find user claims where claim type is Port Call\n          const userClaimsTypePortCall = userClaims.filter(claim => claim.type === PortCallClaims.TYPE);\n          const keys = Object.keys(this.permissions);\n          keys.forEach(key => {\n            this.permissions[key] = (userClaimsTypePortCall.some(claim => claim.value.toUpperCase() === key.toString().toUpperCase()));\n          });\n        }\n      }\n    );\n\n    this.overviewService.overviewData$.subscribe(\n      results => {\n        if (results) {\n          this.overviewData = results;\n        }\n      }\n    );\n    this.overviewService.draftOverviewData$.subscribe(\n      results => {\n        if (results) {\n          this.draftOverviewData = results;\n        }\n      }\n    );\n    this.overviewService.clearedByUserAgencyOverviewData$.subscribe(\n      results => {\n        if (results) {\n          this.clearedOverviewData = results;\n        }\n      }\n    );\n  }\n\n  onViewClick() {\n    this.setContent(this.rowData.overviewModel.portCallId, CONTENT_NAMES.VIEW_PORT_CALL);\n  }\n\n  onEditClick() {\n    this.contentService.setPortCallForm(CONTENT_NAMES.VOYAGES);\n    this.setContent(this.rowData.overviewModel.portCallId, CONTENT_NAMES.REGISTER_PORT_CALL);\n  }\n\n  onClearanceClick() {\n    this.setContent(this.rowData.overviewModel.portCallId, CONTENT_NAMES.PORT_CALL_CLEARANCE);\n  }\n\n  openModal(content: any) {\n    this.modalService.open(content);\n  }\n\n  onCompletePortCall(portCallId) {\n    this.rowData.overviewModel.status = PortCallStatusTypes.COMPLETED;\n    this.portCallIsCleared = false;\n    this.portCallIsCompleted = true;\n    this.overviewData.find(r => r.overviewModel.portcallId === portCallId).status = PortCallStatusTypes.COMPLETED;\n    this.overviewService.setOverviewData(this.overviewData);\n    this.portCallCompleted.emit(portCallId);\n  }\n\n  onUncompletePortCall(portCallId) {\n    this.rowData.overviewModel.status = PortCallStatusTypes.CLEARED;\n    this.portCallIsCleared = true;\n    this.portCallIsCompleted = false;\n    this.overviewData.find(r => r.overviewModel.portcallId === portCallId).status = PortCallStatusTypes.CLEARED;\n    this.overviewService.setOverviewData(this.overviewData);\n    this.portCallUncompleted.emit(portCallId);\n  }\n\n  cancelPortCall() {\n    const pcId = this.rowData.overviewModel.portCallId;\n    this.rowData.overviewModel.status = PortCallStatusTypes.CANCELLED;\n    const htmlStatus = `<div class=\"text-danger\">` + this.rowData.overviewModel.status + `</div>`;\n    if (this.overviewData.find(r => r.overviewModel.portcallId === pcId)) {\n      this.overviewData.find(r => r.overviewModel.portcallId === pcId).status = htmlStatus;\n      this.overviewService.setOverviewData(this.overviewData);\n    }\n    if (this.draftOverviewData.find(r => r.overviewModel.portcallId === pcId)) {\n      this.draftOverviewData.find(r => r.overviewModel.portcallId === pcId).status = htmlStatus;\n      this.overviewService.setDraftData(this.draftOverviewData);\n    }\n    if (this.clearedOverviewData.find(r => r.overviewModel.portcallId === pcId)) {\n      this.clearedOverviewData.find(r => r.overviewModel.portcallId === pcId).status = htmlStatus;\n      this.overviewService.setClearedData(this.clearedOverviewData);\n    }\n    this.portCallService.updatePortCallStatusCancelled(this.rowData.overviewModel.portCallId).subscribe(\n      result => {\n        this.portCallCancelled.emit(pcId);\n      }\n    );\n\n  }\n\n  deletePortCall() {\n    this.portCallService.deletePortCallDraft(this.rowData.overviewModel.portCallId).subscribe(\n      deleteResponse => {\n        if (deleteResponse) {\n          const newOverviewData = this.overviewData.filter(row => row !== this.rowData);\n          const newDraftData = this.draftOverviewData.filter(row => row !== this.rowData);\n          const newClearedData = this.clearedOverviewData.filter(row => row !== this.rowData);\n          this.overviewService.setOverviewData(newOverviewData);\n          this.overviewService.setDraftData(newDraftData);\n          this.overviewService.setClearedData(newClearedData);\n        }\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  editAwaitingClearancePortCall() {\n    this.portCallService.updatePortCallStatusDraft(this.rowData.overviewModel.portCallId).subscribe(\n      draftResponse => {\n        if (draftResponse) {\n          const newAwaitingClearanceData = this.overviewData.filter(row => row !== this.rowData);\n          const newClearedData = this.clearedOverviewData.filter(row => row !== this.rowData);\n          const newDraftData = this.draftOverviewData.filter(row => row !== this.rowData);\n          this.rowData.overviewModel.status = PortCallStatusTypes.DRAFT;\n          newDraftData.push(this.rowData);\n          this.overviewService.setOverviewData(newAwaitingClearanceData);\n          this.overviewService.setClearedData(newClearedData);\n          this.overviewService.setDraftData(newDraftData);\n          this.onEditClick();\n        }\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  private setContent(portCallId: number, content: string) {\n    this.overviewService.setLoadingPortCall(true);\n    this.contentService.setLoadingScreen(true, 'portcall.gif', 'Loading');\n    this.loadPortCallService.setContent(portCallId, content);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"no-wrap\\\">\\n  <span *ngFor=\\\"let clearance of clearanceList\\\">\\n    <span class=\\\"badge badge-warning\\\" ngbTooltip=\\\"{{ clearance.name }}: {{ clearance.clearanceIsNullString }}\\\"\\n      *ngIf=\\\"clearance.cleared === null\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/stamp.png\\\" height=\\\"16px\\\">\\n    </span>\\n    <span class=\\\"badge badge-success\\\" ngbTooltip=\\\"{{ clearance.name }}: {{ clearance.clearanceIsTrueString }}\\\"\\n      *ngIf=\\\"clearance.cleared === true\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"16px\\\">\\n    </span>\\n    <span class=\\\"badge badge-danger\\\" ngbTooltip=\\\"{{ clearance.name }}: {{ clearance.clearanceIsFalseString }}\\\"\\n      *ngIf=\\\"clearance.cleared === false\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/rejected.png\\\" height=\\\"16px\\\">\\n    </span>\\n  </span>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ViewCell } from 'ng2-smart-table';\n\n@Component({\n  selector: 'app-clearance-row',\n  templateUrl: './clearance-row.component.html',\n  styleUrls: ['./clearance-row.component.css']\n})\nexport class ClearanceRowComponent implements OnInit, ViewCell {\n\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n\n  clearanceList: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.clearanceList = this.rowData.overviewModel.clearanceList;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/overview.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/overview.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n        <app-ssn-card header=\\\"Options\\\" icon=\\\"cogs.png\\\" collapsible=\\\"true\\\" collapsed=\\\"true\\\">\\n            <div>\\n                <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"!showCancelledPortCalls\\\" (click)=\\\"toggleCancelledPortCalls(true)\\\">Show cancelled port calls</button>\\n                <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"showCancelledPortCalls\\\" (click)=\\\"toggleCancelledPortCalls(false)\\\">Hide cancelled port calls</button>\\n            </div>\\n            <div>\\n                <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"!showCompletedPortCalls\\\" (click)=\\\"toggleCompletedPortCalls(true)\\\">Show completed port calls</button>\\n                <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"showCompletedPortCalls\\\" (click)=\\\"toggleCompletedPortCalls(false)\\\">Hide completed port calls</button>\\n            </div>\\n        </app-ssn-card>\\n    </div>\\n</div>\\n\\n<div class=\\\"mb-3\\\">\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n        <thead class=\\\"bg-ssn text-white\\\">\\n            <tr>\\n                <th class=\\\"py-1\\\">\\n                    <h5 class=\\\"mb-0\\\">Port Calls</h5>\\n                </th>\\n            </tr>\\n        </thead>\\n    </table>\\n    <div class=\\\"table-responsive\\\">\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"overviewSource\\\"></ng2-smart-table>\\n    </div>\\n</div>\\n\\n<div class=\\\"mb-3\\\" *ngIf=\\\"permissions.edit\\\">\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n        <thead class=\\\"bg-ssn text-white\\\">\\n            <tr>\\n                <th class=\\\"py-1\\\">\\n                    <h5 class=\\\"mb-0\\\">Port Call Drafts</h5>\\n                </th>\\n            </tr>\\n        </thead>\\n    </table>\\n    <div class=\\\"table-responsive\\\">\\n        <ng2-smart-table [settings]=\\\"draftTableSettings\\\" [source]=\\\"draftOverviewSource\\\"></ng2-smart-table>\\n    </div>\\n</div>\\n\\n<div class=\\\"mb-3\\\" *ngIf=\\\"userIsGovernmentAgency\\\">\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n        <thead class=\\\"bg-ssn text-white\\\">\\n            <tr>\\n                <th class=\\\"py-1\\\">\\n                    <h5 class=\\\"mb-0\\\">Cleared Port Calls</h5>\\n                </th>\\n            </tr>\\n        </thead>\\n    </table>\\n    <div class=\\\"table-responsive\\\">\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"clearedByUserAgencyOverviewSource\\\"></ng2-smart-table>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/overview.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/overview.component.html\n// module chunks = main","import { DatePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { OrganizationTypes } from 'app/shared/constants/organization-types';\nimport { PortCallClaims } from 'app/shared/constants/port-call-claims';\nimport { PortCallStatusTypes } from 'app/shared/constants/port-call-status-types';\nimport { AccountService, ContentService, OrganizationService, PortCallOverviewService, PortCallService } from 'app/shared/services/';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ButtonRowComponent } from './button-row/button-row.component';\nimport { ClearanceRowComponent } from './clearance-row/clearance-row.component';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css'],\n  providers: [OrganizationService, DatePipe]\n})\nexport class OverviewComponent implements OnInit, OnDestroy {\n  permissions = PortCallClaims.portCallPermissions;\n  overviewList = [];\n  draftOverviewList = [];\n  cancelledOverviewList = [];\n  completedOverviewList = [];\n  clearedByUserAgencyOverviewList = [];\n  userOrganization: any;\n  userIsGovernmentAgency = false;\n  overviewSource: LocalDataSource = new LocalDataSource();\n  draftOverviewSource: LocalDataSource = new LocalDataSource();\n  clearedByUserAgencyOverviewSource: LocalDataSource = new LocalDataSource();\n\n  showCancelledPortCalls = false;\n  showCompletedPortCalls = false;\n\n  // Smart table\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'There are no port calls in this list.',\n\n    columns: {\n      shipName: {\n        title: 'Ship Name',\n        type: 'html'\n      },\n      callSign: {\n        title: 'Call Sign',\n        type: 'html'\n      },\n      locationName: {\n        title: 'Location Name',\n        type: 'html'\n      },\n      eta: {\n        title: 'ETA',\n        type: 'html'\n      },\n      etd: {\n        title: 'ETD',\n        type: 'html'\n      },\n      status: {\n        title: 'Status',\n        type: 'html'\n      },\n      clearances: {\n        title: 'Clearances',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: ClearanceRowComponent\n      },\n      actions: {\n        title: 'Actions',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: ButtonRowComponent,\n        onComponentInitFunction: (instance) => {\n          instance.portCallCancelled.subscribe(portCallId => {\n            this.onPortCallCancelled(portCallId);\n          });\n          instance.portCallCompleted.subscribe(portCallId => {\n            this.onPortCallCompleted(portCallId);\n          });\n          instance.portCallUncompleted.subscribe(portCallId => {\n            this.onPortCallUncompleted(portCallId);\n          });\n        }\n      }\n    }\n  };\n\n  draftTableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'There are no port calls in this list.',\n\n    columns: {\n      shipName: {\n        title: 'Ship Name',\n        type: 'html'\n      },\n      callSign: {\n        title: 'Call Sign',\n        type: 'html'\n      },\n      locationName: {\n        title: 'Location Name',\n        type: 'html'\n      },\n      eta: {\n        title: 'ETA',\n        type: 'html'\n      },\n      etd: {\n        title: 'ETD',\n        type: 'html'\n      },\n      actions: {\n        title: 'Actions',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: ButtonRowComponent\n      }\n    }\n  };\n\n  userClaimsDataSubscription: Subscription;\n  getOrganizationForUserSubscription: Subscription;\n\n  constructor(\n    private datePipe: DatePipe,\n    private accountService: AccountService,\n    private organizationService: OrganizationService,\n    private contentService: ContentService,\n    private portCallService: PortCallService,\n    private overviewService: PortCallOverviewService\n  ) { }\n\n  ngOnInit() {\n    this.userClaimsDataSubscription = this.accountService.userClaimsData$.subscribe(userClaims => {\n      if (userClaims) {\n        const userClaimsTypePortCall = userClaims.filter(claim => claim.type === PortCallClaims.TYPE);\n        // Find user claims where claim type is Port Call\n        const keys = Object.keys(this.permissions);\n        keys.forEach(key => {\n          this.permissions[key] = userClaimsTypePortCall.some(\n            claim => claim.value.toUpperCase() === key.toString().toUpperCase()\n          );\n        });\n      }\n    });\n    this.getOrganizationForUserSubscription = this.organizationService.getOrganizationForUser()\n    .finally(() => this.loadOverview())\n    .subscribe(organizationResult => {\n      if (organizationResult) {\n        this.userIsGovernmentAgency =\n          organizationResult.organizationType &&\n          organizationResult.organizationType.name ===\n          OrganizationTypes.GOVERNMENT_AGENCY_STRING;\n        if (this.userIsGovernmentAgency) {\n          this.portCallService.setClearance(organizationResult);\n        }\n      }\n      this.userOrganization = organizationResult;\n    });\n  }\n\n  ngOnDestroy() {\n    this.userClaimsDataSubscription.unsubscribe();\n    this.getOrganizationForUserSubscription.unsubscribe();\n  }\n\n  overviewRow(ov) {\n    const row = {\n      overviewModel: ov,\n      portCallId: ov.portCallId,\n      shipName:\n        `<div class=\"no-wrap\"><div hidden>` +\n        ov.shipName + // ugly fix for alphabetical sorting but it works\n        `</div> <div> <img src='assets/images/flags/128x128/` +\n        ov.shipTwoCharCode.toLowerCase() +\n        `.png' height='20px'/> ` +\n        ov.shipName +\n        `</div></div>`,\n      callSign:\n        ov.callSign ||\n        `<span class=\"font-italic no-wrap\">Not provided.</span>`,\n      locationName:\n        `<div hidden>` +\n        ov.locationName + // same ugly fix as ship name\n        `</div> <div> <img src='assets/images/flags/128x128/` +\n        ov.locationTwoCharCode.toLowerCase() +\n        `.png' height='20px'/> ` +\n        ov.locationName +\n        `</div>`,\n      eta:\n        `<span class=\"no-wrap\">` +\n        this.datePipe.transform(ov.eta, 'yyyy-MM-dd') +\n        `</span> <span class=\"no-wrap\">` +\n        this.datePipe.transform(ov.eta, 'HH:mm') +\n        `</span>`,\n      etd:\n        `<span class=\"no-wrap\">` +\n        this.datePipe.transform(ov.etd, 'yyyy-MM-dd') +\n        `</span> <span class=\"no-wrap\">` +\n        this.datePipe.transform(ov.etd, 'HH:mm') +\n        `</span>`,\n      status:\n        ov.status === PortCallStatusTypes.CANCELLED\n          ? `<div class=\"text-danger\">` + ov.status + `</div>`\n          : `<div class=\"no-wrap\">` + ov.status + `</div>`,\n      clearances:\n        'clearances',\n      actions: 'btn'\n    };\n    return row;\n  }\n\n  loadOverview() {\n\n    this.overviewService.showCancelledPortCalls$.subscribe(showCancelledPortCalls => {\n      this.showCancelledPortCalls = showCancelledPortCalls;\n      this.rerenderList();\n    });\n    this.overviewService.showCompletedPortCalls$.subscribe(showCompletedPortCalls => {\n      this.showCompletedPortCalls = showCompletedPortCalls;\n      this.rerenderList();\n    });\n    this.overviewService.overviewData$.subscribe(results => {\n      if (results) {\n        this.overviewSource.load(results);\n      }\n    });\n    if (!this.userIsGovernmentAgency) {\n      this.overviewService.draftOverviewData$.subscribe(results => {\n        if (results) {\n          this.draftOverviewSource.load(results);\n        }\n      });\n    } else {\n      this.overviewService.clearedByUserAgencyOverviewData$.subscribe(results => {\n        if (results) {\n          this.clearedByUserAgencyOverviewSource.load(results);\n        }\n      });\n    }\n\n    this.overviewService.getOverviewsByUser()\n      .finally(() => {\n        this.sortOverView();\n      })\n      .subscribe(\n        ovs => {\n          if (ovs) {\n            ovs.forEach(ov => {\n              const row = this.overviewRow(ov);\n              // Case: port call is incomplete (status: draft)\n              if (ov.status === PortCallStatusTypes.DRAFT) {\n                this.draftOverviewList.push(row);\n              } else if (\n                this.userIsGovernmentAgency &&\n                ov.clearanceList &&\n                ov.clearanceList.some(\n                  clearance => clearance.organizationId === this.userOrganization.organizationId && clearance.cleared != null\n                )\n              ) {\n                this.clearedByUserAgencyOverviewList.push(row);\n              } else if (ov.status === PortCallStatusTypes.CANCELLED) {\n                this.cancelledOverviewList.push(row);\n              } else if (ov.status === PortCallStatusTypes.COMPLETED) {\n                this.completedOverviewList.push(row);\n              } else {\n                this.overviewList.push(row);\n              }\n\n            });\n          }\n        },\n        error => console.log(error),\n        () => {\n        }\n      );\n\n  }\n\n  private sortOverView() {\n\n    this.overviewService.setOverviewData(this.overviewList.sort(\n      (row1, row2) => (row2 && row1) ? row2.portCallId - row1.portCallId : null\n    ));\n    this.overviewService.setDraftData(this.draftOverviewList.sort(\n      (row1, row2) => (row2 && row1) ? row2.portCallId - row1.portCallId : null\n    ));\n    this.overviewService.setClearedData(this.clearedByUserAgencyOverviewList.sort(\n      (row1, row2) => (row2 && row1) ? row2.portCallId - row1.portCallId : null\n    ));\n    this.rerenderList();\n  }\n\n  private rerenderList() {\n    let portCallList = this.overviewList;\n    if (this.showCancelledPortCalls) {\n      portCallList = portCallList.concat(this.cancelledOverviewList);\n    }\n    if (this.showCompletedPortCalls) {\n      portCallList = portCallList.concat(this.completedOverviewList);\n    }\n    this.overviewService.setOverviewData(portCallList.sort(\n      (row1, row2) => (row2.overviewModel.portCall && row1.overviewModel.portCall) ?  row2.overviewModel.portCall.portCallId - row1.overviewModel.portCall.portCallId : null\n    ));\n  }\n\n  onPortCallCancelled(portCallId) {\n    this.movePortCallToList(portCallId, this.overviewList, this.cancelledOverviewList);\n  }\n\n  onPortCallCompleted(portCallId) {\n    this.movePortCallToList(portCallId, this.overviewList, this.completedOverviewList);\n  }\n\n  onPortCallUncompleted(portCallId) {\n    this.movePortCallToList(portCallId, this.completedOverviewList, this.overviewList);\n  }\n\n  private movePortCallToList(portCallId: number, fromList: any[], toList: any[]) {\n    const portCallIndex = fromList.findIndex(row => row.overviewModel.portCall.portCallId === portCallId);\n    if (portCallIndex >= 0) {\n      toList.push(fromList[portCallIndex]);\n      fromList.splice(portCallIndex, 1);\n      this.rerenderList();\n    }\n  }\n\n  toggleCancelledPortCalls(showCancelled) {\n    this.overviewService.setShowCancelledPortCalls(showCancelled);\n  }\n\n  toggleCompletedPortCalls(showCompleted) {\n    this.overviewService.setShowCompletedPortCalls(showCompleted);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/overview.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Set actual time of arrival and departure\\\" (click)=\\\"openModal(actualTimeModal)\\\">\\n  <div class=\\\"mx-auto\\\">\\n    <img src=\\\"assets/images/icons/128x128/white/time.png\\\" height=\\\"20px\\\" />\\n  </div>\\n</button>\\n\\n<ng-template #actualTimeModal let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Set actual time of arrival and departure</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-date-time-picker [header]=\\\"'ATA'\\\" [dateTimeInput]=\\\"portCallAta\\\" (dateTimeResult)=\\\"onAtaResult($event)\\\" (dateFormatError)=\\\"onAtaDateFormatError($event)\\\"></app-date-time-picker>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ataAfterTodayError\\\">Actual arrival time cannot be set to the future.</div>\\n    <app-date-time-picker [header]=\\\"'ATD'\\\" [dateTimeInput]=\\\"portCallAtd\\\" (dateTimeResult)=\\\"onAtdResult($event)\\\" (dateFormatError)=\\\"onAtdDateFormatError($event)\\\"></app-date-time-picker>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"atdAfterTodayError\\\">Actual departure time cannot be set to the future.</div>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"dateSequenceError\\\">Departure time must be after arrival time.</div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-success\\\" disabled *ngIf=\\\"ataAfterTodayError || atdAfterTodayError || dateSequenceError || ataDateFormatError || atdDateFormatError\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n      <span>Save</span>\\n    </button>\\n    <span *ngIf=\\\"saving\\\">Saving...</span>\\n    <span class=\\\"badge badge-success\\\" *ngIf=\\\"saved\\\">Your changes have been saved.</span>\\n    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"saveError\\\">An error occured when trying to save.</span>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"save()\\\" [disabled]=\\\"saving\\\" *ngIf=\\\"!(ataAfterTodayError || atdAfterTodayError || dateSequenceError || ataDateFormatError || atdDateFormatError)\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"20px\\\">\\n      <span>Save</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\n      <span>Exit</span>\\n    </button>\\n  </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\nimport { PortCallModel } from 'app/shared/models/port-call-model';\nimport { PortCallService } from 'app/shared/services/port-call.service';\n\n@Component({\n  selector: 'app-set-actual-time',\n  templateUrl: './set-actual-time.component.html',\n  styleUrls: ['./set-actual-time.component.css']\n})\nexport class SetActualTimeComponent implements OnInit {\n\n  @Input() portCallModel: any;\n\n  @Output() portCallModelChange = new EventEmitter<PortCallModel>();\n\n  @Output() portCallCompleted = new EventEmitter<number>();\n  @Output() portCallCleared = new EventEmitter<number>();\n\n  modalRef: NgbModalRef;\n\n  portCallAta: DateTime = {\n    date: null,\n    time: new NgbTime(0, 0, 0)\n  };\n  portCallAtd: DateTime = {\n    date: null,\n    time: new NgbTime(0, 0, 0)\n  };\n\n  currentDate: NgbDate;\n  ataModel: DateTime;\n  atdModel: DateTime;\n\n  ataAfterTodayError = false;\n  atdAfterTodayError = false;\n  dateSequenceError = false;\n  ataDateFormatError = false;\n  atdDateFormatError = false;\n\n  saving = false;\n  saved = false;\n  saveError = false;\n\n  constructor(private portCallService: PortCallService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    if (this.portCallModel.locationAta != null) {\n      const ata = new Date(this.portCallModel.locationAta);\n      this.portCallAta = {\n        date: new NgbDate(ata.getFullYear(), ata.getMonth() + 1, ata.getDate()),\n        time: new NgbTime(ata.getHours(), ata.getMinutes(), 0)\n      };\n      this.ataModel = this.portCallAta;\n    }\n\n    if (this.portCallModel.locationAtd != null) {\n      const atd = new Date(this.portCallModel.locationAtd);\n      this.portCallAtd = {\n        date: new NgbDate(atd.getFullYear(), atd.getMonth() + 1, atd.getDate()),\n        time: new NgbTime(atd.getHours(), atd.getMinutes(), 0)\n      };\n      this.atdModel = this.portCallAtd;\n    }\n\n    const today = new Date();\n    this.currentDate = new NgbDate(today.getFullYear(), today.getMonth() + 1, today.getDate());\n    this.validateDateTime();\n  }\n\n  onAtaResult(ataResult: DateTime) {\n    this.ataModel = ataResult;\n    this.validateDateTime();\n  }\n\n  onAtdResult(atdResult) {\n    this.atdModel = atdResult;\n    this.validateDateTime();\n  }\n\n  onAtaDateFormatError(ataDateFormatErrorResult) {\n    this.ataDateFormatError = ataDateFormatErrorResult;\n  }\n\n  onAtdDateFormatError(atdDateFormatErrorResult) {\n    this.atdDateFormatError = atdDateFormatErrorResult;\n  }\n\n  validateDateTime() {\n    let arrival: DateTime = null;\n    let departure: DateTime = null;\n\n    if (this.ataModel && this.ataModel.date) {\n      arrival = {\n        date: new NgbDate(this.ataModel.date.year, this.ataModel.date.month, this.ataModel.date.day),\n        time: new NgbTime(this.ataModel.time.hour, this.ataModel.time.minute, 0)\n      };\n      this.portCallModel.locationAta = new Date(arrival.date.year, arrival.date.month - 1, arrival.date.day,\n        arrival.time.hour, arrival.time.minute, 0);\n    } else {\n      this.portCallModel.locationAta = null;\n    }\n\n    if (this.atdModel && this.atdModel.date) {\n      departure = {\n        date: new NgbDate(this.atdModel.date.year, this.atdModel.date.month, this.atdModel.date.day),\n        time: new NgbTime(this.atdModel.time.hour, this.atdModel.time.minute, 0)\n      };\n      this.portCallModel.locationAtd = new Date(departure.date.year, departure.date.month - 1, departure.date.day,\n        departure.time.hour, departure.time.minute, 0);\n    } else {\n      this.portCallModel.locationAtd = null;\n    }\n\n    this.ataAfterTodayError = arrival != null ? this.currentDate.before(arrival.date) : false;\n    this.atdAfterTodayError = departure != null ? this.currentDate.before(departure.date) : false;\n\n    if (arrival != null && departure != null) {\n      this.dateSequenceError = arrival.date.after(departure.date);\n      if (arrival.date.equals(departure.date)) {\n        this.dateSequenceError = arrival.time.hour > departure.time.hour\n          || (arrival.time.hour === departure.time.hour && arrival.time.minute >= departure.time.minute);\n      }\n    } else {\n      this.dateSequenceError = false;\n    }\n  }\n\n  save() {\n    this.saving = true;\n    this.saved = false;\n    this.saveError = false;\n\n    this.portCallService.updatePortCall(this.portCallModel).subscribe(\n      result => {\n        this.saved = true;\n        if (null != result.locationAtd) {\n          this.portCallService.updatePortCallStatusCompleted(result.portCallId).subscribe(\n            res => {\n              this.portCallModel = res;\n              this.portCallCompleted.emit(result.portCallId);\n              this.modalRef.close();\n\n            },\n            err => console.log(err)\n          );\n        } else {\n          this.portCallService.updatePortCallStatusCleared(result.portCallId).subscribe(\n            res => {\n              this.portCallModel = res;\n              this.portCallCleared.emit(result.portCallId);\n              this.modalRef.close();\n            },\n            err => console.log(err)\n          );\n        }\n      },\n      error => {\n        this.saveError = true;\n        console.log(error);\n      },\n      () => {\n        this.saving = false;\n      }\n    );\n  }\n\n  openModal(content) {\n    this.saving = false;\n    this.saved = false;\n    this.saveError = false;\n    this.modalRef = this.modalService.open(content, {size: 'lg'});\n    this.modalRef.result.then(\n      (result) => {\n        this.modalClosed();\n      },\n      (reason) => {\n        this.modalClosed();\n      });\n  }\n\n  modalClosed() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/port-call.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"permissions.register\\\">\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\n        <app-ssn-card header=\\\"New Port Call\\\" icon=\\\"portcall.png\\\">\\n            <div class=\\\"text-center\\\">\\n                <p>To register a new port call, you have to create a port call draft, and then activate it.</p>\\n                <button class=\\\"btn btn-ssn\\\" (click)=\\\"selectRegister()\\\">New Port Call Draft</button>\\n            </div>\\n        </app-ssn-card>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <app-overview></app-overview>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/port-call.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { PortCallClaims } from 'app/shared/constants/port-call-claims';\nimport { AccountService, ContentService, PortCallService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\nimport { FORM_NAMES } from '../../../shared/constants/form-names';\n\n@Component({\n  selector: 'app-port-call',\n  templateUrl: './port-call.component.html',\n  styleUrls: ['./port-call.component.css']\n})\nexport class PortCallComponent implements OnInit, OnDestroy {\n  selectedComponent: 'Passenger List';\n  permissions = PortCallClaims.portCallPermissions;\n\n  userClaimsDataSubscription: Subscription;\n\n  constructor(\n    private accountService: AccountService,\n    private contentService: ContentService,\n    private portCallService: PortCallService\n  ) { }\n\n  ngOnInit() {\n    this.userClaimsDataSubscription = this.accountService.userClaimsData$.subscribe(userClaims => {\n      if (userClaims) {\n        const userClaimsTypePortCall = userClaims.filter(\n          claim => claim.type === PortCallClaims.TYPE\n        );\n        const keys = Object.keys(this.permissions);\n        keys.forEach(key => {\n          this.permissions[key] = userClaimsTypePortCall.some(\n            claim => claim.value.toUpperCase() === key.toString().toUpperCase()\n          );\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.userClaimsDataSubscription.unsubscribe();\n  }\n\n  selectRegister() {\n    this.portCallService.wipeServiceData();\n    this.contentService.setPortCallForm(FORM_NAMES.VOYAGES);\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_PORT_CALL);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/port-call.component.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CargoItemFormComponent } from 'app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component';\nimport { CargoTableComponent } from 'app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component';\nimport { ShipStoresComponent } from 'app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component';\nimport { ActionButtonsComponent } from 'app/shared/components/action-buttons/action-buttons.component';\nimport { DeleteButtonComponent } from 'app/shared/components/delete-button/delete-button.component';\nimport { IdentityDocumentComponent } from 'app/shared/components/identity-document/identity-document.component';\nimport { DpgService } from 'app/shared/services/';\nimport { CountryService } from 'app/shared/services/country.service';\nimport { FalCargoService } from 'app/shared/services/fal-cargo.service';\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\nimport { IdentityDocumentService } from 'app/shared/services/identtity-document.service';\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\nimport { PortCallFalPersonOnBoardService } from 'app/shared/services/port-call-fal-person-on-board.service';\nimport { PortCallService } from 'app/shared/services/port-call.service';\nimport { ValidateDateTimeService } from 'app/shared/services/validate-date-time.service';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { FalSecurityService } from '../../../shared/services/fal-security.service';\nimport { PortCallOverviewService } from '../../../shared/services/port-call-overview.service';\nimport { ClearanceComponent } from './clearance/clearance.component';\nimport { ActivatePortCallComponent } from './confirmation/activate-port-call/activate-port-call.component';\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\nimport { LoadPortCallService } from './load-port-call.service';\nimport { ButtonRowComponent } from './overview/button-row/button-row.component';\nimport { ClearanceRowComponent } from './overview/clearance-row/clearance-row.component';\nimport { OverviewComponent } from './overview/overview.component';\nimport { SetActualTimeComponent } from './overview/set-actual-time/set-actual-time.component';\nimport { PortCallComponent } from './port-call.component';\nimport { CargoComponent } from './registration/forms/cargo/cargo.component';\nimport { ConsignmentFormComponent } from './registration/forms/cargo/consignment-form/consignment-form.component';\nimport { CrewListComponent } from './registration/forms/crew-list/crew-list.component';\nimport { CrewMemberModalComponent } from './registration/forms/crew-list/crew-member-modal/crew-member-modal.component';\nimport { SaveCrewListComponent } from './registration/forms/crew-list/save-crew-list/save-crew-list.component';\nimport { DpgComponent } from './registration/forms/dpg/dpg.component';\nimport { FormsComponent } from './registration/forms/forms.component';\nimport { PassengerListComponent } from './registration/forms/passenger-list/passenger-list.component';\nimport { PassengerModalComponent } from './registration/forms/passenger-list/passenger-modal/passenger-modal.component';\nimport { SavePassengerListComponent } from './registration/forms/passenger-list/save-passenger-list/save-passenger-list.component';\nimport { CargoDescriptionComponent } from './registration/forms/port-call-details/cargo-description/cargo-description.component';\nimport { CrewPassengersDimensionsComponent } from './registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component';\nimport { PortCallDetailsComponent } from './registration/forms/port-call-details/port-call-details.component';\nimport { PurposeComponent } from './registration/forms/port-call-details/purpose/purpose.component';\nimport { ReportingComponent } from './registration/forms/port-call-details/reporting/reporting.component';\nimport { SaveDetailsComponent } from './registration/forms/port-call-details/save-details/save-details.component';\nimport { CompanySecurityOfficerComponent } from './registration/forms/security/company-security-officer/company-security-officer.component';\nimport { Last10PortCallsTableComponent } from './registration/forms/security/last-10-port-calls/last-10-port-calls-table/last-10-port-calls-table.component';\nimport { Last10PortCallsComponent } from './registration/forms/security/last-10-port-calls/last-10-port-calls.component';\nimport { SaveSecurityButtonComponent } from './registration/forms/security/save-security/save-security-button/save-security-button.component';\nimport { SaveSecurityComponent } from './registration/forms/security/save-security/save-security.component';\nimport { SecurityDetailsComponent } from './registration/forms/security/security-details/security-details.component';\nimport { SecurityComponent } from './registration/forms/security/security.component';\nimport { ShipToShipActivityTableComponent } from './registration/forms/security/ship-to-ship-activity/ship-to-ship-activity-table/ship-to-ship-activity-table.component';\nimport { ShipToShipActivityComponent } from './registration/forms/security/ship-to-ship-activity/ship-to-ship-activity.component';\nimport { DatePickerComponent } from './registration/forms/shared/date-picker/date-picker.component';\nimport { SaveShipStoresComponent } from './registration/forms/ship-stores/save-ship-stores/save-ship-stores.component';\nimport { ShipStoresModalComponent } from './registration/forms/ship-stores/ship-stores-modal/ship-stores-modal.component';\nimport { SaveNewPortCallComponent } from './registration/forms/voyages/save-new-port-call/save-new-port-call.component';\nimport { SaveVoyagesComponent } from './registration/forms/voyages/save-voyages/save-voyages.component';\nimport { VoyagesComponent } from './registration/forms/voyages/voyages.component';\nimport { ProgressBarComponent } from './registration/progress-bar/progress-bar.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ViewPortCallComponent } from './view-port-call/view-port-call.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpModule,\n    Ng2SmartTableModule,\n    NgbModule,\n    NgSelectModule,\n    SharedModule\n  ],\n  entryComponents: [ButtonRowComponent, ClearanceRowComponent, DeleteButtonComponent, ActionButtonsComponent],\n  declarations: [\n    ActionButtonsComponent,\n    ButtonRowComponent,\n    ClearanceComponent,\n    ClearanceRowComponent,\n    CrewPassengersDimensionsComponent,\n    FormsComponent,\n    OverviewComponent,\n    PortCallComponent,\n    PortCallDetailsComponent,\n    ProgressBarComponent,\n    PurposeComponent,\n    RegistrationComponent,\n    ReportingComponent,\n    SaveDetailsComponent,\n    ClearanceRowComponent,\n    ShipStoresComponent,\n    DeleteButtonComponent,\n    ViewPortCallComponent,\n    SaveShipStoresComponent,\n    PassengerListComponent,\n    CargoDescriptionComponent,\n    SetActualTimeComponent,\n    CargoComponent,\n    CargoTableComponent,\n    ConsignmentFormComponent,\n    CargoItemFormComponent,\n    DatePickerComponent,\n    SavePassengerListComponent,\n    IdentityDocumentComponent,\n    PassengerModalComponent,\n    CrewListComponent,\n    CrewMemberModalComponent,\n    VoyagesComponent,\n    SaveVoyagesComponent,\n    SaveNewPortCallComponent,\n    SecurityComponent,\n    SecurityDetailsComponent,\n    CompanySecurityOfficerComponent,\n    Last10PortCallsComponent,\n    Last10PortCallsTableComponent,\n    ShipToShipActivityComponent,\n    ShipToShipActivityTableComponent,\n    SaveSecurityComponent,\n    SaveSecurityButtonComponent,\n    ActivatePortCallComponent,\n    ConfirmationComponent,\n    SaveCrewListComponent,\n    ShipStoresModalComponent,\n    DpgComponent\n  ],\n  exports: [\n    ClearanceComponent,\n    PortCallComponent,\n    RegistrationComponent,\n    ViewPortCallComponent,\n    ConfirmationComponent\n  ],\n  providers: [\n    PortCallService,\n    LoadPortCallService,\n    FalShipStoresService,\n    IdentityDocumentService,\n    CountryService,\n    PortCallDetailsService,\n    FalCargoService,\n    ValidateDateTimeService,\n    PortCallFalPersonOnBoardService,\n    FalSecurityService,\n    PortCallOverviewService,\n    DpgService\n  ]\n})\nexport class PortCallModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/port-call.module.ts","module.exports = \":host ::ng-deep .ng-placeholder,\\n::-webkit-input-placeholder {\\n  font-size: 0.875rem;\\n  color: gray !important;\\n  font-style: italic;\\n}\\n\\n:host ::ng-deep .ng-placeholder,\\n:-ms-input-placeholder {\\n  font-size: 0.875rem;\\n  color: gray !important;\\n  font-style: italic;\\n}\\n\\n:host ::ng-deep .ng-placeholder,\\n::-ms-input-placeholder {\\n  font-size: 0.875rem;\\n  color: gray !important;\\n  font-style: italic;\\n}\\n\\n:host ::ng-deep .ng-placeholder,\\n::placeholder {\\n  font-size: 0.875rem;\\n  color: gray !important;\\n  font-style: italic;\\n}\\n\\n:host ::ng-deep .ng-select .ng-select-container {\\n  min-height: 31px;\\n  height: 31px;\\n  border-radius: 0.2rem;\\n  border-color: #ced4da;\\n}\\n\\n:host\\n  ::ng-deep\\n  .ng-dropdown-panel\\n  ::ng-deep\\n  .ng-dropdown-panel-items\\n  ::ng-deep\\n  .ng-option {\\n  font-size: 0.875rem;\\n}\\n\\n:host\\n  ::ng-deep\\n  .ng-select\\n  ::ng-deep\\n  .ng-select-container\\n  ::ng-deep\\n  .ng-value-container\\n  ::ng-deep\\n  .ng-value{\\n    padding: 0;\\n    font-size: .875rem;\\n    line-height: 1.5;\\n    border-radius: .2rem;\\n    color: #495057;\\n}\\n\\n:host\\n  ::ng-deep\\n  .ng-select\\n  ::ng-deep\\n  .ng-select-container\\n  ::ng-deep\\n  .ng-value-container\\n  ::ng-deep\\n  .ng-input {\\n      top: auto;\\n      padding-left: 8px;\\n  }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.css\n// module chunks = main","module.exports = \"<form #form=\\\"ngForm\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"shipping_marks\\\">Shipping Marks</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"cargoItemModel.shippingMarks\\\" placeholder=\\\"Enter shipping marks\\\" name=\\\"shipping_marks\\\" class=\\\"form-control form-control-sm\\\"\\n        />\\n\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"container_identification\\\">Container ID Number</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"cargoItemModel.containerIdentification\\\" placeholder=\\\"Enter container ID number\\\" name=\\\"container_identification\\\"\\n          class=\\\"form-control form-control-sm\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"select_package_type\\\">Package Type</label>\\n        <ng-select name=\\\"select_package_type\\\" [items]=\\\"packageTypeList\\\" [(ngModel)]=\\\"selectedPackageType\\\" placeholder=\\\"Select package type\\\"\\n          bindLabel=\\\"name\\\" (change)=\\\"onPackageTypeSelect($event)\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\"></ng-select>\\n\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"hs_code\\\">HS Code</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"cargoItemModel.hsCode\\\" placeholder=\\\"Enter HS code\\\" name=\\\"hs_code\\\" class=\\\"form-control form-control-sm\\\"\\n        />\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"gross_volume\\\">Gross Volume</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"cargoItemModel.grossVolume\\\" placeholder=\\\"Enter gross volume\\\" name=\\\"gross_volume\\\" class=\\\"form-control form-control-sm\\\"\\n        />\\n\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <div class=\\\"form-group\\\">\\n\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"gross_weight\\\">Gross Weight</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"cargoItemModel.grossWeight\\\" placeholder=\\\"Enter gross weight\\\" name=\\\"gross_weight\\\" class=\\\"form-control form-control-sm\\\"\\n        />\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"number_of_packages\\\">Number of Packages</label>\\n      <input type=\\\"number\\\" [(ngModel)]=\\\"cargoItemModel.numberOfPackages\\\" placeholder=\\\"Enter number of packages\\\" name=\\\"number_of_packages\\\"\\n        class=\\\"form-control form-control-sm\\\" />\\n    </div>\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\n      <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"description\\\">Description</label>\\n      <textarea [(ngModel)]=\\\"cargoItemModel.description\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"description\\\" class=\\\"form-control form-control-sm\\\"\\n        rows=\\\"4\\\" id=\\\"description\\\"></textarea>\\n    </div>\\n  </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { CargoItemModel, PackageTypeModel } from 'app/shared/models/';\nimport { FalCargoService } from 'app/shared/services/fal-cargo.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-cargo-item-form',\n  templateUrl: './cargo-item-form.component.html',\n  styleUrls: ['./cargo-item-form.component.css']\n})\nexport class CargoItemFormComponent implements OnInit {\n  @Input() cargoItemModel: CargoItemModel;\n\n  packageTypeList: PackageTypeModel[] = [];\n  selectedPackageType: PackageTypeModel;\n  packageTypeListSubscription: Subscription;\n\n  constructor(\n    private cargoService: FalCargoService\n  ) { }\n\n  onPackageTypeSelect($event) {\n    this.cargoItemModel.packageType = $event;\n    this.cargoItemModel.packageTypeId = $event.packageTypeId;\n  }\n\n  ngOnInit() {\n    this.packageTypeListSubscription = this.cargoService.getPackageTypeList().subscribe(\n      result => {\n        this.packageTypeList = result;\n      }\n    );\n  }\n\n  touchData() {\n    // not implemented\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.css\n// module chunks = main","module.exports = \"<table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n  <thead class=\\\"bg-ssn text-white\\\">\\n    <tr>\\n      <th class=\\\"py-1\\\">\\n        <h5 class=\\\"mb-0\\\">Cargo</h5>\\n      </th>\\n    </tr>\\n  </thead>\\n</table>\\n<div class=\\\"table-responsive\\\">\\n  <ng2-smart-table [settings]=\\\"cargoTableSettings\\\" [source]=\\\"cargoDataSource\\\"></ng2-smart-table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { DeleteButtonComponent } from 'app/shared/components/delete-button/delete-button.component';\nimport { CargoItemModel } from 'app/shared/models/cargo-item-model';\nimport { FalCargoService } from 'app/shared/services/fal-cargo.service';\nimport { LocalDataSource } from 'ng2-smart-table';\n\n@Component({\n  selector: 'app-cargo-table',\n  templateUrl: './cargo-table.component.html',\n  styleUrls: ['./cargo-table.component.css']\n})\nexport class CargoTableComponent implements OnInit, OnChanges {\n  @Input() cargoItemList: CargoItemModel[];\n  @Output() delete = new EventEmitter<any>();\n\n  cargoDataSource: LocalDataSource = new LocalDataSource();\n\n  cargoTableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n\n    columns: {\n      shippingMarks: {\n        title: 'Shipping Marks',\n        type: 'html'\n      },\n      containerIdentification: {\n        title: 'Container ID Number',\n        type: 'html'\n      },\n      numberOfPackages: {\n        title: 'Number of Packages',\n        type: 'html'\n      },\n      packageType: {\n        title: 'Package Type',\n        type: 'html'\n      },\n      descriptionOfGoods: {\n        title: 'Description of Goods',\n        type: 'html'\n      },\n      hsCode: {\n        title: 'HS Code',\n        type: 'html'\n      },\n      grossVolume: {\n        title: 'Gross Volume (M3)',\n        type: 'html'\n      },\n      grossWeight: {\n        title: 'Gross Weight (KGM)',\n        type: 'html'\n      },\n      delete: {\n        title: 'Delete',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: DeleteButtonComponent,\n        onComponentInitFunction: (instance) => {\n          instance.delete.subscribe(row => {\n            this.deleteCargoItem(row);\n          });\n        }\n      }\n    }\n  };\n\n  constructor(\n    private cargoService: FalCargoService\n  ) { }\n\n  ngOnInit() {\n    const rows = this.generateRows();\n    this.cargoDataSource.load(rows);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const rows = this.generateRows();\n    this.cargoDataSource.load(rows);\n  }\n\n  deleteCargoItem(row) {\n    /*     this.cargoItemList = this.cargoItemList.filter(entry => entry !== row.cargoItemModel);\n        const rows = this.generateRows();\n        this.cargoDataSource.load(rows); */\n    this.delete.emit(row);\n    // this.cargoService.setDataIsPristine(false);\n  }\n\n  generateRows() {\n    const rowData = this.cargoItemList.map(item => {\n      const row = {\n        cargoItemModel: item,\n        shippingMarks: item.shippingMarks,\n        containerIdentification: item.containerIdentification,\n        numberOfPackages: item.numberOfPackages,\n        packageType: item.packageType.name,\n        descriptionOfGoods: item.description,\n        hsCode: item.hsCode,\n        grossVolume: item.grossVolume,\n        grossWeight: item.grossWeight\n      };\n      return row;\n    });\n    return rowData;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"'New Consignment'\\\">\\n  <div class=\\\"text-center\\\">\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"openModal(consignmentModal)\\\">New Consignment</button>\\n  </div>\\n</app-ssn-card>\\n\\n<div *ngFor=\\\"let entry of consignmentWithTableDataList\\\" class=\\\"text-center\\\">\\n  <app-ssn-card [header]=\\\"'Consignment: ' + entry.consignmentModel.name\\\" [collapsible]=\\\"true\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div *ngIf=\\\"entry.portOfLoadingData\\\">\\n          <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n            <thead class=\\\"bg-ssn text-white\\\">\\n              <tr>\\n                <th class=\\\"py-1\\\">\\n                  <h5 class=\\\"mb-0\\\">Port Of Loading</h5>\\n                </th>\\n              </tr>\\n            </thead>\\n          </table>\\n          <div class=\\\"table-responsive\\\">\\n            <app-ssn-table [entryData]=\\\"entry.portOfLoadingData\\\"></app-ssn-table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div *ngIf=\\\"entry.portOfDischargeData\\\">\\n          <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n            <thead class=\\\"bg-ssn text-white\\\">\\n              <tr>\\n                <th class=\\\"py-1\\\">\\n                  <h5 class=\\\"mb-0\\\">Port Of Discharge</h5>\\n                </th>\\n              </tr>\\n            </thead>\\n          </table>\\n          <div class=\\\"table-responsive\\\">\\n            <app-ssn-table [entryData]=\\\"entry.portOfDischargeData\\\"></app-ssn-table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row text-left\\\">\\n      <div class=\\\"col\\\">\\n        <p class=\\\"mb-0\\\">Remark:</p>\\n        <textarea class=\\\"col-md-6\\\" readonly disabled rows=\\\"5\\\" style=\\\"resize: none\\\" value=\\\"{{ entry.consignmentModel.remark }}\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n      <div class=\\\"col\\\">\\n        <button class=\\\"btn btn-ssn btn-sm\\\" (click)=\\\"openModal(consignmentModal, entry.consignmentModel)\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\">\\n          <span> Edit Consignment</span>\\n        </button>\\n        <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"openModal(deleteConsignmentModal, entry.consignmentModel)\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/trash.png\\\" height=\\\"20px\\\">\\n          <span> Delete Consignment</span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <app-cargo-table *ngIf=\\\"entry.consignmentModel.cargoItem\\\" [cargoItemList]=\\\"entry.consignmentModel.cargoItem\\\" (delete)=\\\"onDeleteCargoItem($event)\\\"></app-cargo-table>\\n      </div>\\n    </div>\\n    <div class=\\\"row text-left\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <button class=\\\"btn btn-ssn btn-sm\\\" (click)=\\\"openModal(cargoItemModal, entry.consignmentModel)\\\">\\n          <span> New Cargo Item</span>\\n        </button>\\n      </div>\\n    </div>\\n  </app-ssn-card>\\n</div>\\n\\n<app-ssn-card [header]=\\\"'Save Consignments'\\\">\\n  <div class=\\\"text-center\\\">\\n    <span class=\\\"my-2\\\" *ngIf=\\\"dataIsPristine\\\">There are no unsaved changes on this page.</span>\\n    <div *ngIf=\\\"!(saving || dataIsPristine)\\\">\\n      <button class=\\\"btn btn-ssn my-1\\\" (click)=\\\"saveChanges()\\\">\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span> Save Consignments</span>\\n      </button>\\n    </div>\\n    <div *ngIf=\\\"saving || dataIsPristine\\\">\\n      <button class=\\\"btn btn-ssn my-1\\\" [disabled]=\\\"true\\\">\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span> Save Consignments</span>\\n      </button>\\n      <span *ngIf=\\\"saving\\\"> Saving...</span>\\n    </div>\\n  </div>\\n</app-ssn-card>\\n\\n<ng-template #cargoItemModal let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">{{ cargoItemModalHeader }}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-cargo-item-form [cargoItemModel]=\\\"openCargoItem\\\"></app-cargo-item-form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <div *ngIf=\\\"openCargoItem.shippingMarks && openCargoItem.containerIdentification && openCargoItem.packageType && openCargoItem.packageTypeId && openCargoItem.grossVolume\\n    && openCargoItem.grossWeight && openCargoItem.hsCode && openCargoItem.numberOfPackages\\\">\\n      <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveCargoItem(); close\\\">\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span> Save</span>\\n      </button>\\n    </div>\\n    <div *ngIf=\\\"!(openCargoItem.shippingMarks && openCargoItem.containerIdentification && openCargoItem.packageType && openCargoItem.packageTypeId && openCargoItem.grossVolume\\n    && openCargoItem.grossWeight && openCargoItem.hsCode && openCargoItem.numberOfPackages)\\\">\\n      <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span> Save</span>\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #consignmentModal let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">{{ consignmentModalHeader }}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-consignment-form [consignmentModel]=\\\"consignmentCopy\\\"></app-consignment-form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <div *ngIf=\\\"consignmentCopy.name && consignmentCopy.portOfLoadingId && consignmentCopy.portOfDischargeId\\\">\\n      <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveConsignment(); close\\\">\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span> Save</span>\\n      </button>\\n    </div>\\n    <div *ngIf=\\\"!(consignmentCopy.name && consignmentCopy.portOfLoadingId && consignmentCopy.portOfDischargeId)\\\">\\n      <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span> Save</span>\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #deleteConsignmentModal let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Confirm Deletion</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"text-center\\\">\\n      <span>Delete the consignment \\\"{{ consignmentCopy.name || 'Consignment without name' }}\\\" and all cargo items belonging to\\n        it?\\n      </span>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-danger mt-2\\\" (click)=\\\"deleteConsignment(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/trash.png\\\" height=\\\"24px\\\">\\n      <span> Delete</span>\\n    </button>\\n    <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\n      <span> Cancel</span>\\n    </button>\\n  </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { LocationProperties } from 'app/shared/constants/location-properties';\nimport { CargoItemModel, ConsignmentModel, LocationModel } from 'app/shared/models/';\nimport { FalCargoService } from 'app/shared/services/fal-cargo.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-cargo',\n  templateUrl: './cargo.component.html',\n  styleUrls: ['./cargo.component.css']\n})\nexport class CargoComponent implements OnInit, OnDestroy {\n  @Input() portCallId: number;\n  @Input() cargoData: ConsignmentModel[];\n\n  consignmentListSubscription: Subscription;\n  dataIsPristineSubscription: Subscription;\n\n  openConsignment: ConsignmentModel = null;\n  consignmentCopy: ConsignmentModel = null;\n  consignmentIsNew = false;\n  saving = false;\n\n  dataIsPristine = true;\n\n  openCargoItem: CargoItemModel = null;\n  cargoItemIsNew = false;\n\n  consignmentWithTableDataList: any[] = [];\n\n  modal: NgbModalRef;\n\n  newConsignmentText = 'New Consignment';\n  editConsignmentText = 'Edit Consignmment';\n  consignmentModalHeader: string;\n  newCargoItemText = 'New Cargo Item';\n  editCargoItemText = 'Edit Cargo Item';\n  cargoItemModalHeader: string;\n\n  constructor(\n    private cargoService: FalCargoService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n    if (this.cargoData) {\n      this.consignmentWithTableDataList = this.cargoData.map(c => {\n        const obj = {\n          consignmentModel: c,\n          portOfLoadingData: null,\n          portOfDischargeData: null\n        };\n        return obj;\n      });\n      this.setTableData();\n    }\n    this.dataIsPristineSubscription = this.cargoService.dataIsPristine$.subscribe(\n      pristineData => {\n        this.dataIsPristine = pristineData;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.dataIsPristineSubscription.unsubscribe();\n  }\n\n  openModal(content, consignment = null, cargoItem = null) {\n    this.consignmentIsNew = (consignment == null);\n    this.consignmentModalHeader = this.consignmentIsNew ? this.newConsignmentText : this.editConsignmentText;\n    this.cargoItemIsNew = (cargoItem == null);\n    this.cargoItemModalHeader = this.cargoItemIsNew ? this.newCargoItemText : this.editCargoItemText;\n    if (this.consignmentIsNew) {\n      consignment = new ConsignmentModel();\n    } else if (this.cargoItemIsNew) {\n      cargoItem = new CargoItemModel();\n      cargoItem.consignmentId = consignment.consignmentId;\n    }\n    this.openConsignment = consignment;\n    this.consignmentCopy = JSON.parse(JSON.stringify(this.openConsignment));\n    this.openCargoItem = cargoItem;\n    this.modal = this.modalService.open(content, { size: 'lg' });\n  }\n\n  onDeleteCargoItem($event) {\n    this.consignmentWithTableDataList = this.consignmentWithTableDataList.map(entry => {\n      if (entry.consignmentModel.cargoItem && entry.consignmentModel.cargoItem.length > 0) {\n        entry.consignmentModel.cargoItem = entry.consignmentModel.cargoItem.filter(item => item !== $event.cargoItemModel);\n      }\n      return entry;\n    });\n    this.touchData();\n  }\n\n  saveChanges() {\n    this.saving = true;\n    const consignmentList = this.consignmentWithTableDataList.map(entry => entry.consignmentModel);\n    this.cargoService.setConsignmentListData(consignmentList);\n    const formattedConsignmentList = this.cargoService.formatConsignment(consignmentList);\n    this.cargoService.saveConsignmentListForPortCall(formattedConsignmentList, this.portCallId).subscribe(\n      res => {\n        this.cargoService.setDataIsPristine(true);\n        this.saving = false;\n      }, error => {\n        this.saving = false;\n        console.error(error);\n      }\n    );\n  }\n\n\n  saveConsignment() {\n    this.openConsignment = Object.assign(this.openConsignment, this.consignmentCopy);\n    this.openConsignment.portCallId = this.portCallId;\n    let loading = null;\n    let discharge = null;\n    if (this.openConsignment.portOfLoading) {\n      loading = this.portToTable(this.openConsignment.portOfLoading);\n    }\n    if (this.openConsignment.portOfDischarge) {\n      discharge = this.portToTable(this.openConsignment.portOfDischarge);\n    }\n    const obj = {\n      consignmentModel: this.openConsignment,\n      portOfLoadingData: loading,\n      portOfDischargeData: discharge\n    };\n    if (this.consignmentIsNew) {\n      this.consignmentWithTableDataList.unshift(obj);\n    }\n    this.setTableData();\n    this.touchData();\n  }\n\n  deleteConsignment() {\n    this.consignmentWithTableDataList = this.consignmentWithTableDataList.filter(entry => entry.consignmentModel !== this.openConsignment);\n    this.touchData();\n  }\n\n  saveCargoItem() {\n    if (this.cargoItemIsNew) {\n      if (this.openConsignment.cargoItem == null) {\n        this.openConsignment.cargoItem = [];\n      }\n      this.openConsignment.cargoItem = [...this.openConsignment.cargoItem, this.openCargoItem];\n    }\n    this.touchData();\n  }\n\n  setTableData() {\n    this.consignmentWithTableDataList.forEach(entry => {\n      if (entry.consignmentModel.portOfLoading) {\n        entry.portOfLoadingData = this.portToTable(entry.consignmentModel.portOfLoading);\n      } else {\n        entry.portOfLoadingData = null;\n      }\n      if (entry.consignmentModel.portOfDischarge) {\n        entry.portOfDischargeData = this.portToTable(entry.consignmentModel.portOfDischarge);\n      } else {\n        entry.portOfDischargeData = null;\n      }\n    });\n  }\n\n  portToTable(port: LocationModel) {\n    const portOfLoadingData = new LocationProperties().getPropertyList();\n    LocationProperties.setLocationData(portOfLoadingData, port);\n    if (port.country) {\n      LocationProperties.setCountry(portOfLoadingData, port.country.name, port.country.twoCharCode.toLowerCase() + '.png');\n    }\n    return portOfLoadingData;\n  }\n\n  touchData() {\n    const consignmentList = this.consignmentWithTableDataList.map(entry => entry.consignmentModel);\n    this.cargoService.setConsignmentListData(consignmentList);\n    this.cargoService.setDataIsPristine(false);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.ts","module.exports = \".normal {\\n    font-style: normal;\\n}\\n\\n.italic {\\n    font-style: italic;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"consignmentModel.name || placeholderHeader\\\" icon=\\\"cargo.png\\\">\\n  <form #form=\\\"ngForm\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label-xl no-wrap mb-0\\\" for=\\\"consignmentName\\\">Consignment name</label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"consignmentModel.name\\\" placeholder=\\\"Enter a name for this consignment\\\" name=\\\"consignmentName\\\"\\n            class=\\\"form-control form-control-sm\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <app-ssn-card header=\\\"Port of Loading\\\" icon=\\\"location.png\\\">\\n          <app-search-location *ngIf=\\\"!portOfLoadingFound\\\" [restrictTypeHarbour]=true (locationResult)=\\\"onPortOfLoadingResult($event)\\\">\\n          </app-search-location>\\n          <div class=\\\"text-center\\\" *ngIf=\\\"portOfLoadingFound\\\">\\n            <app-ssn-table [entryData]=\\\"portOfLoadingData\\\"></app-ssn-table>\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectPortOfLoading()\\\">\\n              <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n          </div>\\n        </app-ssn-card>\\n      </div>\\n\\n      <div class=\\\"col\\\">\\n        <app-ssn-card header=\\\"Port of Discharge\\\" icon=\\\"location.png\\\">\\n          <app-search-location *ngIf=\\\"!portOfDischargeFound\\\" [restrictTypeHarbour]=true (locationResult)=\\\"onPortOfDischargeResult($event)\\\">\\n          </app-search-location>\\n          <div class=\\\"text-center\\\" *ngIf=\\\"portOfDischargeFound\\\">\\n            <app-ssn-table [entryData]=\\\"portOfDischargeData\\\"></app-ssn-table>\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectPortOfDischarge()\\\">\\n              <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n          </div>\\n        </app-ssn-card>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"remark\\\">Remark</label>\\n          <textarea [(ngModel)]=\\\"consignmentModel.remark\\\" name=\\\"remark\\\" class=\\\"form-control form-control-sm\\\" rows=\\\"4\\\" id=\\\"remark\\\"></textarea>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit  } from '@angular/core';\nimport { LocationProperties } from 'app/shared/constants/location-properties';\nimport { ConsignmentModel, LocationModel } from 'app/shared/models/';\nimport { Subscription } from 'rxjs/Subscription';\nimport { FalCargoService } from '../../../../../../../shared/services/fal-cargo.service';\n\n@Component({\n  selector: 'app-consignment-form',\n  templateUrl: './consignment-form.component.html',\n  styleUrls: ['./consignment-form.component.css']\n})\nexport class ConsignmentFormComponent implements OnInit, OnDestroy {\n  @Input() consignmentModel: ConsignmentModel;\n  placeholderHeader = 'Consignment without name';\n\n  portOfLoadingModel: LocationModel = null;\n  portOfDischargeModel: LocationModel = null;\n\n  dataIsPristine = true;\n\n  portOfLoadingFound = false;\n  portOfDischargeFound = false;\n\n  portOfLoadingData = new LocationProperties().getPropertyList();\n  portOfDischargeData = new LocationProperties().getPropertyList();\n\n  portOfLoadingSubscription: Subscription;\n  portOfDischargeSubscription: Subscription;\n\n  constructor(\n    private cargoService: FalCargoService\n  ) { }\n\n  ngOnInit() {\n    this.cargoService.dataIsPristine$.subscribe(\n      data => {\n        this.dataIsPristine = data;\n      }\n    );\n    if (this.consignmentModel.portOfLoading) {\n      this.portOfLoadingModel = this.consignmentModel.portOfLoading;\n      this.portOfLoadingFound = true;\n      this.onPortOfLoadingResult(this.consignmentModel.portOfLoading);\n    }\n    if (this.consignmentModel.portOfDischarge) {\n      this.onPortOfDischargeResult(this.consignmentModel.portOfDischarge);\n    }\n  }\n\n  ngOnDestroy() {\n  }\n\n  setProperties(portData, portModel: LocationModel) {\n    LocationProperties.setLocationData(portData, portModel);\n    if (portModel.country) {\n      LocationProperties.setCountry(portData, portModel.country.name, portModel.country.twoCharCode.toLowerCase() + '.png');\n    }\n  }\n\n  onPortOfLoadingResult(portOfLoading: LocationModel) {\n    this.consignmentModel.portOfLoading = portOfLoading;\n    this.consignmentModel.portOfLoadingId = portOfLoading.locationId;\n    this.portOfLoadingModel = portOfLoading;\n    this.portOfLoadingFound = true;\n    this.setProperties(this.portOfLoadingData, this.portOfLoadingModel);\n  }\n\n  onPortOfDischargeResult(portOfDischarge: LocationModel) {\n    this.consignmentModel.portOfDischarge = portOfDischarge;\n    this.consignmentModel.portOfDischargeId = portOfDischarge.locationId;\n    this.portOfDischargeModel = portOfDischarge;\n    this.portOfDischargeFound = true;\n    this.setProperties(this.portOfDischargeData, this.portOfDischargeModel);\n  }\n\n  deselectPortOfLoading() {\n    this.consignmentModel.portOfLoading = null;\n    this.consignmentModel.portOfLoadingId = null;\n    this.portOfLoadingModel = null;\n    this.portOfLoadingFound = false;\n  }\n\n  deselectPortOfDischarge() {\n    this.consignmentModel.portOfDischarge = null;\n    this.consignmentModel.portOfDischargeId = null;\n    this.portOfDischargeModel = null;\n    this.portOfDischargeFound = false;\n  }\n\n  touchData() {\n    this.cargoService.setDataIsPristine(false);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n  }\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n  }\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n  }\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: \\\"\\\";\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n  }\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n  }\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n  }\\n:host /deep/ ng2-smart-table a {\\n    color: var(--color-primary-text);\\n  }\\n:host /deep/ a.ng2-smart-page-link.page-link {\\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n  }\\n:host /deep/ span.ng2-smart-page-link.page-link {\\n    color: var(--color-primary-dark);\\n    background-color: #dee2e6;\\n    border-color: #dee2e6;\\n  }\\n:host /deep/ tbody > tr > td.ng2-smart-actions > a {\\n    color: var(--color-primary-dark);\\n  }\\n:host /deep/ ng2-st-tbody-edit-delete > a,\\n  :host /deep/ ng2-st-tbody-create-cancel > a {\\n    color: var(--color-primary);\\n  }\\n.ng-select-placeholder-sm, ::-webkit-input-placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n.ng-select-placeholder-sm, :-ms-input-placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n.ng-select-placeholder-sm, ::-ms-input-placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n.ng-select-placeholder-sm, ::placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n:host /deep/ .ng-placeholder, ::-webkit-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n:host /deep/ .ng-placeholder, :-ms-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n:host /deep/ .ng-placeholder, ::-ms-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n:host /deep/ .ng-placeholder, ::placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n:host /deep/ .ng-input {\\n    height: 21px;\\n  }\\n:host /deep/ .ng-select .ng-select-container{\\n    min-height: 31px;\\n    height: 31px;\\n    border-radius: .2rem;\\n    border-color: #ced4da;\\n  } \\n  \\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-list.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-list.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Add New Crew Member\\\" icon=\\\"crew.png\\\">\\n\\n  <form name=\\\"crewForm\\\" #form=\\\"ngForm\\\">\\n\\n    <div class=\\\"col-lg-12\\\">\\n      <app-ssn-card header=\\\"Personalia\\\" icon=\\\"user.png\\\" [collapsible]=\\\"true\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"givenName\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Given Name *</label>\\n                <input #givenName=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"portCallCrewModel.givenName\\\" placeholder=\\\"Given Name\\\" class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"givenName\\\" required>\\n              </div>\\n            </div>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"givenName.hasError('required') && givenName.touched\\\">\\n              <li>\\n                <small>This field is required.</small>\\n              </li>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"familyName\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Family Name *</label>\\n                <input #familyName=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"portCallCrewModel.familyName\\\" placeholder=\\\"Family Name\\\" class=\\\"form-control form-control-sm\\\"\\n                  required name=\\\"familyName\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"familyName.hasError('required') && familyName.touched\\\">\\n              <li>\\n                <small>This field is required.</small>\\n              </li>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"app-date-of-birth\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Date of Birth</label>\\n                <app-date-picker (dateResult)=\\\"setDateOfBirth($event)\\\" [dateInput]=\\\"getNgbDateFormat(portCallCrewModel.dateOfBirth)\\\" #dateOfBirth></app-date-picker>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"rankName\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Crew member rank/rating</label>\\n                <input #rankName=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"portCallCrewModel.rankName\\\" placeholder=\\\"Crew member rank/rating\\\" class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"rankName\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"rankCode\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Crew member rank/rating code</label>\\n                <input #rankCode=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"portCallCrewModel.rankCode\\\" placeholder=\\\"Crew member rank/rating code\\\"\\n                  class=\\\"form-control form-control-sm\\\" name=\\\"rankCode\\\">\\n              </div>\\n            </div>\\n\\n          </div>\\n          <!-- /.col-lg-6 -->\\n\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"app-search-country\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Country of Birth</label>\\n                <app-search-country *ngIf=\\\"!portCallCrewModel.countryOfBirth\\\" (selectCountry)=\\\"setCountryOfBirth($event)\\\" (deselectCountry)=\\\"resetCountryOfBirth()\\\"></app-search-country>\\n                <div *ngIf=\\\"portCallCrewModel.countryOfBirth\\\" class=\\\"input-group input-group-sm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <img src=\\\"assets/images/flags/128x128/{{ portCallCrewModel.countryOfBirth.twoCharCode | lowercase}}.png\\\" height=\\\"20px\\\">\\n                    </span>\\n                  </div>\\n                  <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [ngModel]=\\\"portCallCrewModel.countryOfBirth.name\\\"\\n                    name=\\\"countryOfBirth\\\" />\\n                  <div>\\n                    <div class=\\\"input-group-append\\\">\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove country of birth\\\" (click)=\\\"resetCountryOfBirth()\\\">\\n                        <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"app-search-country\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Nationality</label>\\n                <app-search-country *ngIf=\\\"!portCallCrewModel.nationality\\\" (selectCountry)=\\\"setNationality($event)\\\" (deselectCountry)=\\\"resetNationality()\\\"></app-search-country>\\n                <div *ngIf=\\\"portCallCrewModel.nationality\\\" class=\\\"input-group input-group-sm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <img src=\\\"assets/images/flags/128x128/{{ portCallCrewModel.nationality.twoCharCode | lowercase}}.png\\\" height=\\\"20px\\\">\\n                    </span>\\n                  </div>\\n                  <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [ngModel]=\\\"portCallCrewModel.nationality.name\\\"\\n                    name=\\\"nationality\\\" />\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove nationality\\\" (click)=\\\"resetNationality()\\\">\\n                      <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"placeOfBirth\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Place of Birth</label>\\n                <input #placeOfBirth=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"portCallCrewModel.placeOfBirth\\\" placeholder=\\\"Place of Birth\\\" class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"placeOfBirth\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"gender\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Gender</label>\\n                <ng-select class=\\\"ng-select-placeholder-sm\\\" [items]=\\\"genderList\\\" [(ngModel)]=\\\"portCallCrewModel.gender\\\" name=\\\"gender\\\" [closeOnSelect]=\\\"true\\\"\\n                  bindLabel=\\\"description\\\" placeholder=\\\"Gender\\\" (change)=\\\"setGender($event)\\\">\\n                </ng-select>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <!-- /.col-lg-6 -->\\n        </div>\\n      </app-ssn-card>\\n\\n      <app-identity-document (changeIdentityDocumentModel)=\\\"setIdentityDocumentModel($event)\\\" [showVisaOrResidenceNumber]=\\\"false\\\"></app-identity-document>\\n\\n    </div>\\n  </form>\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"form-group\\\">\\n      <button *ngIf=\\\"form.valid && validDocumentDates\\\" type=\\\"submit\\\" class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"addCrewMember(); form.reset()\\\">\\n        <span>Submit</span>\\n      </button>\\n      <button *ngIf=\\\"!form.valid || !validDocumentDates\\\" type=\\\"submit\\\" disabled class=\\\"btn btn-ssn mt-2\\\">\\n        <span>Submit</span>\\n      </button>\\n      <button *ngIf=\\\"crewList?.length > 0\\\" type=\\\"submit\\\" class=\\\"btn mt-2 btn-danger float-right\\\" (click)=openWarningModal(warningModal)>\\n        <span>Delete all crew members</span>\\n      </button>\\n      <button *ngIf=\\\"crewList?.length === 0\\\" type=\\\"submit\\\" class=\\\"btn mt-2 btn-danger float-right\\\" disabled>\\n        <span>Delete all crew members</span>\\n      </button>\\n    </div>\\n\\n\\n    <div class=\\\"mb-3\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <div ng2-st-add-button=\\\"\\\" ng-reflect-grid=\\\"[object Object]\\\" class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n        </div>\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"crewListDataSource\\\">\\n        </ng2-smart-table>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n</app-ssn-card>\\n\\n<app-save-crew-list (save)=\\\"saveCrewList()\\\" [listIsPristine]=\\\"listIsPristine\\\"></app-save-crew-list>\\n\\n<app-crew-member-modal (outputCrewModel)=\\\"editCrewMember($event)\\\"></app-crew-member-modal>\\n\\n<ng-template #warningModal let-close=\\\"close()\\\" class=\\\"modal fade\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Warning</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    Do you want to delete all crew members in the list?\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn mt-2 btn-danger float-right\\\" (click)=\\\"deleteAllCrewMembers(); close\\\">\\n      <span>Delete all crew members</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn mt-2 btn-ssn\\\" (click)=\\\"close\\\">\\n      <span>Cancel</span>\\n    </button>\\n  </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-list.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-list.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ActionButtonsComponent } from 'app/shared/components/action-buttons/action-buttons.component';\nimport { IdentityDocumentComponent } from 'app/shared/components/identity-document/identity-document.component';\nimport { PERSON_ON_BOARD_TYPES } from 'app/shared/constants/enumValues';\nimport { GenderModel, IdentityDocumentModel, LocationModel, PersonOnBoardModel, PersonOnBoardTypeModel } from 'app/shared/models/';\nimport { PortCallFalPersonOnBoardService } from 'app/shared/services/';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SmartTableModel } from '../passenger-list/smartTableModel';\nimport { CrewMemberModalComponent } from './crew-member-modal/crew-member-modal.component';\n\n@Component({\n  selector: 'app-crew-list',\n  templateUrl: './crew-list.component.html',\n  styleUrls: ['./crew-list.component.css']\n})\nexport class CrewListComponent implements OnInit, OnDestroy {\n\n  @Input() portCallId: number;\n  @Input() crewList: any[] = [];\n\n  portCallCrewModel: PersonOnBoardModel = new PersonOnBoardModel();\n\n  genderList: GenderModel[];\n  selectedGender: GenderModel;\n  identityDocTypeList: IdentityDocumentModel[];\n  identityDocumentModel: IdentityDocumentModel = new IdentityDocumentModel();\n  personOnBoardType: PersonOnBoardTypeModel;\n\n\n  modalModel: PersonOnBoardModel = new PersonOnBoardModel();\n  listIsPristine = true;\n\n  @ViewChild(CrewMemberModalComponent) crewMemberModalComponent;\n  @ViewChild(IdentityDocumentComponent) identityDocumentComponent;\n  @ViewChild('dateOfBirth') dateOfBirthComponent;\n\n  @ViewChild(NgForm) form: NgForm;\n\n  booleanList: string[] = ['Yes', 'No'];\n  booleanModel = {\n    'Yes': true,\n    'No': false\n  };\n  inTransit: boolean = null;\n\n  formValid = true;\n  validDocumentDates = true;\n  issueDateRequiredError = false;\n  expiryDateRequiredError = false;\n\n  crewListDataSource: LocalDataSource = new LocalDataSource();\n  smartTableList = [];\n\n  tableSettings = {\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    editor: {\n      config: {\n        completer: {\n          descriptionField: 'Search here'\n        }\n      }\n    },\n    noDataMessage: 'There are no crew members in this list.',\n    columns: {\n      sequenceNumber: {\n        title: 'ID'\n      },\n      familyName: {\n        title: 'Family Name',\n      },\n      givenName: {\n        title: 'Given Name'\n      },\n      nationality: {\n        title: 'Nationality'\n      },\n      gender: {\n        title: 'Gender'\n      },\n      dateOfBirth: {\n        title: 'Date of Birth'\n      },\n      rankName: {\n        title: 'Rank/rating'\n      },\n      delete: {\n        title: 'Actions',\n        // deleteButtonContent: 'Delete',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: ActionButtonsComponent,\n        onComponentInitFunction: (instance) => {\n          instance.view.subscribe(row => {\n            this.openViewCrewMemberModal(row);\n          });\n          instance.edit.subscribe(row => {\n            this.openEditCrewMemberModal(row);\n          });\n          instance.delete.subscribe(row => {\n            this.deleteCrewMember(row);\n          });\n        }\n      },\n    }\n  };\n\n  genderListSubscription: Subscription;\n  personOnBoardTypeSubscription: Subscription;\n  pristineSubscription: Subscription;\n\n  constructor(\n    private personOnBoardService: PortCallFalPersonOnBoardService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n\n    if (this.crewList) {\n      this.crewList.forEach(crewMember => {\n        crewMember = this.makeDates(crewMember);\n      });\n    }\n    // Load in crew list in smart table\n    this.crewListDataSource.load(this.generateSmartTable());\n\n  // Initiate models\n  this.portCallCrewModel = new PersonOnBoardModel();\n  this.identityDocumentModel = new IdentityDocumentModel();\n\n  // Get gender list\n  if (!this.genderList) {\n    this.genderListSubscription = this.personOnBoardService.getGenderList().subscribe(\n      results => {\n        this.genderList = results;\n    });\n  }\n\n  this.personOnBoardTypeSubscription = this.personOnBoardService.getPersonOnBoardTypeByEnum(PERSON_ON_BOARD_TYPES.CREW).subscribe(\n    personOnBoardType => {\n      this.personOnBoardType = personOnBoardType;\n  });\n\n    // Set in service\n    this.personOnBoardService.setCrewList(this.crewList);\n\n    this.pristineSubscription = this.personOnBoardService.crewDataIsPristine$.subscribe(\n      isPristine => {\n        this.listIsPristine = isPristine;\n    });\n  }\n\n  ngOnDestroy()  {\n    this.genderListSubscription.unsubscribe();\n    this.personOnBoardTypeSubscription.unsubscribe();\n    this.pristineSubscription.unsubscribe();\n  }\n\n  addCrewMember() {\n    // Modify\n    this.portCallCrewModel.portCallId = this.portCallId;\n    this.portCallCrewModel.personOnBoardType = this.personOnBoardType;\n    this.portCallCrewModel.personOnBoardTypeId = this.personOnBoardType.personOnBoardTypeId;\n\n    // Add the identityDocumentModel to crewModel\n    this.portCallCrewModel.identityDocument.push(this.identityDocumentModel);\n\n    // Add\n    this.crewList.push(this.portCallCrewModel);\n    this.persistData();\n\n    // Reset\n    this.clearForm();\n  }\n\n  generateSmartTable(): any[] {\n    const newList = [];\n    if (this.crewList) {\n      this.crewList.forEach(crewMember => {\n        const modifiedPassenger = new SmartTableModel();\n\n        crewMember.personOnBoardId ? modifiedPassenger.personOnBoardId = crewMember.personOnBoardId : modifiedPassenger.personOnBoardId = null;\n        modifiedPassenger.sequenceNumber = crewMember.sequenceNumber;\n        modifiedPassenger.givenName = crewMember.givenName;\n        modifiedPassenger.familyName = crewMember.familyName;\n        modifiedPassenger.rankName = crewMember.rankName;\n        crewMember.dateOfBirth ? modifiedPassenger.dateOfBirth = this.getDisplayDateFormat(crewMember.dateOfBirth) : modifiedPassenger.dateOfBirth = null;\n        crewMember.nationality ? modifiedPassenger.nationality = crewMember.nationality : modifiedPassenger.nationality = null;\n        crewMember.gender ? modifiedPassenger.gender = crewMember.gender : modifiedPassenger.gender = null;\n        modifiedPassenger.countryOfBirthTwoCharCode = crewMember.nationalityTwoCharCode;\n        modifiedPassenger.nationalityTwoCharCode = crewMember.nationalityTwoCharCode;\n\n        newList.push(modifiedPassenger);\n      });\n    }\n    return newList;\n  }\n\n  persistData() {\n    this.updateSequenceNumbers();\n    this.personOnBoardService.setCrewList(this.crewList);\n    this.touchData();\n    this.reloadTable();\n  }\n\n  touchData() {\n    this.listIsPristine = false;\n    this.personOnBoardService.setCrewDataIsPristine(false);\n  }\n\n  clearForm() {\n    this.portCallCrewModel = new PersonOnBoardModel();\n    this.identityDocumentModel = new IdentityDocumentModel();\n    this.resetDateOfBirth();\n    this.identityDocumentComponent.resetForm();\n  }\n\n  reloadTable() {\n    const rows = this.generateSmartTable();\n    this.crewListDataSource.load(rows);\n  }\n\n  makeLocationModel($event) {\n    const tempLocationModel = Object.assign(new LocationModel(), $event);\n    return tempLocationModel;\n  }\n\n  // Setters\n  setIdentityDocumentModel($event) {\n    this.identityDocumentModel = $event.identityDocumentModel;\n    this.validDocumentDates = $event.validDocumentDates.issueDateAfterExpiryDateError\n    || $event.validDocumentDates.expiryDateBeforeExpiryDateError ? false : true;\n\n    this.issueDateRequiredError = $event.validDocumentDates.issueDateRequiredError;\n    this.expiryDateRequiredError = $event.validDocumentDates.expiryDateRequiredError;\n\n    this.validDocumentDates = this.validDocumentDates && this.issueDateRequiredError && this.expiryDateRequiredError;\n  }\n\n  setDateOfBirth($event) {\n    if ($event) {\n      const date: Date = new Date($event.year, $event.month -  1, $event.day);\n      this.portCallCrewModel.dateOfBirth = date;\n    } else {\n      this.portCallCrewModel.dateOfBirth = null;\n    }\n  }\n\n  setGender($event) {\n    this.portCallCrewModel.gender = $event;\n    this.portCallCrewModel.genderId = $event.genderId;\n  }\n\n  setCountryOfBirth($event) {\n    this.portCallCrewModel.countryOfBirth = $event.item;\n    this.portCallCrewModel.countryOfBirthId = $event.item.countryId;\n  }\n\n  setNationality($event) {\n    this.portCallCrewModel.nationality = $event.item;\n    this.portCallCrewModel.nationalityId = $event.item.countryId;\n  }\n\n  setTransit($event) {\n    this.inTransit = $event;\n    Object.keys(this.booleanModel).forEach(key => {\n      if (key === $event) {\n        this.portCallCrewModel.inTransit = this.booleanModel[key];\n        return;\n      }\n    });\n  }\n\n  // Resetters\n\n  resetNationality() {\n    this.portCallCrewModel.nationality = null;\n    this.portCallCrewModel.nationalityId = null;\n  }\n\n  resetCountryOfBirth() {\n    this.portCallCrewModel.countryOfBirth = null;\n    this.portCallCrewModel.countryOfBirthId = null;\n  }\n\n  resetIssuingNation() {\n    this.identityDocumentModel.issuingNation = null;\n    this.identityDocumentModel.issuingNationId = null;\n  }\n\n  resetDateOfBirth() {\n    this.portCallCrewModel.dateOfBirth = null;\n    this.dateOfBirthComponent.dateChanged(null);\n  }\n\n  makeDates(crewMember: PersonOnBoardModel) {\n    crewMember.dateOfBirth = crewMember.dateOfBirth != null ? new Date(crewMember.dateOfBirth) : null;\n        crewMember.identityDocument.forEach(identityDocument => {\n          identityDocument.identityDocumentIssueDate = identityDocument.identityDocumentIssueDate != null ? new Date(identityDocument.identityDocumentIssueDate) : null;\n          identityDocument.identityDocumentExpiryDate = identityDocument.identityDocumentExpiryDate != null ? new Date(identityDocument.identityDocumentExpiryDate) : null;\n        });\n    return crewMember;\n  }\n\n  openViewCrewMemberModal(row) {\n    this.crewList.forEach(crewMember => {\n      if (crewMember.sequenceNumber === row.sequenceNumber) {\n        this.crewMemberModalComponent.openViewModal(crewMember);\n        return;\n      }\n    });\n  }\n\n  openEditCrewMemberModal(row) {\n    this.crewList.forEach(crewMember => {\n      if (crewMember.sequenceNumber === row.sequenceNumber) {\n        this.crewMemberModalComponent.openEditModal(crewMember);\n        return;\n      }\n    });\n  }\n\n  editCrewMember($event) {\n    // Set corresponding crewMember to the edited instance\n    this.crewList[this.crewList.findIndex(c => c.sequenceNumber === $event.sequenceNumber)] = JSON.parse(JSON.stringify($event));\n    this.personOnBoardService.setCrewList(this.crewList);\n    // Make all dates Date objects again\n    this.crewList.forEach(crewMember => { crewMember = this.makeDates(crewMember); });\n    // Load to smart table\n    this.reloadTable();\n    this.touchData();\n  }\n\n  deleteCrewMember(row) {\n    if (this.crewList.length <= 1) {\n      this.crewList = [];\n    } else {\n      this.crewList.forEach((item, index) => {\n        if (item.sequenceNumber === row.sequenceNumber) {\n          this.crewList.splice(index, 1);\n        }\n      });\n    }\n    this.persistData();\n  }\n\n  deleteAllCrewMembers() {\n    this.crewList = [];\n    this.persistData();\n  }\n\n  saveCrewList() {\n    this.personOnBoardService.updatePersonOnBoardList(this.portCallId, this.crewList, this.personOnBoardType.personOnBoardTypeId).subscribe(res => {\n      this.listIsPristine = true;\n      this.personOnBoardService.setCrewDataIsPristine(true);\n    });\n  }\n\n\n  // Helper methods\n\n  updateSequenceNumbers() {\n    let tempSequenceNumber = 1;\n    this.crewList.forEach(crewMember => {\n      crewMember.sequenceNumber = tempSequenceNumber;\n      tempSequenceNumber++;\n    });\n  }\n\n  getDateFormatFromNgb(date) {\n    return new Date(date.year, date.month, date.day);\n  }\n\n  getDisplayDateFormat(date) {\n    if (date) {\n      const dateString = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n      return dateString;\n    } else {\n      return null;\n    }\n  }\n\n  getNgbDateFormat(date) {\n    const newDate = new Date(date);\n    return {\n      year: newDate.getFullYear(),\n      month: newDate.getMonth() + 1,\n      day: newDate.getDate()\n    };\n  }\n\n  openWarningModal(content: any) {\n    this.modalService.open(content);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-list.component.ts","module.exports = \".modal-body ::ng-deep .ng-select-placeholder-sm,\\n::-webkit-input-placeholder {\\n  font-size: 0.875rem;\\n  height: 31px;\\n}\\n\\n.modal-body ::ng-deep .ng-select-placeholder-sm,\\n:-ms-input-placeholder {\\n  font-size: 0.875rem;\\n  height: 31px;\\n}\\n\\n.modal-body ::ng-deep .ng-select-placeholder-sm,\\n::-ms-input-placeholder {\\n  font-size: 0.875rem;\\n  height: 31px;\\n}\\n\\n.modal-body ::ng-deep .ng-select-placeholder-sm,\\n::placeholder {\\n  font-size: 0.875rem;\\n  height: 31px;\\n}\\n\\n.modal-body ::ng-deep .ng-placeholder,\\n::-webkit-input-placeholder {\\n  color: gray !important;\\n  font-style: italic;\\n}\\n\\n.modal-body ::ng-deep .ng-placeholder,\\n:-ms-input-placeholder {\\n  color: gray !important;\\n  font-style: italic;\\n}\\n\\n.modal-body ::ng-deep .ng-placeholder,\\n::-ms-input-placeholder {\\n  color: gray !important;\\n  font-style: italic;\\n}\\n\\n.modal-body ::ng-deep .ng-placeholder,\\n::placeholder {\\n  color: gray !important;\\n  font-style: italic;\\n}\\n\\n.modal-body ::ng-deep .ng-input {\\n  height: 21px;\\n}\\n\\n.modal-body ::ng-deep .ng-select .ng-select-container {\\n  min-height: 31px;\\n  height: 31px;\\n  border-radius: 0.2rem;\\n  border-color: #ced4da;\\n}\\n\\n.modal-body ::ng-deep .form-control-sm {\\n  height: auto;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-member-modal/crew-member-modal.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-member-modal/crew-member-modal.component.css\n// module chunks = main","module.exports = \"<ng-template #viewModal let-close=\\\"close()\\\" class=\\\"modal fade\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">View</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"resetInputCrewModel(); close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n\\n  </div>\\n  <div class=\\\"modal-body\\\" *ngIf=\\\"inputCrewModel\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Given Name</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputCrewModel.givenName\\\" readonly type=\\\"text\\\" name=\\\"givenName\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Family Name</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputCrewModel.familyName\\\" readonly type=\\\"text\\\" name=\\\"familyName\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Date of Birth</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\" name=\\\"dateOfBirth\\\" [ngModel]=\\\"getDisplayDateFormat(inputCrewModel.dateOfBirth)\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Country of Birth</label>\\n      <div class=\\\"col my-auto\\\">\\n        <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"inputCrewModel.countryOfBirth\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">\\n              <img src=\\\"assets/images/flags/128x128/{{ inputCrewModel.countryOfBirthTwoCharCode | lowercase}}.png\\\" height=\\\"16px\\\">\\n            </span>\\n          </div>\\n          <input class=\\\"form-control\\\" [ngModel]=\\\"inputCrewModel.countryOfBirth\\\" readonly type=\\\"text\\\" name=\\\"countryOfBirth\\\">\\n        </div>\\n        <input *ngIf=\\\"!inputCrewModel.countryOfBirth\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\" name=\\\"countryOfBirth\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Nationality</label>\\n      <div class=\\\"col my-auto\\\">\\n        <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"inputCrewModel.nationality\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">\\n              <img src=\\\"assets/images/flags/128x128/{{ inputCrewModel.nationalityTwoCharCode | lowercase}}.png\\\" height=\\\"16px\\\">\\n            </span>\\n          </div>\\n          <input class=\\\"form-control\\\" [ngModel]=\\\"inputCrewModel.nationality\\\" readonly type=\\\"text\\\" name=\\\"nationality\\\">\\n        </div>\\n        <input *ngIf=\\\"!inputCrewModel.nationality\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\" name=\\\"nationality\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Gender</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input *ngIf=\\\"inputCrewModel.gender\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputCrewModel.gender\\\" readonly\\n          type=\\\"text\\\" name=\\\"gender\\\">\\n        <input *ngIf=\\\"!inputCrewModel.gender\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\" name=\\\"gender\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Rank/rating</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputCrewModel.rankName\\\" readonly type=\\\"text\\\" name=\\\"rankName\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Rank/rating code</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputCrewModel.rankCode\\\" readonly type=\\\"text\\\" name=\\\"rankCode\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Identity Document Type</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input *ngIf=\\\"inputCrewModel.identityDocument[0].identityDocumentType\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputCrewModel.identityDocument[0].identityDocumentType.description\\\"\\n          readonly type=\\\"text\\\" name=\\\"identityDocumentType\\\">\\n        <input *ngIf=\\\"!inputCrewModel.identityDocument[0].identityDocumentType\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\"\\n          name=\\\"identityDocumentType\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Number of Identity Document</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input *ngIf=\\\"inputCrewModel.identityDocument[0]\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputCrewModel.identityDocument[0].identityDocumentNumber\\\"\\n          readonly type=\\\"text\\\" name=\\\"identityDocumentNumber\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Issuing Nation</label>\\n      <div class=\\\"col my-auto\\\">\\n        <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"inputCrewModel.identityDocument[0].issuingNation\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">\\n              <img src=\\\"assets/images/flags/128x128/{{ inputCrewModel.identityDocument[0].issuingNationTwoCharCode | lowercase}}.png\\\"\\n                height=\\\"20px\\\">\\n            </span>\\n          </div>\\n          <input class=\\\"form-control\\\" [ngModel]=\\\"inputCrewModel.identityDocument[0].issuingNation\\\" readonly type=\\\"text\\\" name=\\\"issuingNation\\\">\\n        </div>\\n        <input *ngIf=\\\"!inputCrewModel.identityDocument[0].issuingNation\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\"\\n          name=\\\"issuingNation\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Identity Document Issue Date</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"getDisplayDateFormat(inputCrewModel.identityDocument[0].identityDocumentIssueDate)\\\"\\n          readonly type=\\\"text\\\" name=\\\"identityDocumentIssueDate\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Identity Document Expiry Date</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"getDisplayDateFormat(inputCrewModel.identityDocument[0].identityDocumentExpiryDate)\\\"\\n          readonly type=\\\"text\\\" name=\\\"identityDocumentExpiryDate\\\">\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"resetInputCrewModel(); close\\\">\\n      <span>Exit</span>\\n    </button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #editModal let-close=\\\"close()\\\">\\n  <form #editForm=\\\"ngForm\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Edit</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"resetInputCrewModel(); close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\" *ngIf=\\\"inputCrewModel\\\">\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Given Name</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input class=\\\"form-control form-control-sm\\\" #givenName=\\\"ngModel\\\" [(ngModel)]=\\\"inputCrewModel.givenName\\\" type=\\\"text\\\" name=\\\"givenName\\\"\\n            required>\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"givenName.hasError('required') && givenName.touched\\\">\\n            <li>\\n              <small>This field is required.</small>\\n            </li>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Family Name</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input class=\\\"form-control form-control-sm\\\" #familyName=\\\"ngModel\\\" [(ngModel)]=\\\"inputCrewModel.familyName\\\" type=\\\"text\\\" name=\\\"familyName\\\"\\n            required>\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"familyName.hasError('required') && familyName.touched\\\">\\n            <li>\\n              <small>This field is required.</small>\\n            </li>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Date of Birth</label>\\n        <div class=\\\"col my-auto\\\">\\n          <app-date-picker (dateResult)=\\\"setDateOfBirth($event)\\\" [dateInput]=\\\"getNgbDateFormat(inputCrewModel.dateOfBirth)\\\"></app-date-picker>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Country of Birth</label>\\n        <div class=\\\"col my-auto\\\">\\n          <div *ngIf=\\\"inputCrewModel.countryOfBirth\\\" class=\\\"input-group input-group-sm\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <img src=\\\"assets/images/flags/128x128/{{ inputCrewModel.countryOfBirthTwoCharCode.toLowerCase() | lowercase}}.png\\\" height=\\\"20px\\\">\\n              </span>\\n            </div>\\n            <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"inputCrewModel.countryOfBirth\\\"\\n              name=\\\"countryOfBirth\\\" />\\n            <div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove country of birth\\\" (click)=\\\"resetCountryOfBirth()\\\">\\n                  <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <app-search-country *ngIf=\\\"!inputCrewModel.countryOfBirth\\\" (selectCountry)=\\\"setCountryOfBirth($event)\\\" (deselectCountry)=\\\"resetCountryOfBirth()\\\"></app-search-country>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Nationality</label>\\n        <div class=\\\"col my-auto\\\">\\n          <div *ngIf=\\\"inputCrewModel.nationality\\\" class=\\\"input-group input-group-sm\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <img src=\\\"assets/images/flags/128x128/{{ inputCrewModel.nationalityTwoCharCode.toLowerCase() | lowercase}}.png\\\" height=\\\"20px\\\">\\n              </span>\\n            </div>\\n            <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"inputCrewModel.nationality\\\"\\n              name=\\\"nationailty\\\" />\\n            <div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove nationality\\\" (click)=\\\"resetNationality()\\\">\\n                  <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <app-search-country *ngIf=\\\"!inputCrewModel.nationality\\\" (selectCountry)=\\\"setNationality($event)\\\" (deselectCountry)=\\\"resetNationality()\\\"></app-search-country>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Gender</label>\\n        <div class=\\\"col my-auto\\\">\\n          <ng-select class=\\\"ng-select-placeholder-sm\\\" [items]=\\\"genderList\\\" [ngModel]=\\\"inputCrewModel.gender\\\" name=\\\"gender\\\" bindLabel=\\\"description\\\"\\n            [closeOnSelect]=\\\"true\\\" placeholder=\\\"Gender\\\" (change)=\\\"setGender($event)\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Rank/rating</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"inputCrewModel.rankName\\\" type=\\\"text\\\" name=\\\"rankName\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Rank/rating code</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"inputCrewModel.rankCode\\\" type=\\\"text\\\" name=\\\"rankCode\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"natureOfIdentityDoc\\\" class=\\\"col col-form-label-sm no-wrap mb-0\\\">Nature of Identity Document</label>\\n        <div class=\\\"col my-auto\\\">\\n          <ng-select class=\\\"ng-select-placeholder-sm\\\" [items]=\\\"identityDocumentTypes\\\" [(ngModel)]=\\\"inputCrewModel.identityDocument[0].identityDocumentType\\\"\\n            name=\\\"natureOfIdentityDoc\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"description\\\" placeholder=\\\"Nature of Identity Document\\\"\\n            (change)=\\\"setIdentityDocumentType($event)\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Number of Identity Document</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input *ngIf=\\\"inputCrewModel.identityDocument[0]\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"inputCrewModel.identityDocument[0].identityDocumentNumber\\\"\\n            type=\\\"text\\\" name=\\\"identityDocumentNumber\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Issuing Nation</label>\\n        <div class=\\\"col my-auto\\\">\\n          <div *ngIf=\\\"inputCrewModel.identityDocument[0].issuingNation\\\" class=\\\"input-group input-group-sm\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <img src=\\\"assets/images/flags/128x128/{{ inputCrewModel.identityDocument[0].issuingNationTwoCharCode.toLowerCase() | lowercase}}.png\\\"\\n                  height=\\\"20px\\\">\\n              </span>\\n            </div>\\n            <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"inputCrewModel.identityDocument[0].issuingNation\\\"\\n              name=\\\"issuingNation\\\" />\\n            <div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove isssuing nation\\\" (click)=\\\"resetIssuingNation()\\\">\\n                  <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <app-search-country *ngIf=\\\"!inputCrewModel.identityDocument[0].issuingNation\\\" (selectCountry)=\\\"setIssuingNation($event)\\\"\\n            (deselectCountry)=\\\"resetIssuingNation()\\\"></app-search-country>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Identity Document Issue Date</label>\\n        <div class=\\\"col my-auto\\\">\\n          <app-date-picker (dateResult)=\\\"setIdentityDocumentIssueDate($event)\\\" [dateInput]=\\\"getNgbDateFormat(inputCrewModel.identityDocument[0].identityDocumentIssueDate)\\\"></app-date-picker>\\n          <div *ngIf=\\\"issueDateAfterExpiryDateError\\\" class=\\\"alert alert-danger form-control-sm\\\" role=\\\"alert\\\">\\n            <span>Identity document issue date must be before the expiry date.</span>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Identity Document Expiry Date</label>\\n        <div class=\\\"col my-auto\\\">\\n          <app-date-picker (dateResult)=\\\"setIdentityDocumentExpiryDate($event)\\\" [dateInput]=\\\"getNgbDateFormat(inputCrewModel.identityDocument[0].identityDocumentExpiryDate)\\\"></app-date-picker>\\n          <div *ngIf=\\\"expiryDateBeforeExpiryDateError\\\" class=\\\"alert alert-danger form-control-sm\\\" role=\\\"alert\\\">\\n            <span>Identity document expiry date must be after the issue date.</span>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"modal-footer\\\">\\n      <button *ngIf=\\\"editForm.valid && validDocumentDates && (editForm.form.dirty || dirtyForm === true)\\\" type=\\\"button\\\" class=\\\"btn btn-ssn\\\"\\n        (click)=\\\"editCrewMember(); resetForm(); close\\\">\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span>Save Entry</span>\\n      </button>\\n      <button *ngIf=\\\"!editForm.valid || !validDocumentDates || !(editForm.form.dirty || dirtyForm === true)\\\" type=\\\"button\\\" class=\\\"btn btn-ssn\\\"\\n        disabled>\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span>Save Entry</span>\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"resetInputCrewModel($event); close\\\">\\n        <span>Cancel</span>\\n      </button>\\n    </div>\\n  </form>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-member-modal/crew-member-modal.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-member-modal/crew-member-modal.component.html\n// module chunks = main","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { GenderModel, IdentityDocumentModel, IdentityDocumentTypeModel, PersonOnBoardModel } from 'app/shared/models/';\nimport { IdentityDocumentService, PortCallFalPersonOnBoardService, ValidateDateTimeService } from 'app/shared/services/';\n\n@Component({\n  selector: 'app-crew-member-modal',\n  templateUrl: './crew-member-modal.component.html',\n  styleUrls: ['./crew-member-modal.component.css']\n})\nexport class CrewMemberModalComponent implements OnInit {\n\n  inputCrewModel: any;\n  startInputCrewModel: PersonOnBoardModel;\n  identityDocumentSet: boolean;\n\n  @Output() outputCrewModel: EventEmitter<PersonOnBoardModel> = new EventEmitter();\n\n  @ViewChild('viewModal') viewModal;\n  @ViewChild('editModal') editModal;\n  dirtyForm = false;\n\n  identityDocumentTypes: IdentityDocumentTypeModel[] = [];\n  genderList: GenderModel[] = [];\n\n  booleanList: string[] = ['Yes', 'No'];\n  booleanModel = {\n    'Yes': true,\n    'No': false\n  };\n  formBooleanModel = {\n    'true': 'Yes',\n    'false': 'No'\n  };\n\n  validDocumentDates: Boolean = true;\n  issueDateAfterExpiryDateError: Boolean = false;\n  expiryDateBeforeExpiryDateError: Boolean = false;\n\n  constructor(\n    private modalService: NgbModal,\n    private identityDocumentService: IdentityDocumentService,\n    private personOnBoardService: PortCallFalPersonOnBoardService,\n    private validateDateTimeService: ValidateDateTimeService\n  ) { }\n\n  ngOnInit() {\n    this.inputCrewModel = new PersonOnBoardModel();\n\n    this.identityDocumentService.getIdentityDocumentTypes().subscribe(res => {\n      this.identityDocumentTypes = res;\n    });\n\n    this.personOnBoardService.getGenderList().subscribe(res => {\n      this.genderList = res;\n    });\n  }\n\n  // Open modals\n  openViewModal(crewModel: any) {\n    this.inputCrewModel = JSON.parse(JSON.stringify(crewModel));\n    this.makeDates(this.inputCrewModel);\n    this.inputCrewModel.identityDocument = crewModel.identityDocument;\n    if (this.inputCrewModel.identityDocument === undefined || this.inputCrewModel.identityDocument == null\n      || this.inputCrewModel.identityDocument[0] === undefined || this.inputCrewModel.identityDocument[0] == null\n      ) {\n      this.inputCrewModel.identityDocument[0] = new IdentityDocumentModel();\n    }\n\n    this.modalService.open(this.viewModal);\n  }\n\n  openEditModal(crewModel: any) {\n    // Set model to modify\n    this.inputCrewModel = JSON.parse(JSON.stringify(crewModel));\n    this.makeDates(this.inputCrewModel);\n    this.inputCrewModel.identityDocument = crewModel.identityDocument;\n    if (this.inputCrewModel.identityDocument === undefined || this.inputCrewModel.identityDocument == null\n      || this.inputCrewModel.identityDocument[0] === undefined || this.inputCrewModel.identityDocument[0] == null\n      ) {\n        this.inputCrewModel.identityDocument[0] = new IdentityDocumentModel();\n      }\n\n    this.modalService.open(this.editModal, {\n      backdrop: 'static'\n    });\n  }\n\n  // Output\n  editCrewMember() {\n    this.outputCrewModel.emit(this.inputCrewModel);\n  }\n\n  setNationality($event) {\n    this.dirtyForm = true;\n    this.inputCrewModel.nationality = $event.item.name;\n    this.inputCrewModel.nationalityTwoCharCode = $event.item.twoCharCode;\n    this.inputCrewModel.nationalityId = $event.item.countryId;\n  }\n\n  setCountryOfBirth($event) {\n    this.dirtyForm = true;\n    this.inputCrewModel.countryOfBirth = $event.item.name;\n    this.inputCrewModel.countryOfBirthTwoCharCode = $event.item.twoCharCode;\n    this.inputCrewModel.countryOfBirthId = $event.item.countryId;\n  }\n\n  setIssuingNation($event) {\n    this.dirtyForm = true;\n    this.inputCrewModel.identityDocument[0].issuingNation = $event.item.name;\n    this.inputCrewModel.identityDocument[0].issuingNationTwoCharCode = $event.item.twoCharCode;\n    this.inputCrewModel.identityDocument[0].issuingNationId = $event.item.countryId;\n  }\n\n  setIdentityDocumentType($event) {\n    if ($event) {\n      this.inputCrewModel.identityDocument[0].identityDocumentType = $event;\n      this.inputCrewModel.identityDocument[0].identityDocumentTypeId = $event.id;\n    } else {\n      this.resetIdentityDocumentType();\n    }\n  }\n\n  setDateOfBirth($event) {\n    this.dirtyForm = true;\n    if ($event) {\n      const date: Date = new Date($event.year, $event.month - 1, $event.day);\n      this.inputCrewModel.dateOfBirth = date;\n    } else {\n      this.inputCrewModel.dateOfBirth = null;\n    }\n  }\n\n  setIdentityDocumentIssueDate($event) {\n    this.dirtyForm = true;\n    let date: Date = new Date();\n    if ($event) {\n      date = new Date($event.year, $event.month - 1, $event.day);\n    } else {\n      date = null;\n    }\n    this.inputCrewModel.identityDocument[0].identityDocumentIssueDate = date;\n    const issueDate = this.inputCrewModel.identityDocument[0].identityDocumentIssueDate;\n    const expiryDate = this.inputCrewModel.identityDocument[0].identityDocumentExpiryDate;\n    if (this.validateDateTimeService.checkDocumentDatesError(issueDate, expiryDate)) {\n      this.issueDateAfterExpiryDateError = true;\n    } else {\n      this.issueDateAfterExpiryDateError = false;\n      this.expiryDateBeforeExpiryDateError = false;\n    }\n  }\n\n  setIdentityDocumentExpiryDate($event) {\n    this.dirtyForm = true;\n    let date: Date = new Date();\n    if ($event) {\n      date = new Date($event.year, $event.month - 1, $event.day);\n    } else {\n      date = null;\n    }\n    this.inputCrewModel.identityDocument[0].identityDocumentExpiryDate = date;\n    const issueDate = this.inputCrewModel.identityDocument[0].identityDocumentIssueDate;\n    const expiryDate = this.inputCrewModel.identityDocument[0].identityDocumentExpiryDate;\n    if (this.validateDateTimeService.checkDocumentDatesError(issueDate, expiryDate)) {\n      this.expiryDateBeforeExpiryDateError = true;\n    } else {\n      this.issueDateAfterExpiryDateError = false;\n      this.expiryDateBeforeExpiryDateError = false;\n    }\n  }\n\n  setTransit($event) {\n    this.inputCrewModel.inTransit = this.booleanModel[$event];\n  }\n\n  setGender($event) {\n    if ($event) {\n      this.inputCrewModel.gender = $event;\n      this.inputCrewModel.genderId = $event.genderId;\n    } else {\n      this.inputCrewModel.gender = null;\n      this.inputCrewModel.genderId = null;\n    }\n  }\n\n  // Resetters\n  resetInputCrewModel($event: any) {\n    this.resetForm();\n  }\n\n  resetNationality() {\n    this.dirtyForm = true;\n    this.inputCrewModel.nationality = null;\n    this.inputCrewModel.nationalityId = null;\n  }\n\n  resetCountryOfBirth() {\n    this.dirtyForm = true;\n    this.inputCrewModel.countryOfBirth = null;\n    this.inputCrewModel.countryOfBirthId = null;\n  }\n\n  resetIssuingNation() {\n    this.dirtyForm = true;\n    this.inputCrewModel.identityDocument[0].issuingNation = null;\n    this.inputCrewModel.identityDocument[0].issuingNationId = null;\n  }\n\n  resetIdentityDocumentType() {\n    this.inputCrewModel.identityDocument[0].identityDocumentType = null;\n    this.inputCrewModel.identityDocument[0].identityDocumentTypeId = null;\n  }\n\n  resetForm() {\n    this.dirtyForm = false;\n  }\n\n  // Helper methods\n  getNgbDateFormat(date) {\n    if (date != null) {\n      const newDate = new Date(date);\n      return {\n        year: newDate.getFullYear(),\n        month: newDate.getMonth() + 1,\n        day: newDate.getDate()\n      };\n    } else {\n      return null;\n    }\n  }\n\n  getDateFormatFromNgbDate(date) {\n    if (date) {\n      const newDate = new Date(date.year + '-' + date.month + '-' + date.day);\n      return newDate;\n    }\n    return null;\n  }\n\n  getDisplayDateFormat(date) {\n    if (date) {\n      const dateString = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n      return dateString;\n    } else {\n      return null;\n    }\n  }\n\n  makeDates(crewMember: PersonOnBoardModel) {\n    crewMember.dateOfBirth = crewMember.dateOfBirth != null ? new Date(crewMember.dateOfBirth) : null;\n        crewMember.identityDocument.forEach(identityDocument => {\n          identityDocument.identityDocumentIssueDate = identityDocument.identityDocumentIssueDate != null ? new Date(identityDocument.identityDocumentIssueDate) : null;\n          identityDocument.identityDocumentExpiryDate = identityDocument.identityDocumentExpiryDate != null ? new Date(identityDocument.identityDocumentExpiryDate) : null;\n        });\n    return crewMember;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/crew-list/crew-member-modal/crew-member-modal.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/crew-list/save-crew-list/save-crew-list.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/crew-list/save-crew-list/save-crew-list.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Save Crew List\\\" icon=\\\"save.png\\\">\\n    <div class=\\\"text-center\\\" *ngIf=\\\"!listIsPristine\\\">\\n      <span>You have unsaved changes.</span>\\n      <br>\\n      <button class=\\\"btn btn-ssn\\\" (click)=\\\"saveCrewList()\\\">\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span>Save Crew List</span>\\n      </button>\\n    </div>\\n  \\n    <div class=\\\"text-center\\\" *ngIf=\\\"listIsPristine\\\">\\n      <span>There is nothing to save.</span>\\n      <br>\\n      <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span>Save Crew List</span>\\n      </button>\\n    </div>\\n  </app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/crew-list/save-crew-list/save-crew-list.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/crew-list/save-crew-list/save-crew-list.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PersonOnBoardModel } from 'app/shared/models/';\nimport { PortCallFalPersonOnBoardService, PortCallService } from 'app/shared/services/';\n\n@Component({\n  selector: 'app-save-crew-list',\n  templateUrl: './save-crew-list.component.html',\n  styleUrls: ['./save-crew-list.component.css']\n})\nexport class SaveCrewListComponent implements OnInit {\n\n  crewList: PersonOnBoardModel[] = [];\n\n  crewModel: PersonOnBoardModel = new PersonOnBoardModel();\n\n  portCallId: number;\n\n  @Input() listIsPristine: Boolean = true;\n\n  // @Input() passengerList: PersonOnBoardModel[];\n\n  @Output() save: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private personOnBoardService: PortCallFalPersonOnBoardService,\n    private portCallService: PortCallService\n  ) { }\n\n  ngOnInit() {\n    this.portCallService.portCallIdData$.subscribe(portCallIdData => {\n      if (portCallIdData) {\n        this.portCallId = portCallIdData;\n      }\n      this.personOnBoardService.crewList$.subscribe(list => {\n        if (list) {\n          this.crewList = list;\n        }\n      });\n/*       this.personOnBoardService.crewDataIsPristine$.subscribe(isPristine => {\n        this.listIsPristine = isPristine;\n      }); */\n\n    });\n  }\n\n  saveCrewList() {\n    this.save.emit();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/crew-list/save-crew-list/save-crew-list.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ td.ng2-smart-actions a {\\n    color:  #003EF9;\\n    text-decoration: underline;\\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/dpg/dpg.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/dpg/dpg.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\n  <strong *ngIf=\\\"r.textualReference\\\">Textual Reference: </strong> {{ r.textualReference }}\\n  <strong *ngIf=\\\"r.unNumber\\\"> UN Number: </strong> {{ r.unNumber }}\\n</ng-template>\\n\\n<app-ssn-card header=\\\"Dangerous Goods\\\" icon=\\\"hazard.png\\\">\\n\\n  <form id=\\\"formGroup\\\" name=\\\"formGroup\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"!isLoading\\\">\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\n\\n        <div class=\\\"col\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col my-auto\\\">\\n              <label for=\\\"classification\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Classification *</label>\\n              <div class=\\\"card pt-2\\\" id=\\\"dpg_classification\\\">\\n                <div class=\\\"checkbox row\\\">\\n                  <ng-container *ngFor=\\\"let dpgType of dpgTypes\\\" class=\\\"col-12\\\">\\n                    <label class=\\\"col-form-label-sm no-wrap mb-0 col-auto\\\">\\n                      <input type=\\\"radio\\\" value=\\\"true\\\" (change)=\\\"setDpgType(dpgType)\\\" [checked]=\\\"(hasSelectedType && (selectedDpgType.shortName === dpgType.shortName))\\\"\\n                        name=\\\"classification\\\" [disabled]=\\\"isViewing\\\">\\n                      {{dpgType.shortName}}\\n                    </label>\\n                  </ng-container>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\" *ngIf=\\\"!dpgSelected && !isViewing\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"search-dpg\\\">Un No/Name: *</label>\\n                  <input required id=\\\"search-dpg\\\" [(ngModel)]=\\\"selectedDpg\\\" name=\\\"selectedDpg\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\"\\n                    [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"setDpg($event)\\\"\\n                    placeholder=\\\"Enter search here...\\\" [disabled]=\\\"!hasSelectedType || isViewing\\\" />\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\" *ngIf=\\\"dpgSelected || isViewing\\\">\\n                <div class=\\\"col\\\">\\n\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"selected-dpg\\\">Un No/Name:</label>\\n                  <input required id=\\\"selected-dpg\\\" [(ngModel)]=\\\"dpgSelectedStr\\\" name=\\\"selectedDpg\\\" type=\\\"search\\\" class=\\\"form-control form-control-sm mx-auto\\\"\\n                    (onchange)=\\\"removeDpg()\\\" disabled />\\n                  <ng-container *ngIf=!isViewing>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" style=\\\"padding: 1px 5px; font-size: 12px; line-height: 1.5; border-radius: 3px\\\"\\n                      (click)=\\\"removeDpg()\\\">\\n                      Remove\\n                    </button>\\n                  </ng-container>\\n\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"loc_on_board\\\">Location Onboard: *</label>\\n                  <input name=\\\"locationOnBoard\\\" [(ngModel)]=\\\"dpgOnBoardModel.locationOnBoard\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"loc_on_board\\\" placeholder=\\\"Location on board\\\" required [disabled]=\\\"!hasSelectedType || isViewing\\\">\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"measurement_type\\\">Measurement Type: *</label>\\n                  <select id=\\\"measurement_type\\\" [(ngModel)]=\\\"selectedMeasurementType\\\" name=\\\"selectMeasurementType\\\"\\n                    (ngModelChange)=\\\"toggleNetGross()\\\" class=\\\"form-control form-control-sm\\\" [disabled]=\\\"!hasSelectedType || isViewing\\\">\\n                    <option name=\\\"measurementType\\\" *ngFor=\\\"let measurementType of measurementTypes\\\" [ngValue]=\\\"measurementType\\\">\\n                      {{measurementType.name}}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"net_weight\\\">Net {{measurementStr}}:</label>\\n                  <input #netWeight=\\\"ngModel\\\" [(ngModel)]=\\\"dpgOnBoardModel.netWeight\\\" name=\\\"netWeight\\\" type=\\\"number\\\"\\n                    class=\\\"form-control form-control-sm\\\" positiveNumberValidator id=\\\"net_weight\\\" placeholder=\\\"{{measurementStr}}\\\"\\n                    [disabled]=\\\"!hasSelectedType || isViewing\\\" />\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"gross_weight\\\">Gross {{measurementStr}}:</label>\\n                  <input #grossWeight=\\\"ngModel\\\" [(ngModel)]=\\\"dpgOnBoardModel.grossWeight\\\" name=\\\"grossWeight\\\" type=\\\"number\\\"\\n                    class=\\\"form-control form-control-sm\\\" positiveNumberValidator id=\\\"gross_weight\\\" placeholder=\\\"{{measurementStr}}\\\"\\n                    [disabled]=\\\"!hasSelectedType || isViewing\\\">\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">\\n                    <input [(ngModel)]=\\\"dpgOnBoardModel.placedInContainer\\\" (ngModelChange)=\\\"toggleTransUnitID(dpgOnBoardModel.placedInContainer)\\\"\\n                      name=\\\"placedInContainer\\\" type=\\\"checkbox\\\" id=\\\"placed_in_container\\\" [disabled]=\\\"!hasSelectedType || isViewing\\\">\\n                    Placed in Container\\n                  </label>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col\\\">\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"trans_unit_id\\\">Transportation Unit ID:</label>\\n                  <input [(ngModel)]=\\\"dpgOnBoardModel.transportUnitIdentification\\\" name=\\\"transUnit\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                    id=\\\"trans_unit_id\\\" placeholder=\\\"Transportation Unit ID\\\" [disabled]=\\\"!placedInContainer || isViewing\\\" />\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <ng-container *ngIf=\\\"hasSelectedType && !isViewing\\\">\\n          <ng-container *ngIf=\\\"!validDpgModel\\\">\\n            <ng-container *ngFor=\\\"let msg of validMsg\\\">\\n              <div class=\\\"alert alert-danger\\\">\\n                <li>\\n                  <small>{{msg}}</small>\\n                </li>\\n              </div>\\n            </ng-container>\\n          </ng-container>\\n          <div *ngIf=\\\"!netWeight.valid\\\" class=\\\"alert alert-danger\\\">\\n            <li *ngIf=\\\"netWeight.hasError('notPositiveNumberError')\\\">\\n              <small>The net mass/volume specified must be a positive number.</small>\\n            </li>\\n          </div>\\n          <div *ngIf=\\\"!grossWeight.valid\\\" class=\\\"alert alert-danger\\\">\\n            <li *ngIf=\\\"grossWeight.hasError('notPositiveNumberError')\\\">\\n              <small>The gross mass/volume specified must be a positive number.</small>\\n            </li>\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <button [disabled]=\\\"!(form.valid)\\\" type=\\\"submit\\\" class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"checkDpgModel()\\\">\\n          <span>Submit</span>\\n        </button>\\n\\n        <button *ngIf=\\\"isViewing || isEditing\\\" type=\\\"cancel\\\" class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"resetData()\\\">\\n          <span>Cancel</span>\\n        </button>\\n\\n\\n\\n        <button type=\\\"submit\\\" class=\\\"btn mt-2 btn-danger float-right\\\" [disabled]=\\\"!(dpgOnBoardList?.length > 0)\\\"\\n          (click)=\\\"deleteAllDpgs()\\\">\\n          <span>Delete all DPGs</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"mb-3\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <app-ssn-card header=\\\"Details\\\" icon=\\\"hazard.png\\\">\\n            <div class=\\\"table-responsive\\\">\\n              <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"dpgSource\\\"></ng2-smart-table>\\n            </div>\\n          </app-ssn-card>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\" *ngIf=\\\"!listIsPristine\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"save()\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"20px\\\">\\n          <span>Save all DPGs</span>\\n        </button>\\n        <span *ngIf=\\\"saving\\\">Saving...</span>\\n        <span class=\\\"badge badge-success\\\" *ngIf=\\\"saved\\\">Your changes have been saved.</span>\\n        <span class=\\\"badge badge-danger\\\" *ngIf=\\\"saveError\\\">An error occured when trying to save.</span>\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\" *ngIf=\\\"listIsPristine\\\">\\n          <span>There is nothing to save.</span>\\n          <br>\\n          <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n            <span>Save all DPGs</span>\\n          </button>\\n      </div>\\n\\n\\n    </div>\\n  </form>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/dpg/dpg.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/dpg/dpg.component.html\n// module chunks = main","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ActionButtonsComponent } from 'app/shared/components/action-buttons/action-buttons.component';\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\nimport {\n  DpgModel,\n  DpgOnBoardModel,\n  DpgTypeModel,\n  MeasurementTypeModel\n} from 'app/shared/models';\nimport { DpgService, FalShipStoresService } from 'app/shared/services';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport {\n  catchError,\n  debounceTime,\n  distinctUntilChanged,\n  merge,\n  switchMap,\n  tap\n} from 'rxjs/operators';\nimport { SEARCH_AMOUNTS } from '../../../../../../shared/constants/search-amounts';\n\n@Component({\n  selector: 'app-dpg',\n  templateUrl: './dpg.component.html',\n  styleUrls: ['./dpg.component.css'],\n})\nexport class DpgComponent implements OnInit {\n  @Input()\n  portCallId: number;\n  @Input()\n  dpgOnBoardList: DpgOnBoardModel[] = [];\n\n  @ViewChild(NgForm)\n  form: NgForm;\n\n  dpgModel: DpgModel = new DpgModel();\n  dpgTypes: DpgTypeModel[];\n  selectedDpgType: DpgTypeModel = new DpgTypeModel();\n  dpgOnBoardModel: DpgOnBoardModel = new DpgOnBoardModel();\n  dpgSource: LocalDataSource;\n  dpgSelectedStr: string;\n  selectedDpg: any;\n  searchResultDpg: any;\n  validDpgModel = true;\n  validMsg: string[] = [];\n  measurementTypes: MeasurementTypeModel[] = [];\n  selectedMeasurementType: any;\n  measurementStr = 'Weight (Kg)';\n  errorModalMsg = '';\n\n  // Bools for GUI\n  placedInContainer = false;\n  dpgSelected = false;\n  hasSelectedType = false;\n  listIsPristine = true;\n  isLoading: boolean;\n  isViewing: boolean;\n  isEditing: boolean;\n  saving = false;\n  saved = false;\n  saveError = false;\n\n  // Search\n  showDropdown = true;\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN;\n  searching = false;\n  searchFailed = false;\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\n    (this.searching = false)\n  );\n\n  constructor(\n    private dpgService: DpgService,\n    private shipStoresService: FalShipStoresService,\n    private modalService: NgbModal,\n  ) {\n    this.dpgSource = new LocalDataSource(this.dpgOnBoardList);\n  }\n\n  // Table settings\n  settings = {\n    actions: {\n      add: false,\n      edit: false,\n      delete: false,\n      position: 'right'\n    },\n    attr: {\n      class: 'table table-striped'\n    },\n    editor: {\n      config: {\n        completer: {\n          descriptionField: 'Search here'\n        }\n      }\n    },\n    noDataMessage: 'There are no DPGs in this list.',\n    columns: {\n      classification: {\n        title: 'Classification'\n      },\n      unNr: {\n        title: 'Un No/Name'\n      },\n      textualReference: {\n        title: 'Name'\n      },\n      grossWeight: {\n        title: 'Gross Weight/Volume'\n      },\n      netWeight: {\n        title: 'Net Weight/Volume'\n      },\n      locationOnBoard: {\n        title: 'Location on Board'\n      },\n      transportUnitIdentification: {\n        title: 'Trans Unit ID'\n      },\n      placedInContainer: {\n        title: 'Placed in Container',\n        filter: false\n      },\n      delete: {\n        title: 'Actions',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: ActionButtonsComponent,\n        onComponentInitFunction: instance => {\n          instance.view.subscribe(row => {\n            const sequenceNo = row.dpgOnBoardModel.sequenceNo;\n            if (\n              sequenceNo != null &&\n              sequenceNo !== undefined &&\n              sequenceNo >= 0\n            ) {\n              this.setEditOrViewDpg(sequenceNo, false);\n            }\n          });\n          instance.edit.subscribe(row => {\n            const sequenceNo = row.dpgOnBoardModel.sequenceNo;\n            if (\n              sequenceNo != null &&\n              sequenceNo !== undefined &&\n              sequenceNo >= 0\n            ) {\n              this.setEditOrViewDpg(sequenceNo, true);\n            }\n          });\n          instance.delete.subscribe(row => {\n            const sequenceNo = row.dpgOnBoardModel.sequenceNo;\n            if (\n              sequenceNo != null &&\n              sequenceNo !== undefined &&\n              sequenceNo >= 0\n            ) {\n              this.onDeleteConfirm(sequenceNo);\n            }\n          });\n        }\n      }\n    }\n  };\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.dpgService\n      .getDpgTypes()\n      .finally(() => {\n        this.shipStoresService\n          .getMeasurementTypeList()\n          .finally(() => {\n            this.filterMeasurementTypes();\n            this.isLoading = false;\n          })\n          .subscribe(measurementTypes => {\n            this.measurementTypes = measurementTypes;\n          });\n      })\n      .subscribe(res => {\n        this.dpgTypes = res;\n      });\n\n    // Making sure all submodels are defined\n    if (\n      this.dpgOnBoardModel.dpg == null ||\n      this.dpgOnBoardModel.dpg === undefined\n    ) {\n      this.dpgOnBoardModel.dpg = new DpgModel();\n    }\n\n    if (\n      this.dpgOnBoardModel.dpg.dpgType == null ||\n      this.dpgOnBoardModel.dpg.dpgType === undefined\n    ) {\n      this.dpgOnBoardModel.dpg.dpgType = new DpgTypeModel();\n    }\n    // Check service once more if list is empty in case of poorly synched earlier.\n    if (!this.dpgOnBoardList) {\n      this.loadDataFromService();\n    } else {\n      this.setSequenceNo();\n      this.reloadTable();\n    }\n  }\n\n  // Only kilograms and liters are defined in the FAL form as measurement types\n  filterMeasurementTypes() {\n    const filteredArray = [];\n\n    this.measurementTypes.forEach(mt => {\n      if (mt.name.toLowerCase().indexOf('(l)') >= 0) {\n        filteredArray.push(mt);\n      }\n\n      if (mt.name.toLowerCase().indexOf('(kg)') >= 0) {\n        this.selectedMeasurementType = mt;\n        filteredArray.push(mt);\n      }\n    });\n\n    this.measurementTypes = filteredArray;\n  }\n\n  setEditOrViewDpg(sequenceNo: number, isEditing: boolean) {\n    const indexToView = this.dpgOnBoardList.findIndex(\n      dpg => dpg.sequenceNo === sequenceNo\n    );\n    if (indexToView > -1) {\n      this.isViewing = !isEditing;\n      this.isEditing = isEditing;\n      const dpgToEdit = this.dpgOnBoardList[indexToView];\n      this.dpgOnBoardModel = dpgToEdit;\n      this.selectedDpgType = this.dpgOnBoardModel.dpg.dpgType;\n      this.selectedMeasurementType = this.dpgOnBoardModel.measurementType;\n      this.selectDpg(false);\n      this.setDpgType(this.dpgOnBoardModel.dpg.dpgType, false);\n      this.dpgSelected = isEditing;\n      const enableTransUnitId =\n        isEditing && this.dpgOnBoardModel.placedInContainer;\n      this.toggleTransUnitID(enableTransUnitId);\n    }\n  }\n\n  onDeleteConfirm(sequenceNo: number) {\n    if (window.confirm('Are you sure you want to delete?')) {\n      const indexToDelete = this.dpgOnBoardList.findIndex(\n        dpg => dpg.sequenceNo === sequenceNo\n      );\n      if (indexToDelete > -1) {\n        this.dpgOnBoardList.splice(indexToDelete, 1);\n        this.persistData();\n      }\n    }\n  }\n\n  deleteAllDpgs() {\n    if (window.confirm('Are you sure you want to delete all DPG\\'s?')) {\n      this.dpgOnBoardList = [];\n      this.listIsPristine = false;\n      this.persistData();\n    }\n  }\n\n  loadDataFromService() {\n    this.dpgService\n      .getDpgOnBoardListByPortCallId(this.portCallId)\n      .finally(() => {\n        this.setSequenceNo();\n        this.reloadTable();\n      })\n      .subscribe(res => {\n        this.dpgOnBoardList = res;\n      });\n  }\n\n  toggleNetGross() {\n    if (\n      this.selectedMeasurementType != null &&\n      this.selectedMeasurementType !== undefined\n    ) {\n      if (\n        this.selectedMeasurementType.name != null &&\n        this.selectedMeasurementType.name !== undefined\n      ) {\n        if (\n          this.selectedMeasurementType.name.toLowerCase().indexOf('(kg)') >= 0\n        ) {\n          this.measurementStr = 'Weight (Kg)';\n        }\n\n        if (\n          this.selectedMeasurementType.name.toLowerCase().indexOf('(l)') >= 0\n        ) {\n          this.measurementStr = 'Volume (L)';\n        }\n      }\n    }\n  }\n\n  // Search-Function for DPG after selecting DPG-Type\n  search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(150),\n      distinctUntilChanged(),\n      tap(term => {\n        this.searchFailed = false;\n        this.searching = term.length >= 2;\n      }),\n      switchMap(\n        term =>\n          this.showDropdown\n            ? this.dpgService\n              .search(\n                this.selectedDpgType.dpgTypeId,\n                term,\n                this.resultsDropdown\n              )\n              .pipe(\n                tap(() => {\n                  this.searchFailed = false;\n                }),\n                catchError(() => {\n                  this.searchFailed = true;\n                  return of([]);\n                })\n              )\n            : of([])\n      ),\n      tap(res => {\n        if (this.showDropdown) {\n          this.searching = false;\n          this.searchFailed = this.selectedDpg.length >= 2 && res.length === 0;\n        } else {\n          this.dpgService\n            .search(\n              this.selectedDpgType.dpgTypeId,\n              this.selectedDpg,\n              this.resultsWithoutDropdown\n            )\n            .subscribe(data => {\n              this.searchFailed =\n                this.selectedDpg.length >= 2 && data.length === 0;\n              this.searchResultDpg = data;\n              this.searching = false;\n            });\n        }\n      }),\n      merge(this.hideSearchingWhenUnsubscribed)\n    )\n\n  reloadTable() {\n    let rows = [];\n    rows = this.generateRows();\n    this.dpgSource.load(rows);\n  }\n\n  toggleTransUnitID(toggleValue: boolean) {\n    this.placedInContainer = toggleValue;\n  }\n\n  // Generate list that will be sent to dpgSource that is connected to the smart table\n  generateRows(): any[] {\n    let rowData = [];\n    if (this.dpgOnBoardList) {\n      rowData = this.dpgOnBoardList.map(dpgOnBoard => {\n        const row = {\n          classification: dpgOnBoard.dpg.dpgType.shortName,\n          dpgOnBoardModel: dpgOnBoard,\n          grossWeight: dpgOnBoard.grossWeight ? dpgOnBoard.grossWeight + ' ' + dpgOnBoard.measurementType.name : ' ',\n          netWeight: dpgOnBoard.netWeight ? dpgOnBoard.netWeight + ' ' + dpgOnBoard.measurementType.name : ' ',\n          locationOnBoard: dpgOnBoard.locationOnBoard,\n          placedInContainer: dpgOnBoard.placedInContainer ? 'Yes' : 'No',\n          transportUnitIdentification: dpgOnBoard.transportUnitIdentification,\n          textualReference: dpgOnBoard.dpg\n            ? dpgOnBoard.dpg.textualReference\n            : '',\n          unNr: dpgOnBoard.dpg ? dpgOnBoard.dpg.unNumber : ''\n        };\n        return row;\n      });\n    }\n    return rowData;\n  }\n\n  save() {\n    this.saving = true;\n    this.saved = false;\n    this.saveError = false;\n\n    const formattedDpgList = this.dpgService.formatDpgOnBoard(\n      this.dpgOnBoardList,\n      this.portCallId\n    );\n\n    this.dpgService\n      .saveDpgOnBoard(formattedDpgList, this.portCallId)\n      .finally(() => {\n        this.saving = false;\n        this.reloadData();\n      })\n      .subscribe(\n        res => {\n          this.saved = true;\n          this.listIsPristine = true;\n          this.dpgService.setDataIsPristineTrue();\n        }, err => {\n          this.saveError = true;\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, 'An error occured while saving. Please try again later.');\n        }\n      );\n  }\n\n  reloadData() {\n    this.dpgService\n      .getDpgOnBoardListByPortCallId(this.portCallId)\n      .subscribe(dpgOnBoardList => {\n        this.dpgOnBoardList = dpgOnBoardList;\n        this.dpgService.setDpgOnBoardList(dpgOnBoardList);\n      });\n  }\n\n  saveDpgOnBoard(isUpdate: boolean = false) {\n    this.listIsPristine = false;\n    if (isUpdate) {\n      const indexToUpdate = this.dpgOnBoardList.findIndex(\n        dpg => dpg.sequenceNo === this.dpgOnBoardModel.sequenceNo\n      );\n      if (indexToUpdate > -1) {\n        this.dpgOnBoardModel.measurementStr = this.selectedMeasurementType.name;\n        this.dpgOnBoardModel.measurementType = this.selectedMeasurementType;\n        this.dpgOnBoardModel.measurementTypeId = this.selectedMeasurementType.measurementTypeId;\n        this.dpgOnBoardList[indexToUpdate] = this.dpgOnBoardModel;\n      }\n    } else {\n      this.dpgOnBoardModel.dpg = this.selectedDpg;\n      this.dpgOnBoardModel.dpgId = this.dpgOnBoardModel.dpg.dpgId;\n      this.dpgOnBoardModel.measurementStr = this.selectedMeasurementType.name;\n      this.dpgOnBoardModel.measurementType = this.selectedMeasurementType;\n      this.dpgOnBoardModel.measurementTypeId = this.selectedMeasurementType.measurementTypeId;\n      this.dpgOnBoardList.push(this.dpgOnBoardModel);\n    }\n    this.persistData();\n    this.form.reset();\n  }\n\n  checkDpgModel() {\n    const isUpdate = this.dpgOnBoardModel.sequenceNo !== undefined;\n\n    this.validMsg = [];\n    const model = this.dpgOnBoardModel;\n\n    if (model.placedInContainer && !model.transportUnitIdentification) {\n      this.validMsg.push(\n        'Transportation Unit ID is required when DPG is placed in container'\n      );\n    }\n\n    const netGrossDefined = (model.netWeight == null && model.grossWeight == null)\n      || (model.netWeight === undefined && model.grossWeight === undefined);\n\n    if ((model.netWeight <= 0 && model.grossWeight <= 0) || netGrossDefined) {\n      this.validMsg.push('Either Gross ' + this.measurementStr + ' or Net ' + this.measurementStr + ' is required');\n    }\n\n    if (!netGrossDefined && (model.grossWeight < model.netWeight)) {\n      this.validMsg.push(\n        'Gross ' + this.measurementStr + ' must be greater than or equal to Net ' + this.measurementStr\n      );\n    }\n\n    if (this.validMsg.length === 0) {\n      this.validDpgModel = true;\n      this.saveDpgOnBoard(isUpdate);\n    } else {\n      this.validDpgModel = false;\n    }\n  }\n\n  resetData() {\n    this.dpgOnBoardModel = new DpgOnBoardModel();\n    this.dpgSelected = false;\n    this.selectedDpg = new DpgModel();\n    this.isViewing = false;\n    this.isEditing = false;\n    const measurementType = this.measurementTypes.findIndex(\n      mt => mt.name.toLowerCase().indexOf('(kg)') >= 0\n    );\n    if (measurementType >= 0) {\n      this.selectedMeasurementType = this.measurementTypes[measurementType];\n    } else {\n      this.selectedMeasurementType = this.measurementTypes[0];\n    }\n  }\n\n  setDpgType(dpgType: any, newDpg: boolean = true) {\n    this.selectedDpgType = dpgType;\n    this.hasSelectedType = true;\n    if (newDpg) {\n      this.removeDpg();\n    }\n  }\n\n  setDpg($event = null) {\n    this.selectedDpg = $event.item;\n    this.selectDpg();\n  }\n\n  selectDpg(setDpg: boolean = true) {\n    this.dpgSelectedStr = '';\n    this.dpgSelected = true;\n\n    if (setDpg) {\n      this.dpgOnBoardModel.dpg = this.selectedDpg;\n    } else {\n      this.selectedDpg = this.dpgOnBoardModel.dpg;\n    }\n\n    this.dpgOnBoardModel.dpg.dpgType = this.selectedDpgType;\n\n    if (\n      this.selectedDpg.textualReference != null &&\n      this.selectedDpg.textualReference !== undefined\n    ) {\n      this.dpgSelectedStr += this.selectedDpg.textualReference;\n    }\n    if (\n      this.selectedDpg.unNumber != null &&\n      this.selectedDpg.unNumber !== undefined\n    ) {\n      this.dpgSelectedStr += ' Un Nr: ' + this.selectedDpg.unNumber;\n    }\n  }\n\n  persistData() {\n    this.dpgService.setDpgOnBoardList(this.dpgOnBoardList);\n    this.touchData();\n    this.setSequenceNo();\n    this.reloadTable();\n    this.resetData();\n  }\n\n  touchData() {\n    this.listIsPristine = false;\n    this.dpgService.setDataIsPristineFalse();\n  }\n\n  setSequenceNo() {\n    let sequenceNo = 0;\n    this.dpgOnBoardList.forEach(dpgOnBoard => {\n      dpgOnBoard.sequenceNo = sequenceNo;\n      sequenceNo++;\n    });\n  }\n\n  removeDpg() {\n    this.dpgSelected = false;\n    this.selectedDpg = new DpgModel();\n    this.dpgSelectedStr = '';\n  }\n\n  formatter = (x: { DpgId: string }) => '';\n\n  private openConfirmationModal(modalType: string, bodyText: string) {\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\n    modalRef.componentInstance.modalType = modalType;\n    modalRef.componentInstance.bodyText = bodyText;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/dpg/dpg.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/forms.component.css\n// module chunks = main","module.exports = \"<app-progress-bar *ngIf=\\\"portCallId != null\\\"></app-progress-bar>\\n\\n<div *ngIf=\\\"selectedComponent !== formNames.VOYAGES\\\">\\n    <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col\\\">\\n            <app-ship-info-table></app-ship-info-table>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col\\\">\\n            <app-location-time-info-table></app-location-time-info-table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div [ngSwitch]=\\\"selectedComponent\\\">\\n    <app-voyages *ngSwitchCase=\\\"formNames.VOYAGES\\\" [portCallId]=\\\"portCallId\\\" [shipModel]=\\\"shipModel\\\" [locationModel]=\\\"locationModel\\\"\\n        [etaModel]=\\\"etaModel\\\" [etdModel]=\\\"etdModel\\\" [prevLocationModel]=\\\"prevLocationModel\\\" [prevEtdModel]=\\\"prevEtdModel\\\" [nextLocationModel]=\\\"nextLocationModel\\\"\\n        [nextEtaModel]=\\\"nextEtaModel\\\"></app-voyages>\\n    <app-port-call-details *ngSwitchCase=\\\"formNames.PORT_CALL_DETAILS\\\" [portCallId]=\\\"portCallId\\\"></app-port-call-details>\\n    <app-ship-stores *ngSwitchCase=\\\"formNames.SHIP_STORES\\\" [portCallId]=\\\"portCallId\\\" [shipStoresList]=\\\"shipStoresData\\\"></app-ship-stores>\\n    <app-cargo *ngSwitchCase=\\\"formNames.CARGO\\\" [portCallId]=\\\"portCallId\\\" [cargoData]=\\\"cargoData\\\"></app-cargo>\\n    <app-security *ngSwitchCase=\\\"formNames.SECURITY\\\" [portCallId]=\\\"portCallId\\\" [shipModel]=\\\"securityShipModel\\\" [securityModel]=\\\"securityData\\\"></app-security>\\n    <app-passenger-list *ngSwitchCase=\\\"formNames.PAX\\\" [portCallId]=\\\"portCallId\\\" [passengerList]=\\\"passengerData\\\"></app-passenger-list>\\n    <app-crew-list *ngSwitchCase=\\\"formNames.CREW\\\" [portCallId]=\\\"portCallId\\\" [crewList]=\\\"crewData\\\"></app-crew-list>\\n    <app-dpg *ngSwitchCase=\\\"formNames.DPG\\\" [portCallId]=\\\"portCallId\\\" [dpgOnBoardList]=\\\"dpgData\\\"></app-dpg>\\n    <app-confirmation *ngSwitchCase=\\\"'Confirm and Activate'\\\"></app-confirmation>\\n    <div *ngSwitchDefault class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n        This page is not implemented yet.\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/forms.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FORM_NAMES } from 'app/shared/constants/form-names';\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\nimport { CompanySecurityOfficerModel, ConsignmentModel, DpgOnBoardModel, FalSecurityModel, LocationModel,\n  PersonOnBoardModel, PortCallModel, ShipModel, ShipStoresModel } from 'app/shared/models/';\nimport { ContentService, DpgService, FalCargoService, FalSecurityService,\n  FalShipStoresService, PortCallFalPersonOnBoardService, PortCallService, ShipService,  } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.css']\n})\nexport class FormsComponent implements OnInit, OnDestroy {\n\n  selectedComponent: string;\n  portCallId: number;\n\n  // Voyages\n  shipModel: ShipModel;\n  locationModel: LocationModel;\n  etaModel: DateTime;\n  etdModel: DateTime;\n  prevLocationModel: LocationModel;\n  prevEtdModel: DateTime;\n  nextLocationModel: LocationModel;\n  nextEtaModel: DateTime;\n\n  cargoData: ConsignmentModel[];\n  shipStoresData: ShipStoresModel[];\n  passengerData: PersonOnBoardModel[];\n  crewData: PersonOnBoardModel[];\n  dpgData: DpgOnBoardModel[];\n\n  formNames: any;\n\n  portCallIdSubscription: Subscription;\n  cargoSubscription: Subscription;\n  securitySubscription: Subscription;\n  // 2018.08.17 Trying new pattern for security-component\n  portCallSubscription: Subscription;\n  portCallModel: PortCallModel;\n  securityData: FalSecurityModel;\n  securityShipModel: ShipModel;\n\n  // Voyages\n  shipSubscription: Subscription;\n  locationSubscription: Subscription;\n  etaSubscription: Subscription;\n  etdSubscription: Subscription;\n  prevLocationSubscription: Subscription;\n  prevEtdSubscription: Subscription;\n  nextLocationSubscription: Subscription;\n  nextEtaSubscription: Subscription;\n\n  constructor(\n    private contentService: ContentService,\n    private portCallService: PortCallService,\n    private shipService: ShipService,\n    private cargoService: FalCargoService,\n    private shipStoresService: FalShipStoresService,\n    private securityService: FalSecurityService,\n    private personOnBoardService: PortCallFalPersonOnBoardService,\n    private dpgService: DpgService,\n  ) { }\n\n  ngOnInit() {\n    this.securityService.resetServiceData();\n    this.portCallSubscription = this.portCallService.portCallData$.subscribe(\n      portCallData => {\n        if (portCallData) {\n          this.portCallModel = portCallData;\n          this.setCargoForPortCall(this.portCallModel.portCallId);\n          this.setSecurityForPortCall(this.portCallModel.portCallId);\n          this.shipService.getShip(this.portCallModel.shipId).subscribe(\n            data => {\n              if (data) {\n                this.securityShipModel = data;\n              }\n            }\n          );\n        }\n      }\n    );\n\n    this.securitySubscription = this.securityService.securityData$.subscribe(\n      data => {\n        if (data) {\n          this.securityData = data;\n        } else {\n          this.securityData = new FalSecurityModel();\n          this.securityData.companySecurityOfficer = new CompanySecurityOfficerModel();\n        }\n      }\n    );\n\n    this.portCallIdSubscription = this.portCallService.portCallIdData$.subscribe(\n      portCallIdData => {\n        if (portCallIdData) {\n          this.portCallId = portCallIdData;\n        }\n      }\n    );\n\n    // Voyages\n    this.shipSubscription = this.portCallService.shipData$.subscribe(\n      data => {\n        this.shipModel = data;\n      }\n    );\n    this.locationSubscription = this.portCallService.locationData$.subscribe(\n      data => {\n        this.locationModel = data;\n      }\n    );\n    this.etaSubscription = this.portCallService.etaData$.subscribe(\n      data => {\n        this.etaModel = data;\n      }\n    );\n    this.etdSubscription = this.portCallService.etdData$.subscribe(\n      data => {\n        this.etdModel = data;\n      }\n    );\n    this.locationSubscription = this.portCallService.locationData$.subscribe(\n      data => {\n        this.locationModel = data;\n      }\n    );\n    this.prevLocationSubscription = this.portCallService.prevLocationData$.subscribe(\n      data => {\n        this.prevLocationModel = data;\n      }\n    );\n    this.prevEtdSubscription = this.portCallService.prevEtdData$.subscribe(\n      data => {\n        this.prevEtdModel = data;\n      }\n    );\n    this.nextLocationSubscription = this.portCallService.nextLocationData$.subscribe(\n      data => {\n        this.nextLocationModel = data;\n      }\n    );\n    this.nextEtaSubscription = this.portCallService.nextEtaData$.subscribe(\n      data => {\n        this.nextEtaModel = data;\n      }\n    );\n\n    this.cargoSubscription = this.cargoService.consignmentListData$.subscribe(\n      data => {\n        this.cargoData = data;\n      }\n    );\n    this.portCallIdSubscription = this.portCallService.portCallIdData$.subscribe(\n      idResult => {\n        if (idResult) {\n          this.portCallId = idResult;\n\n          this.personOnBoardService.getPassengerListByPortCallId(this.portCallId).subscribe(\n            passengerList => {\n              if (passengerList) {\n                this.passengerData = passengerList;\n                this.personOnBoardService.setPassengersList(passengerList);\n                this.personOnBoardService.setPassengerDataIsPristine(true);\n              }\n            }\n          );\n\n          this.personOnBoardService.getCrewListByPortCallId(this.portCallId).subscribe(\n            crewList => {\n              if (crewList) {\n                this.crewData = crewList;\n                this.personOnBoardService.setCrewList(crewList);\n                this.personOnBoardService.setCrewDataIsPristine(true);\n              }\n            }\n          );\n\n          this.dpgService.getDpgOnBoardListByPortCallId(this.portCallId).subscribe(\n            dpgOnBoardList => {\n              this.dpgData = dpgOnBoardList;\n              this.dpgService.setDpgOnBoardList(dpgOnBoardList);\n              this.dpgService.setDataIsPristineTrue();\n            }\n          );\n        }\n        this.shipStoresService.shipStoresList$.subscribe(\n          data => {\n            this.shipStoresData = data;\n          }\n        );\n        this.portCallService.shipData$.subscribe(\n          shipResult => {\n            this.shipService.setShipData(shipResult);\n          }\n        );\n        this.contentService.portCallFormName$.subscribe(\n          content => {\n            this.selectedComponent = content;\n          }\n        );\n        this.formNames = FORM_NAMES;\n      }\n    );\n  }\n\n  setSecurityForPortCall(portCallId) {\n    this.securityService.getFalSecurityByPortCallId(portCallId).subscribe(\n      data => {\n        if (data) {\n          this.securityService.setSecurityData(data);\n        }\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  setCargoForPortCall(portCallId) {\n    this.cargoService.getConsignmentListForPortCall(portCallId).subscribe(\n      data => {\n        if (data) {\n          this.cargoService.setConsignmentListData(data);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.shipSubscription.unsubscribe();\n    this.locationSubscription.unsubscribe();\n    this.etaSubscription.unsubscribe();\n    this.etdSubscription.unsubscribe();\n    this.prevLocationSubscription.unsubscribe();\n    this.prevEtdSubscription.unsubscribe();\n    this.nextLocationSubscription.unsubscribe();\n    this.nextEtaSubscription.unsubscribe();\n    this.portCallIdSubscription.unsubscribe();\n    this.cargoSubscription.unsubscribe();\n    this.securitySubscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n  }\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n  }\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n  }\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: \\\"\\\";\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n  }\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n  }\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n  }\\n:host /deep/ ng2-smart-table a {\\n    color: var(--color-primary-text);\\n  }\\n:host /deep/ a.ng2-smart-page-link.page-link {\\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n  }\\n:host /deep/ span.ng2-smart-page-link.page-link {\\n    color: var(--color-primary-dark);\\n    background-color: #dee2e6;\\n    border-color: #dee2e6;\\n  }\\n:host /deep/ tbody > tr > td.ng2-smart-actions > a {\\n    color: var(--color-primary-dark);\\n  }\\n:host /deep/ ng2-st-tbody-edit-delete > a,\\n  :host /deep/ ng2-st-tbody-create-cancel > a {\\n    color: var(--color-primary);\\n  }\\n.ng-select-placeholder-sm, ::-webkit-input-placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n.ng-select-placeholder-sm, :-ms-input-placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n.ng-select-placeholder-sm, ::-ms-input-placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n.ng-select-placeholder-sm, ::placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n:host /deep/ .ng-placeholder, ::-webkit-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n:host /deep/ .ng-placeholder, :-ms-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n:host /deep/ .ng-placeholder, ::-ms-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n:host /deep/ .ng-placeholder, ::placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n:host /deep/ .ng-input {\\n    height: 21px;\\n  }\\n:host /deep/ .ng-select .ng-select-container{\\n    min-height: 31px;\\n    height: 31px;\\n    border-radius: .2rem;\\n    border-color: #ced4da;\\n  } \\n  \\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Add New Passenger\\\" icon=\\\"pax.png\\\">\\n\\n  <form name=\\\"mainForm\\\" #form=\\\"ngForm\\\">\\n\\n    <div class=\\\"col-lg-12\\\">\\n      <app-ssn-card header=\\\"Personalia\\\" icon=\\\"user.png\\\" [collapsible]=\\\"true\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"givenName\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Given Name *</label>\\n                <input #givenName=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"portCallPassengerModel.givenName\\\" placeholder=\\\"Given Name\\\" class=\\\"form-control form-control-sm\\\"\\n                  name=\\\"givenName\\\" required>\\n              </div>\\n            </div>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"givenName.hasError('required') && givenName.touched\\\">\\n              <li>\\n                <small>This field is required.</small>\\n              </li>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"familyName\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Family Name *</label>\\n                <input #familyName=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"portCallPassengerModel.familyName\\\" placeholder=\\\"Family Name\\\" class=\\\"form-control form-control-sm\\\"\\n                  required name=\\\"familyName\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"familyName.hasError('required') && familyName.touched\\\">\\n              <li>\\n                <small>This field is required.</small>\\n              </li>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"app-date-of-birth\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Date of Birth</label>\\n                <app-date-picker (dateResult)=\\\"setDateOfBirth($event)\\\" [dateInput]=\\\"getNgbDateFormat(portCallPassengerModel.dateOfBirth)\\\"\\n                  #dateOfBirth></app-date-picker>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <!-- /.col-lg-6 -->\\n\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"app-search-country\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Country of Birth</label>\\n                <app-search-country *ngIf=\\\"!portCallPassengerModel.countryOfBirth\\\" (selectCountry)=\\\"setCountryOfBirth($event)\\\" (deselectCountry)=\\\"resetCountryOfBirth()\\\"></app-search-country>\\n                <div *ngIf=\\\"portCallPassengerModel.countryOfBirth\\\" class=\\\"input-group input-group-sm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <img src=\\\"assets/images/flags/128x128/{{ portCallPassengerModel.countryOfBirth.twoCharCode | lowercase}}.png\\\" height=\\\"20px\\\">\\n                    </span>\\n                  </div>\\n                  <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [ngModel]=\\\"portCallPassengerModel.countryOfBirth.name\\\"\\n                    name=\\\"countryOfBirth\\\" />\\n                  <div>\\n                    <div class=\\\"input-group-append\\\">\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove country of birth\\\" (click)=\\\"resetCountryOfBirth()\\\">\\n                        <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"app-search-country\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Nationality</label>\\n                <app-search-country *ngIf=\\\"!portCallPassengerModel.nationality\\\" (selectCountry)=\\\"setNationality($event)\\\" (deselectCountry)=\\\"resetNationality()\\\"></app-search-country>\\n\\n                <div *ngIf=\\\"portCallPassengerModel.nationality\\\" class=\\\"input-group input-group-sm\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <img src=\\\"assets/images/flags/128x128/{{ portCallPassengerModel.nationality.twoCharCode | lowercase}}.png\\\" height=\\\"20px\\\">\\n                    </span>\\n                  </div>\\n                  <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [ngModel]=\\\"portCallPassengerModel.nationality.name\\\"\\n                    name=\\\"nationality\\\" />\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove nationality\\\" (click)=\\\"resetNationality()\\\">\\n                      <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"placeOfBirth\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Place of Birth</label>\\n                <input #placeOfBirth=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"portCallPassengerModel.placeOfBirth\\\" placeholder=\\\"Place of Birth\\\"\\n                  class=\\\"form-control form-control-sm\\\" name=\\\"placeOfBirth\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group form-group-sm row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"gender\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Gender</label>\\n                <ng-select class=\\\"ng-select-placeholder-sm\\\" [items]=\\\"genderList\\\" [(ngModel)]=\\\"portCallPassengerModel.gender\\\" name=\\\"gender\\\"\\n                  [closeOnSelect]=\\\"true\\\" bindLabel=\\\"description\\\" placeholder=\\\"Gender\\\" (change)=\\\"setGender($event)\\\">\\n                </ng-select>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <!-- /.col-lg-6 -->\\n        </div>\\n      </app-ssn-card>\\n\\n      <app-identity-document (changeIdentityDocumentModel)=\\\"setIdentityDocumentModel($event)\\\"></app-identity-document>\\n\\n      <app-ssn-card header=\\\"Voyage\\\" icon=\\\"voyage.png\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"transit\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Transit</label>\\n                <ng-select class=\\\"ng-select-placeholder-sm\\\" [items]=\\\"booleanList\\\" [(ngModel)]=\\\"inTransit\\\" name=\\\"transit\\\" [closeOnSelect]=\\\"true\\\"\\n                  bindLabel=\\\"name\\\" placeholder=\\\"Transit\\\" (change)=\\\"setTransit($event)\\\">\\n                </ng-select>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6\\\">\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"search-port-of-embarkation\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Port of Embarkation</label>\\n                <app-search-location *ngIf=\\\"!portCallPassengerModel.portOfEmbarkation\\\" [restrictTypeHarbour]=true (locationResult)=\\\"setPortOfEmbarkation($event)\\\"\\n                  id=\\\"search-port-of-embarkation\\\"></app-search-location>\\n\\n                <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"portCallPassengerModel.portOfEmbarkation\\\">\\n                  <div class=\\\"input-group-prepend\\\" *ngIf=\\\"portCallPassengerModel.portOfEmbarkation.country\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <img src=\\\"assets/images/flags/128x128/{{ portCallPassengerModel.portOfEmbarkation.country.twoCharCode.toLowerCase() | lowercase}}.png\\\"\\n                        height=\\\"20px\\\">\\n                    </span>\\n                  </div>\\n                  <input readonly type=\\\"text\\\" name=\\\"port-of-embarkation\\\" id=\\\"app-find-port-of-embarkation\\\" class=\\\"form-control form-control-sm\\\"\\n                    [ngModel]=\\\"portCallPassengerModel.portOfEmbarkation.name\\\">\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove port of embarkation\\\" (click)=\\\"resetPortOfEmbarkation()\\\">\\n                      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\n                    </button>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col my-auto\\\">\\n                <label for=\\\"app-find-port-of-disembarkation\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Port of Disembarkation</label>\\n                <app-search-location *ngIf=\\\"!portCallPassengerModel.portOfDisembarkation\\\" [restrictTypeHarbour]=true (locationResult)=\\\"setPortOfDisembarkation($event)\\\"\\n                  id=\\\"app-find-port-of-disembarkation\\\"></app-search-location>\\n                <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"portCallPassengerModel.portOfDisembarkation\\\">\\n                  <div class=\\\"input-group-prepend\\\" *ngIf=\\\"portCallPassengerModel.portOfDisembarkation.country\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <img src=\\\"assets/images/flags/128x128/{{ portCallPassengerModel.portOfDisembarkation.country.twoCharCode.toLowerCase() | lowercase}}.png\\\"\\n                        height=\\\"20px\\\">\\n                    </span>\\n                  </div>\\n                  <input readonly type=\\\"text\\\" name=\\\"port-of-disembarkation\\\" id=\\\"app-find-port-of-disembarkation\\\" class=\\\"form-control form-control-sm\\\"\\n                    [ngModel]=\\\"portCallPassengerModel.portOfDisembarkation.name\\\">\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove port of disembarkation\\\" (click)=\\\"resetPortOfDisembarkation()\\\">\\n                      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </app-ssn-card>\\n\\n    </div>\\n    <!-- /.col-lg-6 -->\\n  </form>\\n\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"form-group\\\">\\n      <button *ngIf=\\\"form.valid && validDocumentDates\\\" type=\\\"submit\\\" class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"addPassenger(); form.reset()\\\">\\n        <span>Submit</span>\\n      </button>\\n      <button *ngIf=\\\"!form.valid || !validDocumentDates\\\" type=\\\"submit\\\" disabled class=\\\"btn btn-ssn mt-2\\\">\\n        <span>Submit</span>\\n      </button>\\n      <button *ngIf=\\\"passengerList.length > 0\\\" type=\\\"submit\\\" class=\\\"btn mt-2 btn-danger float-right\\\" (click)=openWarningModal(warningModal)>\\n        <span>Delete all passengers</span>\\n      </button>\\n      <button *ngIf=\\\"passengerList.length === 0\\\" type=\\\"submit\\\" class=\\\"btn mt-2 btn-danger float-right\\\" disabled>\\n        <span>Delete all passengers</span>\\n      </button>\\n    </div>\\n\\n\\n    <div class=\\\"mb-3\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <div ng2-st-add-button=\\\"\\\" ng-reflect-grid=\\\"[object Object]\\\" class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n        </div>\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"passengerListDataSource\\\">\\n        </ng2-smart-table>\\n      </div>\\n    </div>\\n  </div>\\n</app-ssn-card>\\n\\n<app-save-passenger-list (save)=\\\"savePassengers()\\\" [listIsPristine]=\\\"listIsPristine\\\"></app-save-passenger-list>\\n\\n<app-passenger-modal (outputPassengerModel)=\\\"editPassenger($event)\\\"></app-passenger-modal>\\n\\n<ng-template #warningModal let-close=\\\"close()\\\" class=\\\"modal fade\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Warning</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    Do you want to delete all passengers in the list?\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn mt-2 btn-danger float-right\\\" (click)=\\\"deleteAllPassengers(); close\\\">\\n      <span>Delete all passengers</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn mt-2 btn-ssn\\\" (click)=\\\"close\\\">\\n      <span>Cancel</span>\\n    </button>\\n  </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ActionButtonsComponent } from 'app/shared/components/action-buttons/action-buttons.component';\nimport { IdentityDocumentComponent } from 'app/shared/components/identity-document/identity-document.component';\nimport { PERSON_ON_BOARD_TYPES } from 'app/shared/constants/enumValues';\nimport { GenderModel, IdentityDocumentModel, LocationModel, PersonOnBoardModel, PersonOnBoardTypeModel } from 'app/shared/models/';\nimport { IdentityDocumentService, PortCallFalPersonOnBoardService } from 'app/shared/services/';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Subscription } from 'rxjs/Subscription';\nimport { PassengerModalComponent } from './passenger-modal/passenger-modal.component';\nimport { SmartTableModel } from './smartTableModel';\n\n@Component({\n  selector: 'app-passenger-list',\n  templateUrl: './passenger-list.component.html',\n  styleUrls: ['./passenger-list.component.css']\n})\nexport class PassengerListComponent implements OnInit, OnDestroy {\n  @Input() portCallId: number;\n  @Input() passengerList: any[] = [];\n\n  identityDocumentList: IdentityDocumentModel[] = [];\n\n  portCallPassengerModel: PersonOnBoardModel = new PersonOnBoardModel();\n\n  genderList: GenderModel[];\n  selectedGender: GenderModel;\n  identityDocTypeList: IdentityDocumentModel[];\n  identityDocumentModel: IdentityDocumentModel = new IdentityDocumentModel();\n  personOnBoardType: PersonOnBoardTypeModel;\n\n  modalModel: PersonOnBoardModel = new PersonOnBoardModel();\n  listIsPristine = true;\n\n  @ViewChild(PassengerModalComponent) passengerModalComponent;\n  @ViewChild(IdentityDocumentComponent) identityDocumentComponent;\n  @ViewChild('dateOfBirth') dateOfBirthComponent;\n\n  @ViewChild(NgForm) form: NgForm;\n\n  booleanList: string[] = ['Yes', 'No'];\n  booleanModel = {\n    'Yes': true,\n    'No': false\n  };\n  inTransit: boolean = null;\n\n  formValid = true;\n  validDocumentDates = true;\n  issueDateRequiredError = false;\n  expiryDateRequiredError = false;\n\n  passengerListDataSource: LocalDataSource = new LocalDataSource();\n  smartTableList = [];\n\n  tableSettings = {\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    editor: {\n      config: {\n        completer: {\n          descriptionField: 'Search here'\n        }\n      }\n    },\n    noDataMessage: 'There are no passengers in this list.',\n    columns: {\n      sequenceNumber: {\n        title: 'ID'\n      },\n      familyName: {\n        title: 'Family Name',\n      },\n      givenName: {\n        title: 'Given Name'\n      },\n      nationality: {\n        title: 'Nationality'\n      },\n      gender: {\n        title: 'Gender'\n      },\n      dateOfBirth: {\n        title: 'Date of Birth'\n      },\n      portOfEmbarkation: {\n        title: 'Port of Embarkation'\n      },\n      portOfDisembarkation: {\n        title: 'Port of Disembarkation'\n      },\n      delete: {\n        title: 'Actions',\n        // deleteButtonContent: 'Delete',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: ActionButtonsComponent,\n        onComponentInitFunction: (instance) => {\n          instance.view.subscribe(row => {\n            this.openViewPassengerModal(row);\n          });\n          instance.edit.subscribe(row => {\n            this.openEditPassengerModal(row);\n          });\n          instance.delete.subscribe(row => {\n            this.deletePassenger(row);\n          });\n        }\n      },\n    }\n  };\n\n  genderListSubscription: Subscription;\n  personOnBoardTypeSubscription: Subscription;\n  pristineSubscription: Subscription;\n\n  constructor(\n    private modalService: NgbModal,\n    private personOnBoardService: PortCallFalPersonOnBoardService\n  ) {}\n\n\n  ngOnInit() {\n\n    if (this.passengerList) {\n      this.passengerList.forEach(passenger => {\n        passenger = this.makeDates(passenger);\n      });\n    }\n    // Load in passenger list in smart table\n    this.passengerListDataSource.load(this.generateSmartTable());\n\n    // Initiate models\n    this.portCallPassengerModel = new PersonOnBoardModel();\n    this.identityDocumentModel = new IdentityDocumentModel();\n\n    // Get gender list\n    if (!this.genderList) {\n      this.genderListSubscription = this.personOnBoardService.getGenderList().subscribe(\n        results => {\n          this.genderList = results;\n      });\n    }\n\n    // Get passenger person on board type (id 2)\n    this.personOnBoardTypeSubscription = this.personOnBoardService.getPersonOnBoardTypeByEnum(PERSON_ON_BOARD_TYPES.PAX).subscribe(\n      personOnBoardType => {\n        this.personOnBoardType = personOnBoardType;\n    });\n\n    this.personOnBoardService.setPassengersList(this.passengerList);\n\n    this.pristineSubscription = this.personOnBoardService.passengerDataIsPristine$.subscribe(\n      isPristine => {\n        this.listIsPristine = isPristine;\n    });\n  }\n\n  ngOnDestroy()  {\n    this.genderListSubscription.unsubscribe();\n    this.personOnBoardTypeSubscription.unsubscribe();\n    this.pristineSubscription.unsubscribe();\n  }\n\n  addPassenger() {\n    // Modify\n    this.portCallPassengerModel.portCallId = this.portCallId;\n    this.portCallPassengerModel.personOnBoardType = this.personOnBoardType;\n    this.portCallPassengerModel.personOnBoardTypeId = this.personOnBoardType.personOnBoardTypeId;\n\n    // Add the identityDocumentModel to passengerModel\n    this.portCallPassengerModel.identityDocument.push(this.identityDocumentModel);\n    // Add\n    this.passengerList.push(this.portCallPassengerModel);\n    this.persistData();\n\n    // Reset\n    this.clearForm();\n  }\n\n  generateSmartTable(): any[] {\n    const newList = [];\n    if (this.passengerList) {\n      this.passengerList.forEach(passenger => {\n        const modifiedPassenger = new SmartTableModel();\n        if (passenger.personOnBoardId) {\n          modifiedPassenger.personOnBoardId = passenger.personOnBoardId;\n        }\n        modifiedPassenger.sequenceNumber = passenger.sequenceNumber;\n        modifiedPassenger.givenName = passenger.givenName;\n        modifiedPassenger.familyName = passenger.familyName;\n        passenger.dateOfBirth ? modifiedPassenger.dateOfBirth = this.getDisplayDateFormat(passenger.dateOfBirth) : modifiedPassenger.dateOfBirth = null;\n        passenger.portOfEmbarkation ? modifiedPassenger.portOfEmbarkation = passenger.portOfEmbarkation : modifiedPassenger.portOfEmbarkation = null;\n        passenger.portOfDisembarkation ? modifiedPassenger.portOfDisembarkation = passenger.portOfDisembarkation : modifiedPassenger.portOfDisembarkation = null;\n        passenger.nationality ? modifiedPassenger.nationality = passenger.nationality : modifiedPassenger.nationality = null;\n        passenger.gender ? modifiedPassenger.gender = passenger.gender : modifiedPassenger.gender = null;\n        modifiedPassenger.countryOfBirthTwoCharCode = passenger.nationalityTwoCharCode;\n        modifiedPassenger.nationalityTwoCharCode = passenger.nationalityTwoCharCode;\n\n        newList.push(modifiedPassenger);\n      });\n    }\n    return newList;\n  }\n\n  persistData() {\n    this.updateSequenceNumbers();\n    this.personOnBoardService.setPassengersList(this.passengerList);\n    this.touchData();\n    this.reloadTable();\n  }\n\n  touchData() {\n    this.listIsPristine = false;\n    this.personOnBoardService.setPassengerDataIsPristine(false);\n  }\n\n  clearForm() {\n    this.portCallPassengerModel = new PersonOnBoardModel();\n    this.identityDocumentModel = new IdentityDocumentModel();\n    this.resetDateOfBirth();\n    this.identityDocumentComponent.resetForm();\n  }\n\n  reloadTable() {\n    const rows = this.generateSmartTable();\n    this.passengerListDataSource.load(rows);\n  }\n\n  makeLocationModel($event) {\n    const tempLocationModel = Object.assign(new LocationModel(), $event);\n    return tempLocationModel;\n  }\n\n  // Setters\n  setIdentityDocumentModel($event) {\n    this.identityDocumentModel = $event.identityDocumentModel;\n    this.validDocumentDates = $event.validDocumentDates.issueDateAfterExpiryDateError\n    || $event.validDocumentDates.expiryDateBeforeExpiryDateError ? false : true;\n\n    this.issueDateRequiredError = $event.validDocumentDates.issueDateRequiredError;\n    this.expiryDateRequiredError = $event.validDocumentDates.expiryDateRequiredError;\n\n    this.validDocumentDates = this.validDocumentDates && this.issueDateRequiredError && this.expiryDateRequiredError;\n  }\n\n  setPortOfEmbarkation($event) {\n    this.portCallPassengerModel.portOfEmbarkation = this.makeLocationModel($event);\n    this.portCallPassengerModel.portOfEmbarkationId = $event.locationId;\n  }\n\n  setPortOfDisembarkation($event) {\n    this.portCallPassengerModel.portOfDisembarkation = this.makeLocationModel($event);\n    this.portCallPassengerModel.portOfDisembarkationId = $event.locationId;\n  }\n\n  setDateOfBirth($event) {\n    if ($event) {\n      const date: Date = new Date($event.year, $event.month -  1, $event.day);\n      this.portCallPassengerModel.dateOfBirth = date;\n    } else {\n      this.portCallPassengerModel.dateOfBirth = null;\n    }\n  }\n\n  setGender($event) {\n    this.portCallPassengerModel.gender = $event;\n    this.portCallPassengerModel.genderId = $event.genderId;\n  }\n\n  setCountryOfBirth($event) {\n    this.portCallPassengerModel.countryOfBirth = $event.item;\n    this.portCallPassengerModel.countryOfBirthId = $event.item.countryId;\n  }\n\n  setNationality($event) {\n    this.portCallPassengerModel.nationality = $event.item;\n    this.portCallPassengerModel.nationalityId = $event.item.countryId;\n  }\n\n  setTransit($event) {\n    this.inTransit = $event;\n    Object.keys(this.booleanModel).forEach(key => {\n      if (key === $event) {\n        this.portCallPassengerModel.inTransit = this.booleanModel[key];\n        return;\n      }\n    });\n  }\n\n  // Resetters\n  resetPortOfDisembarkation() {\n    this.portCallPassengerModel.portOfDisembarkation = null;\n    this.portCallPassengerModel.portOfDisembarkationId = null;\n  }\n\n  resetPortOfEmbarkation() {\n    this.portCallPassengerModel.portOfEmbarkation = null;\n    this.portCallPassengerModel.portOfEmbarkationId = null;\n  }\n\n  resetNationality() {\n    this.portCallPassengerModel.nationality = null;\n    this.portCallPassengerModel.nationalityId = null;\n  }\n\n  resetCountryOfBirth() {\n    this.portCallPassengerModel.countryOfBirth = null;\n    this.portCallPassengerModel.countryOfBirthId = null;\n  }\n\n  resetIssuingNation() {\n    this.identityDocumentModel.issuingNation = null;\n    this.identityDocumentModel.issuingNationId = null;\n  }\n\n  resetDateOfBirth() {\n    this.portCallPassengerModel.dateOfBirth = null;\n    this.dateOfBirthComponent.dateChanged(null);\n  }\n\n  makeDates(passenger: PersonOnBoardModel) {\n    passenger.dateOfBirth = passenger.dateOfBirth != null ? new Date(passenger.dateOfBirth) : null;\n    passenger.identityDocument.forEach(identityDocument => {\n          identityDocument.identityDocumentIssueDate = identityDocument.identityDocumentIssueDate != null ? new Date(identityDocument.identityDocumentIssueDate) : null;\n          identityDocument.identityDocumentExpiryDate = identityDocument.identityDocumentExpiryDate != null ? new Date(identityDocument.identityDocumentExpiryDate) : null;\n        });\n    return passenger;\n  }\n\n  openViewPassengerModal(row) {\n    this.passengerList.forEach(passenger => {\n      if (passenger.sequenceNumber === row.sequenceNumber) {\n        this.passengerModalComponent.openViewModal(passenger);\n        return;\n      }\n    });\n  }\n\n  openEditPassengerModal(row) {\n    this.passengerList.forEach(passenger => {\n      if (passenger.sequenceNumber === row.sequenceNumber) {\n        this.passengerModalComponent.openEditModal(passenger);\n        return;\n      }\n    });\n  }\n\n  editPassenger($event) {\n    // Set corresponding passenger to the edited instance\n    this.passengerList[this.passengerList.findIndex(p => p.sequenceNumber === $event.sequenceNumber)] = JSON.parse(JSON.stringify($event));\n    this.personOnBoardService.setPassengersList(this.passengerList);\n    // Make all dates Date objects again\n    this.passengerList.forEach(passenger => { passenger = this.makeDates(passenger); });\n    // Load to smart table\n    this.reloadTable();\n    this.touchData();\n  }\n\n  deletePassenger(row) {\n    if (this.passengerList.length <= 1) {\n      this.passengerList = [];\n    } else {\n      this.passengerList.forEach((item, index) => {\n        if (item.sequenceNumber === row.sequenceNumber) {\n          this.passengerList.splice(index, 1);\n        }\n      });\n    }\n    this.persistData();\n  }\n\n  deleteAllPassengers() {\n    this.passengerList = [];\n    this.persistData();\n  }\n\n  savePassengers() {\n    this.personOnBoardService.updatePersonOnBoardList(this.portCallId, this.passengerList, this.personOnBoardType.personOnBoardTypeId).subscribe(res => {\n        this.listIsPristine = true;\n        this.personOnBoardService.setPassengerDataIsPristine(true);\n    });\n  }\n    // Helper methods\n\n    private updateSequenceNumbers() {\n      this.passengerList.forEach((passenger, index) => {\n        passenger.sequenceNumber = index + 1;\n      });\n    }\n\n    getDisplayDateFormat(date) {\n      if (date) {\n        const dateString = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n        return dateString;\n      } else {\n        return null;\n      }\n    }\n\n    getNgbDateFormat(date) {\n      const newDate = new Date(date);\n      return {\n        year: newDate.getFullYear(),\n        month: newDate.getMonth() + 1,\n        day: newDate.getDate()\n      };\n    }\n\n    openWarningModal(content: any) {\n      this.modalService.open(content);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.ts","module.exports = \".modal-body ::ng-deep .ng-select-placeholder-sm, ::-webkit-input-placeholder {\\n  font-size: 0.875rem;\\n  height: 31px;\\n}\\n\\n.modal-body ::ng-deep .ng-select-placeholder-sm, :-ms-input-placeholder {\\n  font-size: 0.875rem;\\n  height: 31px;\\n}\\n\\n.modal-body ::ng-deep .ng-select-placeholder-sm, ::-ms-input-placeholder {\\n  font-size: 0.875rem;\\n  height: 31px;\\n}\\n\\n.modal-body ::ng-deep .ng-select-placeholder-sm, ::placeholder {\\n  font-size: 0.875rem;\\n  height: 31px;\\n}\\n\\n.modal-body ::ng-deep .ng-placeholder, ::-webkit-input-placeholder  {\\n    color: gray !important;\\n    font-style: italic;\\n}\\n\\n.modal-body ::ng-deep .ng-placeholder, :-ms-input-placeholder  {\\n    color: gray !important;\\n    font-style: italic;\\n}\\n\\n.modal-body ::ng-deep .ng-placeholder, ::-ms-input-placeholder  {\\n    color: gray !important;\\n    font-style: italic;\\n}\\n\\n.modal-body ::ng-deep .ng-placeholder, ::placeholder  {\\n    color: gray !important;\\n    font-style: italic;\\n}\\n\\n.modal-body ::ng-deep .ng-input {\\n  height: 21px;\\n}\\n\\n.modal-body ::ng-deep .ng-select .ng-select-container {\\n  min-height: 31px;\\n  height: 31px;\\n  border-radius: .2rem;\\n  border-color: #ced4da;\\n}\\n\\n.modal-body ::ng-deep .form-control-sm {\\n  height: auto;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-modal/passenger-modal.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-modal/passenger-modal.component.css\n// module chunks = main","module.exports = \"<ng-template #viewModal let-close=\\\"close()\\\" class=\\\"modal fade\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">View</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"resetInputPassengerModel(); close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n\\n  </div>\\n  <div class=\\\"modal-body\\\" *ngIf=\\\"inputPassengerModel\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Given Name</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputPassengerModel.givenName\\\" readonly type=\\\"text\\\" name=\\\"givenName\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Family Name</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputPassengerModel.familyName\\\" readonly type=\\\"text\\\" name=\\\"familyName\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Date of Birth</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\" name=\\\"dateOfBirth\\\" [ngModel]=\\\"getDisplayDateFormat(inputPassengerModel.dateOfBirth)\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Country of Birth</label>\\n      <div class=\\\"col my-auto\\\">\\n        <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"inputPassengerModel.countryOfBirth\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">\\n              <img src=\\\"assets/images/flags/128x128/{{ inputPassengerModel.countryOfBirthTwoCharCode | lowercase}}.png\\\" height=\\\"16px\\\">\\n            </span>\\n          </div>\\n          <input class=\\\"form-control\\\" [ngModel]=\\\"inputPassengerModel.countryOfBirth\\\" readonly type=\\\"text\\\" name=\\\"countryOfBirth\\\">\\n        </div>\\n        <input *ngIf=\\\"!inputPassengerModel.countryOfBirth\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\" name=\\\"countryOfBirth\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Nationality</label>\\n      <div class=\\\"col my-auto\\\">\\n        <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"inputPassengerModel.nationality\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">\\n              <img src=\\\"assets/images/flags/128x128/{{ inputPassengerModel.nationalityTwoCharCode | lowercase}}.png\\\" height=\\\"16px\\\">\\n            </span>\\n          </div>\\n          <input class=\\\"form-control\\\" [ngModel]=\\\"inputPassengerModel.nationality\\\" readonly type=\\\"text\\\" name=\\\"nationality\\\">\\n        </div>\\n        <input *ngIf=\\\"!inputPassengerModel.nationality\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\" name=\\\"nationality\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Gender</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input *ngIf=\\\"inputPassengerModel.gender\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputPassengerModel.gender\\\"\\n          readonly type=\\\"text\\\" name=\\\"gender\\\">\\n        <input *ngIf=\\\"!inputPassengerModel.gender\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\" name=\\\"gender\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Transit</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"formBooleanModel[inputPassengerModel.inTransit]\\\" readonly type=\\\"text\\\"\\n          name=\\\"inTransit\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Port of Embarkation</label>\\n      <div class=\\\"col my-auto\\\">\\n        <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"inputPassengerModel.portOfEmbarkation\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\" *ngIf=\\\"inputPassengerModel.portOfEmbarkation\\\">\\n              <img src=\\\"assets/images/flags/128x128/{{ inputPassengerModel.portOfEmbarkationTwoCharCode | lowercase}}.png\\\" height=\\\"20px\\\">\\n            </span>\\n          </div>\\n          <input class=\\\"form-control\\\" [ngModel]=\\\"inputPassengerModel.portOfEmbarkation\\\" readonly type=\\\"text\\\" name=\\\"portOFEmbarkation\\\">\\n        </div>\\n        <input *ngIf=\\\"!inputPassengerModel.portOfEmbarkation\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\" name=\\\"portOFEmbarkation\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Port of Disembarkation</label>\\n      <div class=\\\"col my-auto\\\">\\n        <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"inputPassengerModel.portOfDisembarkation\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\" *ngIf=\\\"inputPassengerModel.portOfDisembarkation\\\">\\n              <img src=\\\"assets/images/flags/128x128/{{ inputPassengerModel.portOfDisembarkationTwoCharCode | lowercase}}.png\\\"\\n                height=\\\"20px\\\">\\n            </span>\\n          </div>\\n          <input class=\\\"form-control\\\" [ngModel]=\\\"inputPassengerModel.portOfDisembarkation\\\" readonly type=\\\"text\\\" name=\\\"portOfDisembarkation\\\">\\n        </div>\\n        <input *ngIf=\\\"!inputPassengerModel.portOfDisembarkation\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\" name=\\\"portOfDisembarkation\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Identity Document Type</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input *ngIf=\\\"inputPassengerModel.identityDocument[0].identityDocumentType\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputPassengerModel.identityDocument[0].identityDocumentType.description\\\"\\n          readonly type=\\\"text\\\" name=\\\"identityDocumentType\\\">\\n        <input *ngIf=\\\"!inputPassengerModel.identityDocument[0].identityDocumentType\\\" class=\\\"form-control form-control-sm\\\" readonly\\n          type=\\\"text\\\" name=\\\"identityDocumentType\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Number of Identity Document</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input *ngIf=\\\"inputPassengerModel.identityDocument[0]\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputPassengerModel.identityDocument[0].identityDocumentNumber\\\"\\n          readonly type=\\\"text\\\" name=\\\"identityDocumentNumber\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Issuing Nation</label>\\n      <div class=\\\"col my-auto\\\">\\n        <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"inputPassengerModel.identityDocument[0].issuingNation\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\">\\n              <img src=\\\"assets/images/flags/128x128/{{ inputPassengerModel.identityDocument[0].issuingNationTwoCharCode | lowercase}}.png\\\"\\n                height=\\\"20px\\\">\\n            </span>\\n          </div>\\n          <input class=\\\"form-control\\\" [ngModel]=\\\"inputPassengerModel.identityDocument[0].issuingNation\\\" readonly type=\\\"text\\\" name=\\\"issuingNation\\\">\\n        </div>\\n        <input *ngIf=\\\"!inputPassengerModel.identityDocument[0].issuingNation\\\" class=\\\"form-control form-control-sm\\\" readonly type=\\\"text\\\"\\n          name=\\\"issuingNation\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Identity Document Issue Date</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"getDisplayDateFormat(inputPassengerModel.identityDocument[0].identityDocumentIssueDate)\\\"\\n          readonly type=\\\"text\\\" name=\\\"identityDocumentIssueDate\\\">\\n        <input *ngIf=\\\"!inputPassengerModel.identityDocument[0].identityDocumentIssueDate\\\" class=\\\"form-control form-control-sm\\\" readonly\\n          type=\\\"text\\\" name=\\\"identityDocumentIssueDate\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Identity Document Expiry Date</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input *ngIf=\\\"inputPassengerModel.identityDocument[0].identityDocumentExpiryDate\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"getDisplayDateFormat(inputPassengerModel.identityDocument[0].identityDocumentExpiryDate)\\\"\\n          readonly type=\\\"text\\\" name=\\\"identityDocumentExpiryDate\\\">\\n        <input *ngIf=\\\"!inputPassengerModel.identityDocument[0].identityDocumentExpiryDate\\\" class=\\\"form-control form-control-sm\\\" readonly\\n          type=\\\"text\\\" name=\\\"identityDocumentExpiryDate\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Visa or Residence Permit Number</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input *ngIf=\\\"inputPassengerModel.identityDocument[0]\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"inputPassengerModel.identityDocument[0].visaOrResidencePermitNumber\\\"\\n          readonly type=\\\"text\\\" name=\\\"visaOrResidencePermitNumber\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"resetInputPassengerModel(); close\\\">\\n      <span>Exit</span>\\n    </button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #editModal let-close=\\\"close()\\\">\\n  <form #editForm=\\\"ngForm\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Edit</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"resetInputPassengerModel(); close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\" *ngIf=\\\"inputPassengerModel\\\">\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Given Name</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input class=\\\"form-control form-control-sm\\\" #givenName=\\\"ngModel\\\" [(ngModel)]=\\\"inputPassengerModel.givenName\\\" type=\\\"text\\\"\\n            name=\\\"givenName\\\" required>\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"givenName.hasError('required') && givenName.touched\\\">\\n            <li>\\n              <small>This field is required.</small>\\n            </li>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Family Name</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input class=\\\"form-control form-control-sm\\\" #familyName=\\\"ngModel\\\" [(ngModel)]=\\\"inputPassengerModel.familyName\\\" type=\\\"text\\\"\\n            name=\\\"familyName\\\" required>\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"familyName.hasError('required') && familyName.touched\\\">\\n            <li>\\n              <small>This field is required.</small>\\n            </li>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Date of Birth</label>\\n        <div class=\\\"col my-auto\\\">\\n          <app-date-picker (dateResult)=\\\"setDateOfBirth($event)\\\" [dateInput]=\\\"getNgbDateFormat(inputPassengerModel.dateOfBirth)\\\"></app-date-picker>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Country of Birth</label>\\n        <div class=\\\"col my-auto\\\">\\n          <div *ngIf=\\\"inputPassengerModel.countryOfBirth\\\" class=\\\"input-group input-group-sm\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <img src=\\\"assets/images/flags/128x128/{{ inputPassengerModel.countryOfBirthTwoCharCode.toLowerCase() | lowercase}}.png\\\"\\n                  height=\\\"20px\\\">\\n              </span>\\n            </div>\\n            <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"inputPassengerModel.countryOfBirth\\\"\\n              name=\\\"countryOfBirth\\\" />\\n            <div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove country of birth\\\" (click)=\\\"resetCountryOfBirth()\\\">\\n                  <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <app-search-country *ngIf=\\\"!inputPassengerModel.countryOfBirth\\\" (selectCountry)=\\\"setCountryOfBirth($event)\\\" (deselectCountry)=\\\"resetCountryOfBirth()\\\"></app-search-country>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Nationality</label>\\n        <div class=\\\"col my-auto\\\">\\n          <div *ngIf=\\\"inputPassengerModel.nationality\\\" class=\\\"input-group input-group-sm\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <img src=\\\"assets/images/flags/128x128/{{ inputPassengerModel.nationalityTwoCharCode.toLowerCase() | lowercase}}.png\\\" height=\\\"20px\\\">\\n              </span>\\n            </div>\\n            <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"inputPassengerModel.nationality\\\"\\n              name=\\\"nationailty\\\" />\\n            <div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove nationality\\\" (click)=\\\"resetNationality()\\\">\\n                  <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <app-search-country *ngIf=\\\"!inputPassengerModel.nationality\\\" (selectCountry)=\\\"setNationality($event)\\\" (deselectCountry)=\\\"resetNationality()\\\"></app-search-country>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Gender</label>\\n        <div class=\\\"col my-auto\\\">\\n          <ng-select class=\\\"ng-select-placeholder-sm\\\" [items]=\\\"genderList\\\" [ngModel]=\\\"inputPassengerModel.gender\\\" name=\\\"gender\\\" bindLabel=\\\"description\\\"\\n            [closeOnSelect]=\\\"true\\\" placeholder=\\\"Gender\\\" (change)=\\\"setGender($event)\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Transit</label>\\n        <div class=\\\"col my-auto\\\">\\n          <ng-select class=\\\"ng-select-placeholder-sm\\\" [items]=\\\"booleanList\\\" [ngModel]=\\\"formBooleanModel[inputPassengerModel.inTransit]\\\"\\n            name=\\\"transit\\\" [closeOnSelect]=\\\"true\\\" placeholder=\\\"Transit\\\" (change)=\\\"setTransit($event)\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Port of Embarkation</label>\\n        <div class=\\\"col my-auto\\\">\\n          <app-search-location *ngIf=\\\"!inputPassengerModel.portOfEmbarkation\\\" [restrictTypeHarbour]=true (locationResult)=\\\"setPortOfEmbarkation($event)\\\"\\n            id=\\\"search-port-of-embarkation\\\"></app-search-location>\\n\\n          <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"inputPassengerModel.portOfEmbarkation\\\">\\n            <div class=\\\"input-group-prepend\\\" *ngIf=\\\"inputPassengerModel.portOfEmbarkation\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <img src=\\\"assets/images/flags/128x128/{{ inputPassengerModel.portOfEmbarkationTwoCharCode.toLowerCase() | lowercase}}.png\\\"\\n                  height=\\\"20px\\\">\\n              </span>\\n            </div>\\n            <input readonly type=\\\"text\\\" name=\\\"port-of-embarkation\\\" id=\\\"app-find-port-of-embarkation\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"inputPassengerModel.portOfEmbarkation\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove port of embarkation\\\" (click)=\\\"resetPortOfEmbarkation()\\\">\\n                <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Port of Disembarkation</label>\\n        <div class=\\\"col my-auto\\\">\\n          <app-search-location *ngIf=\\\"!inputPassengerModel.portOfDisembarkation\\\" [restrictTypeHarbour]=true (locationResult)=\\\"setPortOfDisembarkation($event)\\\"\\n            id=\\\"search-port-of-disembarkation\\\"></app-search-location>\\n          <div class=\\\"input-group input-group-sm\\\" *ngIf=\\\"inputPassengerModel.portOfDisembarkation\\\">\\n            <div class=\\\"input-group-prepend \\\" *ngIf=\\\"inputPassengerModel.portOfDisembarkation\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <img src=\\\"assets/images/flags/128x128/{{ inputPassengerModel.portOfDisembarkationTwoCharCode.toLowerCase() | lowercase}}.png\\\"\\n                  height=\\\"20px\\\">\\n              </span>\\n            </div>\\n            <input readonly type=\\\"text\\\" name=\\\"port-of-disembarkation\\\" id=\\\"app-find-port-of-disembarkation\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"inputPassengerModel.portOfDisembarkation\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove port of disembarkation\\\" (click)=\\\"resetPortOfDisembarkation()\\\">\\n                <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"natureOfIdentityDoc\\\" class=\\\"col col-form-label-sm no-wrap mb-0\\\">Nature of Identity Document</label>\\n        <div class=\\\"col my-auto\\\">\\n          <ng-select class=\\\"ng-select-placeholder-sm\\\" [items]=\\\"identityDocumentTypes\\\" [(ngModel)]=\\\"inputPassengerModel.identityDocument[0].identityDocumentType\\\"\\n            name=\\\"natureOfIdentityDoc\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"description\\\" placeholder=\\\"Nature of Identity Document\\\"\\n            (change)=\\\"setIdentityDocumentType($event)\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Number of Identity Document</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input *ngIf=\\\"inputPassengerModel.identityDocument[0]\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"inputPassengerModel.identityDocument[0].identityDocumentNumber\\\"\\n            type=\\\"text\\\" name=\\\"identityDocumentNumber\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Issuing Nation</label>\\n        <div class=\\\"col my-auto\\\">\\n          <div *ngIf=\\\"inputPassengerModel.identityDocument[0].issuingNation\\\" class=\\\"input-group input-group-sm\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <img src=\\\"assets/images/flags/128x128/{{ inputPassengerModel.identityDocument[0].issuingNationTwoCharCode.toLowerCase() | lowercase}}.png\\\"\\n                  height=\\\"20px\\\">\\n              </span>\\n            </div>\\n            <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"inputPassengerModel.identityDocument[0].issuingNation\\\"\\n              name=\\\"issuingNation\\\" />\\n            <div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove isssuing nation\\\" (click)=\\\"resetIssuingNation()\\\">\\n                  <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <app-search-country *ngIf=\\\"!inputPassengerModel.identityDocument[0].issuingNation\\\" (selectCountry)=\\\"setIssuingNation($event)\\\"\\n            (deselectCountry)=\\\"resetIssuingNation()\\\"></app-search-country>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Identity Document Issue Date</label>\\n        <div class=\\\"col my-auto\\\">\\n          <app-date-picker (dateResult)=\\\"setIdentityDocumentIssueDate($event)\\\" [dateInput]=\\\"getNgbDateFormat(inputPassengerModel.identityDocument[0].identityDocumentIssueDate)\\\"></app-date-picker>\\n          <div *ngIf=\\\"issueDateAfterExpiryDateError\\\" class=\\\"alert alert-danger form-control-sm\\\" role=\\\"alert\\\">\\n            <span>Identity document issue date must be before the expiry date.</span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Identity Document Expiry Date</label>\\n        <div class=\\\"col my-auto\\\">\\n          <app-date-picker (dateResult)=\\\"setIdentityDocumentExpiryDate($event)\\\" [dateInput]=\\\"getNgbDateFormat(inputPassengerModel.identityDocument[0].identityDocumentExpiryDate)\\\"></app-date-picker>\\n          <div *ngIf=\\\"expiryDateBeforeExpiryDateError\\\" class=\\\"alert alert-danger form-control-sm\\\" role=\\\"alert\\\">\\n            <span>Identity document expiry date must be after the issue date.</span>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Visa or Residence Permit Number</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input *ngIf=\\\"inputPassengerModel.identityDocument[0]\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"inputPassengerModel.identityDocument[0].visaOrResidencePermitNumber\\\"\\n            type=\\\"text\\\" name=\\\"visaOrResidencePermitNumber\\\">\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"modal-footer\\\">\\n      <button *ngIf=\\\"editForm.valid && validDocumentDates && (editForm.form.dirty || dirtyForm === true)\\\" type=\\\"button\\\" class=\\\"btn btn-ssn\\\"\\n        (click)=\\\"editPassenger(); resetForm(); close\\\">\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span>Save Entry</span>\\n      </button>\\n      <button *ngIf=\\\"!editForm.valid || !validDocumentDates || !(editForm.form.dirty || dirtyForm === true)\\\" type=\\\"button\\\" class=\\\"btn btn-ssn\\\"\\n        disabled>\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span>Save Entry</span>\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"resetInputPassengerModel($event); close\\\">\\n        <span>Cancel</span>\\n      </button>\\n    </div>\\n  </form>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-modal/passenger-modal.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-modal/passenger-modal.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { GenderModel, IdentityDocumentModel, IdentityDocumentTypeModel, PersonOnBoardModel } from 'app/shared/models/';\nimport { IdentityDocumentService, PortCallFalPersonOnBoardService, ValidateDateTimeService } from 'app/shared/services/';\n\n@Component({\n  selector: 'app-passenger-modal',\n  templateUrl: './passenger-modal.component.html',\n  styleUrls: ['./passenger-modal.component.css']\n})\nexport class PassengerModalComponent implements OnInit {\n\n  inputPassengerModel: any;\n  startInputPassengerModel: PersonOnBoardModel;\n\n  @Output() outputPassengerModel: EventEmitter<PersonOnBoardModel> = new EventEmitter();\n\n  @ViewChild('viewModal') viewModal;\n  @ViewChild('editModal') editModal;\n  dirtyForm = false;\n\n  identityDocumentTypes: IdentityDocumentTypeModel[] = [];\n  genderList: GenderModel[] = [];\n\n  booleanList: string[] = ['Yes', 'No'];\n  booleanModel = {\n    'Yes': true,\n    'No': false\n  };\n  formBooleanModel = {\n    'true': 'Yes',\n    'false': 'No'\n  };\n\n  validDocumentDates = true;\n  issueDateAfterExpiryDateError = false;\n  expiryDateBeforeExpiryDateError = false;\n\n  constructor(\n    private modalService: NgbModal,\n    private identityDocumentService: IdentityDocumentService,\n    private validateDateTimeService: ValidateDateTimeService,\n    private personOnBoardService: PortCallFalPersonOnBoardService\n  ) { }\n\n  ngOnInit() {\n    this.inputPassengerModel = new PersonOnBoardModel();\n\n    this.identityDocumentService.getIdentityDocumentTypes().subscribe(res => {\n      this.identityDocumentTypes = res;\n    });\n\n    this.personOnBoardService.getGenderList().subscribe(res => {\n      this.genderList = res;\n    });\n  }\n\n  // Open modals\n  openViewModal(passengerModel: any) {\n    this.inputPassengerModel = JSON.parse(JSON.stringify(passengerModel));\n    this.makeDates(this.inputPassengerModel);\n    this.inputPassengerModel.identityDocument = passengerModel.identityDocument;\n\n    if (this.inputPassengerModel.identityDocument === undefined || this.inputPassengerModel.identityDocument == null\n      || this.inputPassengerModel.identityDocument[0] === undefined || this.inputPassengerModel.identityDocument[0] == null\n      ) {\n      this.inputPassengerModel.identityDocument[0] = new IdentityDocumentModel();\n    }\n\n    this.modalService.open(this.viewModal);\n  }\n\n  openEditModal(passengerModel: any) {\n    // Set model to modify\n    this.inputPassengerModel = JSON.parse(JSON.stringify(passengerModel));\n    this.makeDates(this.inputPassengerModel);\n\n    if (this.inputPassengerModel.identityDocument === undefined || this.inputPassengerModel.identityDocument == null\n      || this.inputPassengerModel.identityDocument[0] === undefined || this.inputPassengerModel.identityDocument[0] == null\n      ) {\n      this.inputPassengerModel.identityDocument[0] = new IdentityDocumentModel();\n    }\n\n    this.modalService.open(this.editModal, {\n      backdrop: 'static'\n    });\n  }\n\n  // Output\n  editPassenger() {\n    this.outputPassengerModel.emit(this.inputPassengerModel);\n  }\n\n  setNationality($event) {\n    this.dirtyForm = true;\n    this.inputPassengerModel.nationality = $event.item.name;\n    this.inputPassengerModel.nationalityTwoCharCode = $event.item.twoCharCode;\n    this.inputPassengerModel.nationalityId = $event.item.countryId;\n  }\n\n  setCountryOfBirth($event) {\n    this.dirtyForm = true;\n    this.inputPassengerModel.countryOfBirth = $event.item.name;\n    this.inputPassengerModel.countryOfBirthTwoCharCode = $event.item.twoCharCode;\n    this.inputPassengerModel.countryOfBirthId = $event.item.countryId;\n  }\n\n  setIssuingNation($event) {\n    this.dirtyForm = true;\n    this.inputPassengerModel.identityDocument[0].issuingNation = $event.item.name;\n    this.inputPassengerModel.identityDocument[0].issuingNationTwoCharCode = $event.item.twoCharCode;\n    this.inputPassengerModel.identityDocument[0].issuingNationId = $event.item.countryId;\n  }\n\n  setIdentityDocumentType($event) {\n    if ($event) {\n      this.inputPassengerModel.identityDocument[0].identityDocumentType = $event;\n      this.inputPassengerModel.identityDocument[0].identityDocumentTypeId = $event.id;\n    } else {\n      this.resetIdentityDocumentType();\n    }\n  }\n\n  setPortOfEmbarkation($event) {\n    this.dirtyForm = true;\n    this.inputPassengerModel.portOfEmbarkation = $event.name;\n    this.inputPassengerModel.portOfEmbarkationTwoCharCode = $event.country.twoCharCode;\n    this.inputPassengerModel.portOfEmbarkationId = $event.locationId;\n  }\n\n  setPortOfDisembarkation($event) {\n    this.dirtyForm = true;\n    this.inputPassengerModel.portOfDisembarkation = $event.name;\n    this.inputPassengerModel.portOfDisembarkationTwoCharCode = $event.country.twoCharCode;\n    this.inputPassengerModel.portOfDisembarkationId = $event.locationId;\n  }\n\n  setDateOfBirth($event) {\n    this.dirtyForm = true;\n    if ($event) {\n      const date: Date = new Date($event.year, $event.month - 1, $event.day);\n      this.inputPassengerModel.dateOfBirth = date;\n    } else {\n      this.inputPassengerModel.dateOfBirth = null;\n    }\n  }\n\n  setIdentityDocumentIssueDate($event) {\n    this.dirtyForm = true;\n    let date: Date = new Date();\n    if ($event) {\n      date = new Date($event.year, $event.month - 1, $event.day);\n    } else {\n      date = null;\n    }\n    this.inputPassengerModel.identityDocument[0].identityDocumentIssueDate = date;\n    const issueDate = this.inputPassengerModel.identityDocument[0].identityDocumentIssueDate;\n    const expiryDate = this.inputPassengerModel.identityDocument[0].identityDocumentExpiryDate;\n    if (this.validateDateTimeService.checkDocumentDatesError(issueDate, expiryDate)) {\n      this.issueDateAfterExpiryDateError = true;\n      this.validDocumentDates = false;\n    } else {\n      this.issueDateAfterExpiryDateError = false;\n      this.expiryDateBeforeExpiryDateError = false;\n      this.validDocumentDates = true;\n    }\n  }\n\n  setIdentityDocumentExpiryDate($event) {\n    this.dirtyForm = true;\n    let date: Date = new Date();\n    if ($event) {\n      date = new Date($event.year, $event.month - 1, $event.day);\n    } else {\n      date = null;\n    }\n    this.inputPassengerModel.identityDocument[0].identityDocumentExpiryDate = date;\n    const issueDate = this.inputPassengerModel.identityDocument[0].identityDocumentIssueDate;\n    const expiryDate = this.inputPassengerModel.identityDocument[0].identityDocumentExpiryDate;\n    if (this.validateDateTimeService.checkDocumentDatesError(issueDate, expiryDate)) {\n      this.expiryDateBeforeExpiryDateError = true;\n      this.validDocumentDates = false;\n    } else {\n      this.issueDateAfterExpiryDateError = false;\n      this.expiryDateBeforeExpiryDateError = false;\n      this.validDocumentDates = true;\n    }\n\n  }\n\n  setTransit($event) {\n    this.inputPassengerModel.inTransit = this.booleanModel[$event];\n  }\n\n  setGender($event) {\n    if ($event) {\n      this.inputPassengerModel.gender = $event;\n      this.inputPassengerModel.genderId = $event.genderId;\n    } else {\n      this.inputPassengerModel.gender = null;\n      this.inputPassengerModel.genderId = null;\n    }\n  }\n\n  // Resetters\n  resetInputPassengerModel($event: any) {\n    this.resetForm();\n  }\n\n  resetNationality() {\n    this.dirtyForm = true;\n    this.inputPassengerModel.nationality = null;\n    this.inputPassengerModel.nationalityId = null;\n  }\n\n  resetCountryOfBirth() {\n    this.dirtyForm = true;\n    this.inputPassengerModel.countryOfBirth = null;\n    this.inputPassengerModel.countryOfBirthId = null;\n  }\n\n  resetIssuingNation() {\n    this.dirtyForm = true;\n    this.inputPassengerModel.identityDocument[0].issuingNation = null;\n    this.inputPassengerModel.identityDocument[0].issuingNationId = null;\n  }\n\n  resetIdentityDocumentType() {\n    this.inputPassengerModel.identityDocument[0].identityDocumentType = null;\n    this.inputPassengerModel.identityDocument[0].identityDocumentTypeId = null;\n  }\n\n  resetPortOfEmbarkation() {\n    this.dirtyForm = true;\n    this.inputPassengerModel.portOfEmbarkation = null;\n    this.inputPassengerModel.portOfEmbarkationId = null;\n  }\n\n  resetPortOfDisembarkation() {\n    this.dirtyForm = true;\n    this.inputPassengerModel.portOfDisembarkation = null;\n    this.inputPassengerModel.portOfDisembarkationId = null;\n  }\n\n  resetForm() {\n    this.dirtyForm = false;\n  }\n\n  // Helper methods\n  getNgbDateFormat(date) {\n    if (date != null) {\n      const newDate = new Date(date);\n      return {\n        year: newDate.getFullYear(),\n        month: newDate.getMonth() + 1,\n        day: newDate.getDate()\n      };\n    } else {\n      return null;\n    }\n  }\n\n  getDateFormatFromNgbDate(date) {\n    if (date) {\n      const newDate = new Date(date.year + '-' + date.month + '-' + date.day);\n      return newDate;\n    }\n    return null;\n  }\n\n  getDisplayDateFormat(date) {\n    if (date) {\n      const dateString = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n      return dateString;\n    } else {\n      return null;\n    }\n  }\n\n  makeDates(passenger: PersonOnBoardModel) {\n    passenger.dateOfBirth = passenger.dateOfBirth != null ? new Date(passenger.dateOfBirth) : null;\n        passenger.identityDocument.forEach(identityDocument => {\n          identityDocument.identityDocumentIssueDate = identityDocument.identityDocumentIssueDate != null ? new Date(identityDocument.identityDocumentIssueDate) : null;\n          identityDocument.identityDocumentExpiryDate = identityDocument.identityDocumentExpiryDate != null ? new Date(identityDocument.identityDocumentExpiryDate) : null;\n        });\n    return passenger;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-modal/passenger-modal.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/save-passenger-list/save-passenger-list.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/save-passenger-list/save-passenger-list.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Save Passenger List\\\" icon=\\\"save.png\\\">\\n  <div class=\\\"text-center\\\" *ngIf=\\\"!listIsPristine\\\">\\n    <span>You have unsaved changes.</span>\\n    <br>\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"savePassengerList()\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n      <span>Save Passenger List</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"text-center\\\" *ngIf=\\\"listIsPristine\\\">\\n    <span>There is nothing to save.</span>\\n    <br>\\n    <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n      <span>Save Passenger List</span>\\n    </button>\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/save-passenger-list/save-passenger-list.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/save-passenger-list/save-passenger-list.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PersonOnBoardModel } from 'app/shared/models/person-on-board-model';\nimport { PortCallFalPersonOnBoardService } from 'app/shared/services/port-call-fal-person-on-board.service';\nimport { PortCallService } from 'app/shared/services/port-call.service';\n\n@Component({\n  selector: 'app-save-passenger-list',\n  templateUrl: './save-passenger-list.component.html',\n  styleUrls: ['./save-passenger-list.component.css']\n})\nexport class SavePassengerListComponent implements OnInit {\n\n  portCallPassengerList: PersonOnBoardModel[] = [];\n\n  passengerModel: PersonOnBoardModel = new PersonOnBoardModel();\n\n  portCallId: number;\n\n  @Input() listIsPristine: Boolean = true;\n\n  // @Input() passengerList: PersonOnBoardModel[];\n\n  @Output() save: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private portCallService: PortCallService,\n    private personOnBoardService: PortCallFalPersonOnBoardService\n  ) { }\n\n  ngOnInit() {\n    this.portCallService.portCallIdData$.subscribe(portCallIdData => {\n      if (portCallIdData) {\n        this.portCallId = portCallIdData;\n      }\n      this.personOnBoardService.passengerList$.subscribe(list => {\n        if (list) {\n          this.portCallPassengerList = list;\n        }\n      });\n\n    });\n  }\n\n  savePassengerList() {\n    this.save.emit();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/save-passenger-list/save-passenger-list.component.ts","export class SmartTableModel {\n    personOnBoardId: number;\n    sequenceNumber: number;\n    givenName: string;\n    familyName: string;\n    gender: string;\n    nationality: string;\n    dateOfBirth: any;\n    portOfEmbarkation: string;\n    portOfDisembarkation: string;\n    rankName: string;\n    nationalityTwoCharCode: string;\n    countryOfBirthTwoCharCode: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/smartTableModel.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"'Cargo Brief Description'\\\" [icon]=\\\"'cargo.png'\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"cargoDescription\\\">Brief description of cargo:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"cargoDescription\\\" rows=\\\"5\\\" [(ngModel)]=\\\"cargoDescription\\\" (ngModelChange)=\\\"onCargoDescriptionChange()\\\"></textarea>\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-cargo-description',\n  templateUrl: './cargo-description.component.html',\n  styleUrls: ['./cargo-description.component.css']\n})\nexport class CargoDescriptionComponent implements OnInit, OnDestroy {\n\n  cargoDescription: string;\n\n  cargoBriefDescriptionSubscription: Subscription;\n\n  constructor(private detailsService: PortCallDetailsService) { }\n\n  ngOnInit() {\n    this.cargoBriefDescriptionSubscription = this.detailsService.cargoBriefDescriptionData$.subscribe(\n      cargoDescriptionData => {\n        this.cargoDescription = cargoDescriptionData;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.cargoBriefDescriptionSubscription.unsubscribe();\n  }\n\n  onCargoDescriptionChange() {\n    this.detailsService.setCargoBriefDescriptionData(this.cargoDescription);\n    this.touchData();\n  }\n\n  touchData() {\n    this.detailsService.setDetailsPristine(false);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Crew, Passengers and Dimensions\\\" icon=\\\"crew.png\\\">\\n  <form>\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col my-auto\\\">\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"number_of_crew\\\">Number of Crew</label>\\n            <input name=\\\"number_of_crew\\\" type=\\\"number\\\" #numberOfCrew=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter number of crew\\\"\\n              integerValidator positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.numberOfCrew\\\"\\n            />\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"!isValid(numberOfCrew.valid)\\\" class=\\\"alert alert-danger\\\">\\n          <li *ngIf=\\\"numberOfCrew.hasError('notIntegerError')\\\">\\n            <small>Number of crew must be an integer.</small>\\n          </li>\\n          <li *ngIf=\\\"numberOfCrew.hasError('notPositiveNumberError')\\\">\\n            <small>Number of crew must be a positive number.</small>\\n          </li>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col my-auto\\\">\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"number_of_passengers\\\">Number of Passengers</label>\\n            <input name=\\\"number_of_passengers\\\" type=\\\"number\\\" #numberOfPassengers=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter number of passengers\\\"\\n              integerValidator positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.numberOfPassengers\\\"\\n            />\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"!isValid(numberOfPassengers.valid)\\\" class=\\\"alert alert-danger\\\">\\n          <li *ngIf=\\\"numberOfPassengers.hasError('notIntegerError')\\\">\\n            <small>Number of passengers must be an integer.</small>\\n          </li>\\n          <li *ngIf=\\\"numberOfPassengers.hasError('notPositiveNumberError')\\\">\\n            <small>Number of passengers must be a positive number.</small>\\n          </li>\\n        </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col my-auto\\\">\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"actual_draught\\\">Actual Draught</label>\\n            <input name=\\\"actual_draught\\\" type=\\\"number\\\" #actualDraught=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter actual draught\\\"\\n              positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.actualDraught\\\"\\n            />\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"!isValid(actualDraught.valid)\\\" class=\\\"alert alert-danger\\\">\\n          <li *ngIf=\\\"actualDraught.hasError('notPositiveNumberError')\\\">\\n            <small>Actual draught must be a positive number.</small>\\n          </li>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col my-auto\\\">\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"air_draught\\\">Air Draught</label>\\n            <input name=\\\"air_draught\\\" type=\\\"number\\\" #airDraught=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter air draught\\\"\\n              positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.airDraught\\\"\\n            />\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"!isValid(airDraught.valid)\\\" class=\\\"alert alert-danger\\\">\\n          <li *ngIf=\\\"airDraught.hasError('notPositiveNumberError')\\\">\\n            <small>Air draught must be a positive number.</small>\\n          </li>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </form>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { CrewPassengersAndDimensionsModel } from './crewPassengersAndDimensionsModel';\n\n@Component({\n  selector: 'app-crew-passengers-dimensions',\n  templateUrl: './crew-passengers-dimensions.component.html',\n  styleUrls: ['./crew-passengers-dimensions.component.css']\n})\nexport class CrewPassengersDimensionsComponent implements OnInit, OnDestroy {\n\n  @ViewChild(NgForm) form: NgForm;\n\n  crewPassengersAndDimensionsModel: CrewPassengersAndDimensionsModel = {\n    numberOfCrew: null,\n    numberOfPassengers: null,\n    actualDraught: null,\n    airDraught: null\n  };\n\n  crewPassengersAndDimensionsDataSubscription: Subscription;\n\n  constructor(private portCallDetailsService: PortCallDetailsService) { }\n\n  ngOnInit() {\n    this.crewPassengersAndDimensionsDataSubscription = this.portCallDetailsService.crewPassengersAndDimensionsData$.subscribe(\n      data => {\n        if (data) {\n          this.crewPassengersAndDimensionsModel = data;\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.crewPassengersAndDimensionsDataSubscription.unsubscribe();\n  }\n\n  persistData() {\n    this.portCallDetailsService.setCrewPassengersAndDimensionsData(this.crewPassengersAndDimensionsModel);\n  }\n\n  isValid(valid: boolean): boolean {\n    this.sendMetaData();\n    return valid;\n  }\n\n  private sendMetaData(): void {\n    this.portCallDetailsService.setCrewPassengersAndDimensionsMeta({ valid: this.form.valid });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <app-reporting></app-reporting>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <app-crew-passengers-dimensions></app-crew-passengers-dimensions>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <app-cargo-description></app-cargo-description>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <app-purpose></app-purpose>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <app-save-details [portCallId]=\\\"portCallId\\\"></app-save-details>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-port-call-details',\n  templateUrl: './port-call-details.component.html',\n  styleUrls: ['./port-call-details.component.css']\n})\nexport class PortCallDetailsComponent implements OnInit {\n\n  @Input() portCallId: number;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Port Call Purpose\\\" icon=\\\"target.png\\\">\\n  <label for=\\\"purposes\\\">\\n    <span class=\\\"no-wrap\\\">Select purposes for this</span>\\n    <span class=\\\"no-wrap\\\">port call.</span>\\n  </label>\\n  <ng-select id=\\\"purposes\\\" [items]=\\\"purposeList\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select purposes\\\"\\n    [(ngModel)]=\\\"selectedPurposes\\\" (change)=\\\"purposeSelected()\\\">\\n  </ng-select>\\n\\n  <div *ngIf=\\\"otherPurposeSelected\\\" class=\\\"form-group row mt-3\\\">\\n    <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"other_purpose\\\">Specify Other Purpose:</label>\\n    <div class=\\\"col my-auto\\\">\\n      <input [(ngModel)]=\\\"otherPurposeName\\\" name=\\\"other_purpose\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"other_purpose\\\"\\n        placeholder=\\\"Enter other purpose\\\" (ngModelChange)=\\\"setOtherPurposeName()\\\" />\\n    </div>\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PortCallDetailsService, PurposeService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst OTHER_PURPOSE_ID = 100249;\n\n@Component({\n  selector: 'app-purpose',\n  templateUrl: './purpose.component.html',\n  styleUrls: ['./purpose.component.css'],\n  providers: [PurposeService]\n})\nexport class PurposeComponent implements OnInit, OnDestroy {\n\n  selectedPurposes = [];\n  purposeList: any[] = [];\n  amountOfPurposes = 0;\n\n  otherPurposeSelected = false;\n  otherPurposeName = '';\n\n  getPurposesSubscription: Subscription;\n  portCallPurposeDataSubscription: Subscription;\n  otherPurposeNameSubscription: Subscription;\n\n  constructor(private purposeService: PurposeService, private portCallDetailsService: PortCallDetailsService) { }\n\n  ngOnInit() {\n    this.getPurposesSubscription = this.purposeService.getPurposes().subscribe(\n      data => {\n        this.purposeList = data;\n        this.amountOfPurposes = Object.keys(this.purposeList).length;\n      }\n    );\n    this.portCallPurposeDataSubscription = this.portCallDetailsService.portCallPurposeData$.subscribe(\n      data => {\n        if (data) {\n          this.selectedPurposes = data;\n          this.otherPurposeSelected = (this.selectedPurposes.find(p => p.portCallPurposeId === OTHER_PURPOSE_ID) != null);\n        }\n      }\n    );\n    this.otherPurposeNameSubscription = this.portCallDetailsService.otherPurposeName$.subscribe(\n      data => {\n        this.otherPurposeName = data;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.getPurposesSubscription.unsubscribe();\n    this.portCallPurposeDataSubscription.unsubscribe();\n    this.otherPurposeNameSubscription.unsubscribe();\n  }\n\n  purposeSelected() {\n    this.portCallDetailsService.setPortCallPurposeData(this.selectedPurposes);\n    if (this.otherPurposeSelected) {\n      this.setOtherPurposeName();\n    }\n  }\n\n  setOtherPurposeName() {\n    this.portCallDetailsService.setOtherPurposeName(this.otherPurposeName);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Reporting for this Port Call\\\" icon=\\\"verification-clipboard.png\\\">\\n  <form class=\\\"form-inline\\\">\\n    <div class=\\\"form-check mx-2\\\" *ngFor=\\\"let cb of checkboxes\\\">\\n      <input class=\\\"form-check-input clickable\\\" type=\\\"checkbox\\\" id=\\\"{{cb.name}}\\\" [checked]=\\\"cb.checked\\\" (change)=\\\"checkboxChecked(cb)\\\">\\n      <label class=\\\"form-check-label clickable\\\" for=\\\"{{cb.name}}\\\">\\n        <img src=\\\"{{baseIconUrl}}{{cb.icon}}\\\" height=\\\"16px\\\">{{cb.name}}\\n      </label>\\n    </div>\\n  </form>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-reporting',\n  templateUrl: './reporting.component.html',\n  styleUrls: ['./reporting.component.css']\n})\nexport class ReportingComponent implements OnInit, OnDestroy {\n\n  baseIconUrl = 'assets/images/icons/128x128/';\n  reportingModel: {\n    reportingDpg: boolean,\n    reportingCargo: boolean,\n    reportingShipStores: boolean,\n    reportingCrew: boolean,\n    reportingPax: boolean,\n    reportingSecurity: boolean\n  };\n  checkboxes: any = [];\n\n  reportingForThisPortCallDataSubscription: Subscription;\n\n  constructor(private portCallDetailsService: PortCallDetailsService) { }\n\n  ngOnInit() {\n    this.reportingForThisPortCallDataSubscription = this.portCallDetailsService.reportingForThisPortCallData$.subscribe(\n      data => {\n        if (data != null) {\n          this.reportingModel = data;\n\n        } else {\n          this.reportingModel = {\n            reportingDpg: null,\n            reportingCargo: null,\n            reportingShipStores: null,\n            reportingCrew: null,\n            reportingPax: null,\n            reportingSecurity: null\n          };\n        }\n        this.checkboxes = [\n          { name: 'DPG', icon: 'hazard.png', checked: this.reportingModel.reportingDpg || false },\n          { name: 'Cargo', icon: 'cargo.png', checked: this.reportingModel.reportingCargo || false },\n          { name: 'Ship Stores', icon: 'alcohol.png', checked: this.reportingModel.reportingShipStores || false },\n          { name: 'Crew', icon: 'crew.png', checked: this.reportingModel.reportingCrew || false },\n          { name: 'Pax', icon: 'pax.png', checked: this.reportingModel.reportingPax || false },\n          { name: 'Security', icon: 'security.png', checked: this.reportingModel.reportingSecurity || false }\n        ];\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.reportingForThisPortCallDataSubscription.unsubscribe();\n  }\n\n  checkboxChecked(checkboxModel) {\n    checkboxModel.checked = !checkboxModel.checked;\n    switch (checkboxModel.name) {\n      case 'DPG':\n        this.reportingModel.reportingDpg = checkboxModel.checked;\n        break;\n      case 'Cargo':\n        this.reportingModel.reportingCargo = checkboxModel.checked;\n        break;\n      case 'Ship Stores':\n        this.reportingModel.reportingShipStores = checkboxModel.checked;\n        break;\n      case 'Crew':\n        this.reportingModel.reportingCrew = checkboxModel.checked;\n        break;\n      case 'Pax':\n        this.reportingModel.reportingPax = checkboxModel.checked;\n        break;\n      case 'Security':\n        this.reportingModel.reportingSecurity = checkboxModel.checked;\n        break;\n      default:\n    }\n    this.portCallDetailsService.setReportingForThisPortCallData(this.reportingModel);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Save Port Call Details\\\" icon=\\\"save.png\\\">\\n  <div class=\\\"text-center\\\" *ngIf=\\\"!dataIsPristine\\\">\\n    <div *ngIf=\\\"!crewPassengersAndDimensionsMeta.valid\\\">\\n      <div class=\\\"alert alert-danger\\\">\\n        <span>You can't save port call details.</span>\\n        <br>\\n        <span>Reason:</span>\\n        <li *ngIf=\\\"!crewPassengersAndDimensionsMeta.valid\\\">\\n          <small>There are errors in \\\"Crew, Passengers and Dimensions\\\"</small>\\n        </li>\\n      </div>\\n      <button class=\\\"btn btn-ssn\\\" disabled>\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span>Save Details</span>\\n      </button>\\n    </div>\\n\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"saveDetails()\\\" *ngIf=\\\"crewPassengersAndDimensionsMeta.valid\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n      <span>Save Details</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"text-center\\\" *ngIf=\\\"dataIsPristine\\\">\\n    <span>{{ dataIsPristineText }}</span>\\n    <br>\\n    <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n      <span>Save Details</span>\\n    </button>\\n  </div>\\n\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormMetaData } from 'app/shared/interfaces/form-meta-data.interface';\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\nimport { PortCallDetailsService, PortCallService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst INITIAL_DATA_IS_PRISTINE_TEXT = 'There are no unsaved changes in this page.';\nconst UPDATED_DATA_IS_PRISTINE_TEXT = 'Your changes have been saved.';\n\n@Component({\n  selector: 'app-save-details',\n  templateUrl: './save-details.component.html',\n  styleUrls: ['./save-details.component.css']\n})\nexport class SaveDetailsComponent implements OnInit, OnDestroy {\n\n  @Input() portCallId: number;\n\n  detailsModel: PortCallDetailsModel = new PortCallDetailsModel();\n  reportingModel: any;\n  crewPassengersAndDimensionsModel: any;\n  purposeModel = [];\n  otherPurposeName: any;\n\n  crewPassengersAndDimensionsMeta: FormMetaData = { valid: true };\n\n  dataIsPristine = true;\n  dataIsPristineText: string;\n\n  portCallDetailsIdSubscription: Subscription;\n  detailsPristineSubscription: Subscription;\n  reportingForThisPortCallDataSubscription: Subscription;\n  crewPassengersAndDimensionsDataSubscription: Subscription;\n  portCallPurposeDataSubscription: Subscription;\n  otherPurposeNameSubscription: Subscription;\n  crewPassengersAndDimensionsMetaSubscription: Subscription;\n  cargoDescriptionSubscription: Subscription;\n\n  constructor(private portCallService: PortCallService, private portCallDetailsService: PortCallDetailsService) {\n    this.dataIsPristineText = INITIAL_DATA_IS_PRISTINE_TEXT;\n  }\n\n  ngOnInit() {\n    this.detailsPristineSubscription = this.portCallDetailsService.detailsPristine$.subscribe(detailsDataIsPristine => {\n      this.dataIsPristine = detailsDataIsPristine;\n    });\n    // Port Call Details Id\n    this.portCallDetailsIdSubscription = this.portCallDetailsService.portCallDetailsIdData$.subscribe(\n      portCallDetailsIdData => {\n        if (portCallDetailsIdData) {\n          this.detailsModel.portCallDetailsId = portCallDetailsIdData;\n        }\n      }\n    );\n    // Reporting\n    this.reportingForThisPortCallDataSubscription = this.portCallDetailsService.reportingForThisPortCallData$.subscribe(\n      reportingData => {\n        if (reportingData) {\n          this.detailsModel.reportingCargo = reportingData.reportingCargo;\n          this.detailsModel.reportingCrew = reportingData.reportingCrew;\n          this.detailsModel.reportingDpg = reportingData.reportingDpg;\n          this.detailsModel.reportingPax = reportingData.reportingPax;\n          this.detailsModel.reportingShipStores = reportingData.reportingShipStores;\n          this.detailsModel.reportingSecurity = reportingData.reportingSecurity;\n        }\n      }\n    );\n    // Crew, passengers, and dimensions\n    this.crewPassengersAndDimensionsDataSubscription = this.portCallDetailsService.crewPassengersAndDimensionsData$.subscribe(\n      cpadData => {\n        if (cpadData) {\n          this.crewPassengersAndDimensionsModel = cpadData;\n          this.detailsModel.numberOfCrew = cpadData.numberOfCrew;\n          this.detailsModel.numberOfPassengers = cpadData.numberOfPassengers;\n          this.detailsModel.airDraught = cpadData.airDraught;\n          this.detailsModel.actualDraught = cpadData.actualDraught;\n        }\n      }\n    );\n    // Cargo Brief Description\n    this.cargoDescriptionSubscription = this.portCallDetailsService.cargoBriefDescriptionData$.subscribe(\n      cargoDescriptionData => {\n        this.detailsModel.cargoBriefDescription = cargoDescriptionData;\n      }\n    );\n    // Purpose\n    this.portCallPurposeDataSubscription = this.portCallDetailsService.portCallPurposeData$.subscribe(purposeData => {\n      if (purposeData) {\n        this.purposeModel = purposeData;\n      }\n    });\n\n    this.otherPurposeNameSubscription = this.portCallDetailsService.otherPurposeName$.subscribe(otherNameData => {\n      this.otherPurposeName = otherNameData;\n    });\n\n    this.crewPassengersAndDimensionsMetaSubscription = this.portCallDetailsService.crewPassengersAndDimensionsMeta$.subscribe(\n      cpadMetaData => {\n        this.crewPassengersAndDimensionsMeta = cpadMetaData;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.portCallDetailsIdSubscription.unsubscribe();\n    this.detailsPristineSubscription.unsubscribe();\n    this.reportingForThisPortCallDataSubscription.unsubscribe();\n    this.crewPassengersAndDimensionsDataSubscription.unsubscribe();\n    this.portCallPurposeDataSubscription.unsubscribe();\n    this.otherPurposeNameSubscription.unsubscribe();\n    this.crewPassengersAndDimensionsMetaSubscription.unsubscribe();\n    this.cargoDescriptionSubscription.unsubscribe();\n  }\n\n  saveDetails() {\n    if (this.crewPassengersAndDimensionsMeta.valid) {\n      this.detailsModel.portCallId = this.portCallId;\n      this.detailsModel.numberOfCrew = this.crewPassengersAndDimensionsModel.numberOfCrew;\n      this.detailsModel.numberOfPassengers = this.crewPassengersAndDimensionsModel.numberOfPassengers;\n      this.detailsModel.airDraught = this.crewPassengersAndDimensionsModel.airDraught;\n      this.detailsModel.actualDraught = this.crewPassengersAndDimensionsModel.actualDraught;\n\n      this.portCallService.saveDetails(\n        this.detailsModel,\n        this.purposeModel,\n        this.otherPurposeName\n      ).subscribe(detailsResponse => {\n        this.portCallDetailsService.setPortCallDetailsId(detailsResponse.portCallDetailsId);\n        this.portCallService.savePurposesForPortCall(this.portCallId, this.purposeModel, this.otherPurposeName);\n      });\n      this.dataIsPristineText = UPDATED_DATA_IS_PRISTINE_TEXT;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/company-security-officer/company-security-officer.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/company-security-officer/company-security-officer.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"'Company Security Officer and 24 hour contact details'\\\">\\n  <form #form=\\\"ngForm\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div *ngIf=\\\"!csoModel.organization\\\">\\n          <app-search-organization [header]=\\\"'CSO Organization. Search by name or organization number.'\\\" (organizationResult)=\\\"onOrganizationResult($event)\\\"></app-search-organization>\\n        </div>\\n        <div *ngIf=\\\"csoModel.organization\\\">\\n          <app-organization-info-table [organizationModel]=\\\"csoModel.organization\\\"></app-organization-info-table>\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectOrganization()\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"given_name\\\">Given name</label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"csoModel.givenName\\\" placeholder=\\\"Enter given name\\\" name=\\\"given_name\\\" class=\\\"form-control form-control-sm\\\"\\n            (change)=\\\"touchData()\\\" />\\n\\n          <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"surname\\\">Surname</label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"csoModel.surname\\\" placeholder=\\\"Enter surname\\\" name=\\\"surname\\\" class=\\\"form-control form-control-sm\\\"\\n            (change)=\\\"touchData()\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"phone_number\\\">Phone number</label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"csoModel.phoneNumber\\\" placeholder=\\\"Enter phone number\\\" name=\\\"phone_number\\\" class=\\\"form-control form-control-sm\\\"\\n            (change)=\\\"touchData()\\\" type=\\\"number\\\"/>\\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\n        <div class=\\\"form-group\\\">\\n\\n          <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"email_address\\\">Email</label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"csoModel.email\\\" placeholder=\\\"Enter email address\\\" name=\\\"email_address\\\" class=\\\"form-control form-control-sm\\\"\\n            (change)=\\\"touchData()\\\" />\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/company-security-officer/company-security-officer.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/company-security-officer/company-security-officer.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { CompanySecurityOfficerModel } from '../../../../../../../shared/models/company-security-officer-model';\nimport { FalSecurityService } from '../../../../../../../shared/services/fal-security.service';\n\n@Component({\n  selector: 'app-company-security-officer',\n  templateUrl: './company-security-officer.component.html',\n  styleUrls: ['./company-security-officer.component.css']\n})\nexport class CompanySecurityOfficerComponent implements OnInit {\n  @Input() csoModel: CompanySecurityOfficerModel;\n\n  constructor(\n    private securityService: FalSecurityService\n  ) { }\n\n  ngOnInit() {\n    this.validateData();\n  }\n\n  onOrganizationResult(organization) {\n    this.csoModel.organizationId = organization.organizationId;\n    this.csoModel.organization = organization;\n    this.touchData();\n  }\n\n  deselectOrganization() {\n    this.csoModel.organizationId = null;\n    this.csoModel.organization = null;\n    this.touchData();\n  }\n\n  /** Called whenever changes are made to the form */\n  touchData() {\n    this.securityService.setPristineData(false);\n    this.validateData();\n  }\n\n  /** Checks that information required for saving is present */\n  private validateData() {\n    this.securityService.setValidCompanySecurityOfficerData(this.dataIsValid());\n  }\n\n  private dataIsValid() {\n    return this.csoModel != null\n      && this.csoModel.organizationId != null\n      && this.csoModel.givenName != null\n      && this.csoModel.surname != null\n      && this.csoModel.phoneNumber != null\n      && this.csoModel.email != null;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/security/company-security-officer/company-security-officer.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls-table/last-10-port-calls-table.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls-table/last-10-port-calls-table.component.css\n// module chunks = main","module.exports = \"<table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n  <thead class=\\\"bg-ssn text-white\\\">\\n    <tr>\\n      <th class=\\\"py-1\\\">\\n        <h5 class=\\\"mb-0\\\">Last Port Calls</h5>\\n      </th>\\n    </tr>\\n  </thead>\\n</table>\\n<div class=\\\"table-responsive\\\">\\n  <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"tableDataSource\\\"></ng2-smart-table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls-table/last-10-port-calls-table.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls-table/last-10-port-calls-table.component.html\n// module chunks = main","import { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { DeleteButtonComponent } from 'app/shared/components/delete-button/delete-button.component';\nimport { SecurityPreviousPortOfCallModel } from 'app/shared/models/security-previous-port-of-call-model';\nimport { LocalDataSource } from 'ng2-smart-table';\n\n@Component({\n  selector: 'app-last-10-port-calls-table',\n  templateUrl: './last-10-port-calls-table.component.html',\n  styleUrls: ['./last-10-port-calls-table.component.css'],\n  providers: [DatePipe]\n})\nexport class Last10PortCallsTableComponent implements OnInit, OnChanges {\n  @Input() tableEntryList: SecurityPreviousPortOfCallModel[] = [];\n  @Output() delete = new EventEmitter<any>();\n\n  tableDataSource: LocalDataSource = new LocalDataSource();\n\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'No entries have been added yet.',\n\n    columns: {\n      portOfCall: {\n        title: 'Port of Call',\n        type: 'html'\n      },\n      arrival: {\n        title: 'Arrival',\n        type: 'html',\n        sortDirection: 'desc'\n      },\n      departure: {\n        title: 'Departure',\n        type: 'html'\n      },\n      shipSecurityLevel: {\n        title: 'Ship Security Level',\n        type: 'html'\n      },\n      sequenceNumber: {\n        title: 'Sequence Number',\n        type: 'html'\n      },\n      delete: {\n        title: 'Delete',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: DeleteButtonComponent,\n        onComponentInitFunction: (instance) => {\n          instance.delete.subscribe(row => {\n            this.deletePortCall(row);\n          });\n        }\n      }\n    }\n  };\n\n  constructor(\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit() {\n    if (this.tableEntryList && this.tableEntryList.length > 0) {\n      const rows = this.generateRows();\n      this.tableDataSource.load(rows);\n    } else {\n      this.tableDataSource.load([]);\n    }\n  }\n\n  /** Called whenever a change is made to the tableEntryList input. */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.tableEntryList && this.tableEntryList.length > 0) {\n      const rows = this.generateRows();\n      this.tableDataSource.load(rows);\n    } else {\n      this.tableDataSource.load([]);\n    }\n  }\n\n  /** Emits event to parent component telling it to remove an entry from the table. */\n  deletePortCall(row) {\n    this.delete.emit(row);\n  }\n\n  /** Maps content of tableEntryList to a format compatible with tableSettings. */\n  generateRows() {\n    const rowData = this.tableEntryList.map(pc => {\n      return {\n        portCall: pc,\n        portOfCall: (pc.location != null) ? pc.location.name : '',\n        arrival: `<span class=\"no-wrap\">` +\n          this.datePipe.transform(pc.arrivalDateTime, 'yyyy-MM-dd') +\n          `</span> <span class=\"no-wrap\">` +\n          this.datePipe.transform(pc.arrivalDateTime, 'HH:mm') +\n          `</span>`,\n        departure: `<span class=\"no-wrap\">` +\n          this.datePipe.transform(pc.departureDateTime, 'yyyy-MM-dd') +\n          `</span> <span class=\"no-wrap\">` +\n          this.datePipe.transform(pc.departureDateTime, 'HH:mm') +\n          `</span>`,\n        shipSecurityLevel: pc.securityLevel.name,\n        sequenceNumber: pc.sequenceNumber\n      };\n    });\n    return rowData;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls-table/last-10-port-calls-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"'Last 10 Port Calls'\\\" icon=\\\"location.png\\\">\\n  <div class=\\\"text-center mb-1\\\">\\n    <span>Select a port by searching for it by name or LOCODE.</span>\\n  </div>\\n  <app-search-location *ngIf=\\\"!locationFound\\\" [restrictTypeHarbour]=true (locationResult)=\\\"onLocationResult($event)\\\"></app-search-location>\\n  <div class=\\\"text-center\\\" *ngIf=\\\"locationFound\\\">\\n    <app-ssn-table [entryData]=\\\"locationData\\\"></app-ssn-table>\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectLocation()\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n  </div>\\n\\n  <div class=\\\"row mb-1\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <app-date-time-picker [header]=\\\"'Arrival'\\\" [dateTimeModel]=\\\"arrivalModel\\\" (dateTimeResult)=\\\"onArrivalResult($event)\\\"></app-date-time-picker>\\n      <app-date-time-picker [header]=\\\"'Departure'\\\" [dateTimeModel]=\\\"departureModel\\\" (dateTimeResult)=\\\"onDepartureResult($event)\\\"></app-date-time-picker>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"mb-2\\\">\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"security_level_select\\\">Ship Security Level</label>\\n        <ng-select id=\\\"security_level_select\\\" name=\\\"security_level_select\\\" [items]=\\\"securityLevelList\\\" bindLabel=\\\"name\\\" [(ngModel)]=\\\"formModel.securityLevel\\\"\\n          placeholder=\\\"Select security level...\\\" (change)=\\\"onSecurityLevelResult($event)\\\"></ng-select>\\n      </div>\\n      <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"additional_security_measures\\\">(Optional) Additional security measures</label>\\n      <textarea [(ngModel)]=\\\"formModel.additionalSecurityMeasures\\\" class=\\\"form-control form-control-sm\\\" id=\\\"additional_security_measures\\\"\\n        name=\\\"additional_security_measures\\\" rows=\\\"6\\\" placeholder=\\\"Please describe any special or additional security measures, beyond those in the approved SSP.\\\"></textarea>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"alert alert-danger text-center\\\" *ngIf=\\\"arrivalIsAfterDepartureError || arrivalOverlapError || departureOverlapError || entryArrivalOverlapError || entryDepartureOverlapError\\\">\\n    <div *ngIf=\\\"arrivalIsAfterDepartureError\\\">Error: time of arrival cannot be set after time of departure.</div>\\n    <div *ngIf=\\\"arrivalOverlapError\\\">Error: time of arrival cannot be between the arrival and departure times of another\\n      port call.</div>\\n    <div *ngIf=\\\"departureOverlapError\\\">Error: time of departure cannot be between the arrival and departure times of another\\n      port call.</div>\\n    <div *ngIf=\\\"entryArrivalOverlapError\\\">Error: time of arrival of another port call cannot be between arrival and departure\\n      times of this port call.</div>\\n    <div *ngIf=\\\"entryDepartureOverlapError\\\">Error: time of departure of another port call cannot be between arrival and departure\\n      times of this port call.</div>\\n  </div>\\n\\n  <div class=\\\"row text-center mb-1\\\">\\n    <div class=\\\"col\\\">\\n      <div *ngIf=\\\"locationFound && formModel.securityLevelId && formModel.securityLevel && formModel.arrivalDateTime && formModel.departureDateTime && !arrivalIsAfterDepartureError && !arrivalOverlapError && !departureOverlapError && !entryArrivalOverlapError && !entryDepartureOverlapError\\\">\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"addTableEntry()\\\">\\n          <span> Add Entry</span>\\n        </button>\\n      </div>\\n      <div *ngIf=\\\"!(locationFound && formModel.securityLevelId && formModel.securityLevel && formModel.arrivalDateTime && formModel.departureDateTime && !arrivalIsAfterDepartureError && !arrivalOverlapError && !departureOverlapError && !entryArrivalOverlapError && !entryDepartureOverlapError)\\\">\\n        <button class=\\\"btn btn-ssn\\\" disabled>\\n          <span> Add Entry</span>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-last-10-port-calls-table [tableEntryList]=\\\"portCallListDeepCopy\\\" (delete)=\\\"onRemoveTableEntry($event)\\\"></app-last-10-port-calls-table>\\n    </div>\\n  </div>\\n\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\nimport { LocationProperties } from 'app/shared/constants/location-properties';\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\nimport { SecurityLevelModel, SecurityPreviousPortOfCallModel } from 'app/shared/models/';\nimport { FalSecurityService } from 'app/shared/services/fal-security.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-last-10-port-calls',\n  templateUrl: './last-10-port-calls.component.html',\n  styleUrls: ['./last-10-port-calls.component.css']\n})\nexport class Last10PortCallsComponent implements OnInit, OnDestroy {\n\n  @Input() portCallList: SecurityPreviousPortOfCallModel[]; // List containing the port calls registered in the security form\n  portCallListDeepCopy: SecurityPreviousPortOfCallModel[] = []; // Deep copy of portCallList, used as input in last-10-port-calls-table component\n  locationFound = false;  // boolean used for switching between search-location component and info table for selected location\n  locationData = new LocationProperties().getPropertyList();\n  formModel: SecurityPreviousPortOfCallModel = new SecurityPreviousPortOfCallModel(); // model that is built using the form before it is added to the table\n  securityLevelList: SecurityLevelModel[];\n  getSecurityLevelListSubscription: Subscription;\n\n  /* DateTime is a custom interface used in the date-picker and date-time-picker components */\n  arrivalModel: DateTime = {\n    date: null,\n    time: new NgbTime(0, 0, 0)\n  };\n  departureModel: DateTime = {\n    date: null,\n    time: new NgbTime(0, 0, 0)\n  };\n\n  arrivalIsAfterDepartureError = false; // formModel's arrival time is after its departure time\n  arrivalOverlapError = false;  // formModel's arrival time is between the arrival and departure times of an existing table entry\n  departureOverlapError = false;  // formModel's departure time is between arrival and departure times of an existing table entry\n  entryArrivalOverlapError = false; // The arrival and departure times of the formModel overlaps with the arrival time of an existing table entry\n  entryDepartureOverlapError = false; // The arrival and departure times of the formModel overlaps with the departure time of an existing table entry\n\n  constructor(\n    private securityService: FalSecurityService\n  ) { }\n\n  ngOnInit() {\n    this.validateData();\n    this.portCallListDeepCopy = JSON.parse(JSON.stringify(this.portCallList)); // deep copying\n    this.getSecurityLevelListSubscription = this.securityService.getSecurityLevelList().subscribe(\n      data => {\n        this.securityLevelList = data;\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.getSecurityLevelListSubscription.unsubscribe();\n  }\n\n  addTableEntry() {\n    this.validateDateTime();\n    const formModelCopy = JSON.parse(JSON.stringify(this.formModel)); // deep copy to avoid problems when formModel is reset\n    this.portCallList.push(formModelCopy);\n    this.touchData();\n    this.resetModel();\n  }\n\n  /** Called on (delete) output from last-10-port-calls-table component */\n  onRemoveTableEntry(row) {\n    const index = this.portCallList.findIndex(entry => entry.sequenceNumber === row.portCall.sequenceNumber); // consider replacing with better check\n    if (index !== -1) {\n      this.portCallList.splice(index, 1); // remove entry from list\n    }\n    this.touchData();\n  }\n\n  /** Sorts list by arrival time (most recent first) and sets sequence numbers in that order */\n  setSequenceNumbers() {\n    if (this.portCallList.length > 0) {\n      this.portCallList.sort((entry1, entry2) => {\n        const date1 = new Date(entry1.arrivalDateTime);\n        const date2 = new Date(entry2.arrivalDateTime);\n        return date2.getTime() - date1.getTime();\n      });\n      this.portCallList.forEach((pc, index) => {\n        pc.sequenceNumber = index + 1;\n      });\n    }\n  }\n\n  onLocationResult(location) {\n    this.formModel.location = location;\n    this.formModel.locationId = location.locationId;\n    LocationProperties.setLocationData(this.locationData, this.formModel.location);\n    if (this.formModel.location.country) {\n      const twoCharCode = this.formModel.location.country.twoCharCode.toLowerCase() || 'xx';\n      const countryFlag = twoCharCode + '.png';\n      LocationProperties.setCountry(this.locationData, this.formModel.location.country.name, countryFlag);\n    }\n    this.locationFound = true;\n  }\n\n  deselectLocation() {\n    this.locationFound = false;\n    this.formModel.location = null;\n    this.formModel.locationId = null;\n  }\n\n  onArrivalResult(arrivalResult) {\n    if (arrivalResult) {\n      this.arrivalModel = arrivalResult;\n      this.formModel.arrivalDateTime = new Date(this.arrivalModel.date.year, this.arrivalModel.date.month - 1, this.arrivalModel.date.day, this.arrivalModel.time.hour, this.arrivalModel.time.minute);\n    }\n    this.validateDateTime();\n  }\n\n  onDepartureResult(departureResult) {\n    if (departureResult) {\n      this.departureModel = departureResult;\n      this.formModel.departureDateTime = new Date(this.departureModel.date.year, this.departureModel.date.month - 1, this.departureModel.date.day, this.departureModel.time.hour, this.departureModel.time.minute);\n    }\n    this.validateDateTime();\n  }\n\n  onSecurityLevelResult(securityLevelResult) {\n    this.formModel.securityLevelId = securityLevelResult.securityLevelId;\n  }\n\n  /** Checks for consistency errors in the arrival/departure times of the formModel and existing table entries. */\n  private validateDateTime() {\n    if (this.arrivalModel && this.arrivalModel.date && this.departureModel && this.departureModel.date) {\n      this.arrivalIsAfterDepartureError = this.isAfter(this.arrivalModel, this.departureModel);\n      this.arrivalOverlapError = false;\n      this.departureOverlapError = false;\n      this.entryArrivalOverlapError = false;\n      this.entryDepartureOverlapError = false;\n      if (this.portCallList && this.portCallList.length > 0) {\n        this.portCallList.forEach(entry => {\n          const entryArrivalDateTime = this.dateStringToDateTime(entry.arrivalDateTime);\n          const entryDepartureDateTime = this.dateStringToDateTime(entry.departureDateTime);\n\n          if (this.isAfter(this.arrivalModel, entryArrivalDateTime) && this.isAfter(entryDepartureDateTime, this.arrivalModel)) {\n            this.arrivalOverlapError = true;\n          }\n          if (this.isAfter(this.departureModel, entryArrivalDateTime) && this.isAfter(entryDepartureDateTime, this.departureModel)) {\n            this.departureOverlapError = true;\n          }\n          if (this.isAfter(entryArrivalDateTime, this.arrivalModel) && this.isAfter(this.departureModel, entryArrivalDateTime)) {\n            this.entryArrivalOverlapError = true;\n          }\n          if (this.isAfter(entryDepartureDateTime, this.arrivalModel) && this.isAfter(this.departureModel, entryDepartureDateTime)) {\n            this.entryDepartureOverlapError = true;\n          }\n\n        });\n      }\n    } else {\n      this.arrivalIsAfterDepartureError = false;\n      this.arrivalOverlapError = false;\n      this.departureOverlapError = false;\n      this.entryArrivalOverlapError = false;\n      this.entryDepartureOverlapError = false;\n    }\n  }\n\n  /** Converts dates in string format to DateTime format */\n  private dateStringToDateTime(dateString) {\n    const date = new Date(dateString);\n    const dateTime: DateTime = {\n      date: new NgbDate(date.getFullYear(), date.getMonth() + 1, date.getDate()),\n      time: new NgbTime(date.getHours(), date.getMinutes(), 0)\n    };\n    return dateTime;\n  }\n\n  /** Checks if one DateTime (dt1) is after another (dt2) */\n  private isAfter(dt1: DateTime, dt2: DateTime) {\n    if (dt1.date && dt2.date) {\n      const dt1Date = new NgbDate(dt1.date.year, dt1.date.month, dt1.date.day);\n      const dt2Date = new NgbDate(dt2.date.year, dt2.date.month, dt2.date.day);\n      if (dt1Date.after(dt2Date)) {\n        return true;\n      }\n      if (dt1Date.equals(dt2Date)) {\n        if (dt1.time.hour > dt2.time.hour || (dt1.time.hour === dt2.time.hour && dt1.time.minute >= dt2.time.minute)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /** Resets formModel so input fields are cleared. Called whenever a table entry is added. */\n  private resetModel() {\n    this.locationFound = false;\n    this.arrivalModel = {\n      date: null,\n      time: new NgbTime(0, 0, 0)\n    };\n    this.departureModel = {\n      date: null,\n      time: new NgbTime(0, 0, 0)\n    };\n    this.formModel = new SecurityPreviousPortOfCallModel();\n  }\n\n  /** Called whenever a table entry is added or removed. */\n  private touchData() {\n    this.setSequenceNumbers();\n    this.portCallListDeepCopy = JSON.parse(JSON.stringify(this.portCallList));\n    this.securityService.setPristineData(false);\n    this.validateData();\n  }\n\n  /** Checks that information required for saving is present. */\n  private validateData() {\n    this.securityService.setValidLast10PortCallsData(this.dataIsValid());\n  }\n\n  private dataIsValid() {\n    return true; // can potentially be replaced with 'this.portCallList.length >= 10'\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/security/last-10-port-calls/last-10-port-calls.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security-button/save-security-button.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security-button/save-security-button.component.css\n// module chunks = main","module.exports = \"<button *ngIf=\\\"allowSaving && !saving\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"saveSecurity()\\\">\\n  <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n  <span>Save Security</span>\\n</button>\\n\\n<button *ngIf=\\\"!(allowSaving && !saving)\\\" class=\\\"btn btn-ssn\\\" disabled>\\n  <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n  <span>Save Security</span>\\n</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security-button/save-security-button.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security-button/save-security-button.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { CompanySecurityOfficerModel } from '../../../../../../../../shared/models/company-security-officer-model';\nimport { FalSecurityModel } from '../../../../../../../../shared/models/fal-security-model';\nimport { InternationalShipSecurityCertificateModel } from '../../../../../../../../shared/models/international-ship-security-certificate-model';\nimport { SecurityPreviousPortOfCallModel } from '../../../../../../../../shared/models/security-previous-port-of-call-model';\nimport { ShipModel } from '../../../../../../../../shared/models/ship-model';\nimport { ShipToShipActivityModel } from '../../../../../../../../shared/models/ship-to-ship-activity-model';\nimport { FalSecurityService, ShipService } from '../../../../../../../../shared/services/';\n\n@Component({\n  selector: 'app-save-security-button',\n  templateUrl: './save-security-button.component.html',\n  styleUrls: ['./save-security-button.component.css']\n})\nexport class SaveSecurityButtonComponent implements OnInit, OnDestroy {\n  @Input() portCallId: number;\n  securityModel: FalSecurityModel;\n  isscModel: InternationalShipSecurityCertificateModel;\n  shipModel: ShipModel;\n  allowSaving = false;\n  saving = false;\n\n  saveSecurityModelSubscription: Subscription;\n  saveIsscModelSubscription: Subscription;\n  saveShipModelSubscription: Subscription;\n  allowSavingSubscription: Subscription;\n\n  constructor(\n    private securityService: FalSecurityService,\n    private shipService: ShipService\n  ) { }\n\n  ngOnInit() {\n    this.saveSecurityModelSubscription = this.securityService.saveSecurityModelData$.subscribe(\n      data => {\n        this.securityModel = data;\n      }\n    );\n    this.saveIsscModelSubscription = this.securityService.saveIsscModelData$.subscribe(\n      data => {\n        this.isscModel = data;\n      }\n    );\n    this.saveShipModelSubscription = this.securityService.saveShipModelData$.subscribe(\n      data => {\n        this.shipModel = data;\n      }\n    );\n    this.allowSavingSubscription = this.securityService.allowSavingData$.subscribe(\n      data => {\n        this.allowSaving = data;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.saveSecurityModelSubscription.unsubscribe();\n    this.saveIsscModelSubscription.unsubscribe();\n    this.saveShipModelSubscription.unsubscribe();\n    this.allowSavingSubscription.unsubscribe();\n  }\n\n  saveSecurity() {\n    this.saving = true;\n    const dbSecurity = new FalSecurityModel();\n    const dbIssc = new InternationalShipSecurityCertificateModel();\n    if (this.isscModel.isscId) {\n      dbIssc.isscId = this.isscModel.isscId;\n    }\n    dbIssc.certificateNumber = this.isscModel.certificateNumber;\n    dbIssc.governmentIssuerId = this.isscModel.governmentIssuerId;\n    dbIssc.rsoIssuerId = this.isscModel.rsoIssuerId;\n    dbIssc.expiryDate = this.isscModel.expiryDate;\n    dbIssc.issuedByGovernment = this.isscModel.issuedByGovernment;\n    this.shipService.saveISSC(dbIssc).subscribe(\n      isscResult => {\n        if (!this.isscModel.isscId) {\n          this.shipService.updateShipISSC(this.shipModel.shipId, isscResult.isscId).subscribe(\n            shipIsscResult => {\n            }\n          );\n        }\n      }\n    );\n\n    if (this.securityModel.falSecurityId) {\n      dbSecurity.falSecurityId = this.securityModel.falSecurityId;\n    }\n    dbSecurity.portCallId = this.portCallId;\n    dbSecurity.securityLevelId = this.securityModel.securityLevelId;\n    dbSecurity.shipHasValidSspOnBoard = this.securityModel.shipHasValidSspOnBoard;\n    dbSecurity.otherRelatedInfo = this.securityModel.otherRelatedInfo;\n\n    if (this.securityModel.securityPreviousPortOfCall && this.securityModel.securityPreviousPortOfCall.length > 0) {\n      dbSecurity.securityPreviousPortOfCall = this.securityModel.securityPreviousPortOfCall.map(entry => {\n        const obj = new SecurityPreviousPortOfCallModel();\n        obj.locationId = entry.locationId;\n        obj.securityLevelId = entry.securityLevelId;\n        obj.arrivalDateTime = entry.arrivalDateTime;\n        obj.departureDateTime = entry.departureDateTime;\n        obj.sequenceNumber = entry.sequenceNumber;\n        obj.additionalSecurityMeasures = entry.additionalSecurityMeasures;\n        return obj;\n      });\n    }\n\n    if (this.securityModel.shipToShipActivity && this.securityModel.shipToShipActivity.length > 0) {\n      dbSecurity.shipToShipActivity = this.securityModel.shipToShipActivity.map(entry => {\n        const obj = new ShipToShipActivityModel();\n        obj.locationId = entry.locationId;\n        obj.activityTypeId = entry.activityTypeId;\n        obj.fromDate = entry.fromDate;\n        obj.toDate = entry.toDate;\n        obj.latitude = entry.latitude;\n        obj.longitude = entry.longitude;\n        obj.securityMeasuresAppliedInLieu = entry.securityMeasuresAppliedInLieu;\n        return obj;\n      });\n    }\n\n    const companySecurityOfficer: CompanySecurityOfficerModel = new CompanySecurityOfficerModel();\n    if (this.securityModel.companySecurityOfficer.companySecurityOfficerId) {\n      companySecurityOfficer.companySecurityOfficerId = this.securityModel.companySecurityOfficer.companySecurityOfficerId;\n    }\n    companySecurityOfficer.organizationId = this.securityModel.companySecurityOfficer.organizationId;\n    companySecurityOfficer.email = this.securityModel.companySecurityOfficer.email;\n    companySecurityOfficer.phoneNumber = this.securityModel.companySecurityOfficer.phoneNumber;\n    companySecurityOfficer.givenName = this.securityModel.companySecurityOfficer.givenName;\n    companySecurityOfficer.surname = this.securityModel.companySecurityOfficer.surname;\n    this.securityService.saveCompanySecurityOfficer(companySecurityOfficer).subscribe(\n      csoResult => {\n        dbSecurity.companySecurityOfficerId = csoResult.companySecurityOfficerId;\n        this.securityService.saveFalSecurity(dbSecurity).subscribe(\n          securityResult => {\n            this.saving = false;\n            this.securityService.setPristineData(true);\n            this.shipService.setIsscPristineData(true);\n            this.securityService.setAllowSavingData(false);\n          }, error => {\n            this.securityService.setPristineData(true);\n            this.shipService.setIsscPristineData(true);\n            this.securityService.setAllowSavingData(false);\n            this.saving = false;\n          }\n        );\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security-button/save-security-button.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security.component.css\n// module chunks = main","module.exports = \"<div class=\\\"alert alert-danger text-center\\\" *ngIf=\\\"!(securityDetailsIsValid && isscIsValid && csoIsValid && last10PortCallsIsValid && shipToShipActivityIsValid)\\\">\\n  <div *ngIf=\\\"!securityDetailsIsValid\\\">Error: information in 'Security Details' is incomplete.</div>\\n  <div *ngIf=\\\"!isscIsValid\\\">Error: information in 'International Ship Security Certificate' is incomplete.</div>\\n  <div *ngIf=\\\"!csoIsValid\\\">Error: information in 'Company Security Officer' is incomplete.</div>\\n  <div *ngIf=\\\"!last10PortCallsIsValid\\\">Error: information in 'Last 10 Port Calls' is incomplete.</div>\\n  <div *ngIf=\\\"!shipToShipActivityIsValid\\\">Error: information in 'Ship To Ship Activities' is incomplete.</div>\\n</div>\\n<div class=\\\"text-center\\\" *ngIf=\\\"securityIsPristine && isscIsPristine\\\">\\n  There are no unsaved changes in this page.\\n</div>\\n<app-save-security-button [portCallId]=\\\"portCallId\\\"></app-save-security-button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { CompanySecurityOfficerModel, FalSecurityModel, InternationalShipSecurityCertificateModel, SecurityPreviousPortOfCallModel, ShipModel, ShipToShipActivityModel } from 'app/shared/models/';\nimport { FalSecurityService, ShipService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-save-security',\n  templateUrl: './save-security.component.html',\n  styleUrls: ['./save-security.component.css']\n})\nexport class SaveSecurityComponent implements OnInit, OnDestroy {\n  @Input() securityModel: FalSecurityModel;\n  @Input() isscModel: InternationalShipSecurityCertificateModel;\n  @Input() shipModel: ShipModel;\n  @Input() portCallId: number;\n\n  pristineSecuritySubscription: Subscription;\n  pristineIsscSubscription: Subscription;\n  validSecurityDetailsSubscription: Subscription;\n  validCompanySecurityOfficerSubscription: Subscription;\n  validLast10PortCallsSubscription: Subscription;\n  validShipToShipActivitySubscription: Subscription;\n  validIsscDataSubscription: Subscription;\n\n  allowSaving = false;\n  securityIsPristine: boolean;\n  isscIsPristine: boolean;\n  securityDetailsIsValid: boolean;\n  csoIsValid: boolean;\n  last10PortCallsIsValid: boolean;\n  shipToShipActivityIsValid: boolean;\n  isscIsValid: boolean;\n\n  constructor(\n    private securityService: FalSecurityService,\n    private shipService: ShipService\n  ) { }\n\n  ngOnInit() {\n    this.pristineSecuritySubscription = this.securityService.pristineData$.subscribe(\n      data => {\n        this.securityIsPristine = data;\n        this.checkData();\n      }\n    );\n    this.pristineIsscSubscription = this.shipService.isscPristineData$.subscribe(\n      data => {\n        this.isscIsPristine = data;\n        this.checkData();\n      }\n    );\n    this.validSecurityDetailsSubscription = this.securityService.validSecurityDetailsData$.subscribe(\n      data => {\n        this.securityDetailsIsValid = data;\n        this.checkData();\n      }\n    );\n    this.validCompanySecurityOfficerSubscription = this.securityService.validCompanySecurityOfficerData$.subscribe(\n      data => {\n        this.csoIsValid = data;\n        this.checkData();\n      }\n    );\n    this.validLast10PortCallsSubscription = this.securityService.validLast10PortCallsData$.subscribe(\n      data => {\n        this.last10PortCallsIsValid = data;\n        this.checkData();\n      }\n    );\n    this.validShipToShipActivitySubscription = this.securityService.validShipToShipActivityData$.subscribe(\n      data => {\n        this.shipToShipActivityIsValid = data;\n        this.checkData();\n      }\n    );\n    this.validIsscDataSubscription = this.shipService.validIsscData$.subscribe(\n      data => {\n        this.isscIsValid = data;\n        this.checkData();\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.pristineIsscSubscription.unsubscribe();\n    this.pristineSecuritySubscription.unsubscribe();\n    this.validCompanySecurityOfficerSubscription.unsubscribe();\n    this.validIsscDataSubscription.unsubscribe();\n    this.validLast10PortCallsSubscription.unsubscribe();\n    this.validSecurityDetailsSubscription.unsubscribe();\n    this.validShipToShipActivitySubscription.unsubscribe();\n  }\n\n  /** Checks that all required information has been provided. */\n  checkData() {\n    this.allowSaving = !(this.securityIsPristine && this.isscIsPristine)\n      && this.securityDetailsIsValid && this.csoIsValid\n      && this.last10PortCallsIsValid && this.shipToShipActivityIsValid\n      && this.isscIsValid;\n    this.securityService.setSaveSecurityModelData(this.securityModel);\n    this.securityService.setSaveIsscModelData(this.isscModel);\n    this.securityService.setSaveShipModelData(this.shipModel);\n    this.securityService.setAllowSavingData(this.allowSaving);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/security/save-security/save-security.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/security-details/security-details.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/security-details/security-details.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"'Security Details'\\\" class=\\\"mb-3\\\">\\n  <form #form=\\\"ngForm\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"checkbox\\\">\\n          <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_has_valid_ssp_checkbox\\\">\\n            <input [(ngModel)]=\\\"formModel.shipHasValidSspOnBoard\\\" (change)=\\\"touchData()\\\" type=\\\"checkbox\\\" name=\\\"ship_has_valid_ssp_checkbox\\\"\\n              id=\\\"ship_has_valid_ssp_checkbox\\\"> The ship has a valid Ship Security Plan (SSP) on board\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"security_level_select\\\">Security Level at which the ship is currently\\n          operating\\n        </label>\\n        <ng-select id=\\\"security_level_select\\\" name=\\\"security_level_select\\\" [items]=\\\"securityLevelList\\\" bindLabel=\\\"name\\\" bindValue=\\\"securityLevelId\\\"\\n          placeholder=\\\"Select security level...\\\" [(ngModel)]=\\\"formModel.securityLevelId\\\" (change)=\\\"touchData()\\\"></ng-select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"other_related_info\\\">(Optional) Additional information</label>\\n        <textarea [(ngModel)]=\\\"formModel.otherRelatedInfo\\\" (change)=\\\"touchData()\\\" class=\\\"form-control form-control-sm\\\" id=\\\"other_related_info\\\"\\n          name=\\\"other_related_info\\\" rows=\\\"6\\\" placeholder=\\\"If there are any other security-related matters you wish to report, you can provide them here.\\\"></textarea>\\n      </div>\\n    </div>\\n  </form>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/security-details/security-details.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/security-details/security-details.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FalSecurityModel, SecurityLevelModel } from 'app/shared/models/';\nimport { FalSecurityService } from 'app/shared/services/fal-security.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-security-details',\n  templateUrl: './security-details.component.html',\n  styleUrls: ['./security-details.component.css']\n})\nexport class SecurityDetailsComponent implements OnInit, OnDestroy {\n  @Input() formModel: FalSecurityModel;\n  securityLevelList: SecurityLevelModel[];\n\n  // Subscriptions\n  getSecurityLevelListSubscription: Subscription;\n\n  constructor(\n    private securityService: FalSecurityService\n  ) { }\n\n  ngOnInit() {\n    this.validateData();\n    this.getSecurityLevelListSubscription = this.securityService.getSecurityLevelList().subscribe(\n      data => {\n        this.securityLevelList = data;\n      }, error => {\n        console.error(error);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.getSecurityLevelListSubscription.unsubscribe();\n  }\n\n  /** Called whenever a change is made to the formModel in the form. */\n  touchData() {\n    this.securityService.setPristineData(false);\n    this.validateData();\n  }\n\n  /** Checks that information required for saving is present. */\n  private validateData() {\n    this.securityService.setValidSecurityDetailsData(this.dataIsValid());\n  }\n\n  private dataIsValid(): boolean {\n    return this.formModel != null\n      && this.formModel.securityLevelId != null;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/security/security-details/security-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/security.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/security.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"isInitialized\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-security-details [formModel]=\\\"securityModel\\\"></app-security-details>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-issc [isscModel]=\\\"shipModel.issc\\\"></app-issc>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-company-security-officer [csoModel]=\\\"securityModel.companySecurityOfficer\\\"></app-company-security-officer>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-last-10-port-calls [portCallList]=\\\"securityModel.securityPreviousPortOfCall\\\"></app-last-10-port-calls>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ship-to-ship-activity [shipToShipActivityList]=\\\"securityModel.shipToShipActivity\\\"></app-ship-to-ship-activity>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ssn-card [header]=\\\"'Save Security/ISPS'\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"text-center\\\">\\n              <app-save-security [securityModel]=\\\"securityModel\\\" [shipModel]=\\\"shipModel\\\" [isscModel]=\\\"shipModel.issc\\\" [portCallId]=\\\"portCallId\\\"></app-save-security>\\n            </div>\\n          </div>\\n        </div>\\n      </app-ssn-card>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/security.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/security.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { CompanySecurityOfficerModel, FalSecurityModel, InternationalShipSecurityCertificateModel, ShipModel } from 'app/shared/models/';\n\n@Component({\n  selector: 'app-security',\n  templateUrl: './security.component.html',\n  styleUrls: ['./security.component.css']\n})\nexport class SecurityComponent implements OnInit, OnDestroy {\n  @Input() securityModel: FalSecurityModel = new FalSecurityModel();\n  @Input() shipModel: ShipModel;\n  @Input() portCallId: number;\n  isInitialized = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.isInitialized = false;\n    if (!this.securityModel.companySecurityOfficer) {\n      this.securityModel.companySecurityOfficer = new CompanySecurityOfficerModel();\n    }\n    if (!this.securityModel.securityPreviousPortOfCall) {\n      this.securityModel.securityPreviousPortOfCall = [];\n    }\n    if (!this.securityModel.shipToShipActivity) {\n      this.securityModel.shipToShipActivity = [];\n    }\n    if (!this.shipModel.issc) {\n      this.shipModel.issc = new InternationalShipSecurityCertificateModel();\n    }\n    this.isInitialized = true;\n  }\n\n  ngOnDestroy() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/security/security.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity-table/ship-to-ship-activity-table.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity-table/ship-to-ship-activity-table.component.css\n// module chunks = main","module.exports = \"<table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n  <thead class=\\\"bg-ssn text-white\\\">\\n    <tr>\\n      <th class=\\\"py-1\\\">\\n        <h5 class=\\\"mb-0\\\">Ship To Ship Activities</h5>\\n      </th>\\n    </tr>\\n  </thead>\\n</table>\\n<div class=\\\"table-responsive\\\">\\n  <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"tableDataSource\\\"></ng2-smart-table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity-table/ship-to-ship-activity-table.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity-table/ship-to-ship-activity-table.component.html\n// module chunks = main","import { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { DeleteButtonComponent } from 'app/shared/components/delete-button/delete-button.component';\nimport { ShipToShipActivityModel } from 'app/shared/models/ship-to-ship-activity-model';\nimport { LocalDataSource } from 'ng2-smart-table';\n\n@Component({\n  selector: 'app-ship-to-ship-activity-table',\n  templateUrl: './ship-to-ship-activity-table.component.html',\n  styleUrls: ['./ship-to-ship-activity-table.component.css'],\n  providers: [DatePipe]\n})\nexport class ShipToShipActivityTableComponent implements OnInit, OnChanges {\n  @Input() tableEntryList: ShipToShipActivityModel[] = [];\n  @Output() delete = new EventEmitter<any>();\n\n  tableDataSource: LocalDataSource = new LocalDataSource();\n\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'No entries have been added yet.',\n\n    columns: {\n      location: {\n        title: 'Location',\n        type: 'html'\n      },\n      fromDate: {\n        title: 'From Date',\n        type: 'html',\n        sortDirection: 'desc'\n      },\n      toDate: {\n        title: 'To Date',\n        type: 'html'\n      },\n      activityType: {\n        title: 'Activity',\n        type: 'html'\n      },\n      delete: {\n        title: 'Delete',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: DeleteButtonComponent,\n        onComponentInitFunction: (instance) => {\n          instance.delete.subscribe(row => {\n            this.deleteShipActivity(row);\n          });\n        }\n      }\n    }\n  };\n\n  constructor(\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit() {\n    if (this.tableEntryList && this.tableEntryList.length > 0) {\n      const rows = this.generateRows();\n      this.tableDataSource.load(rows);\n    } else {\n      this.tableDataSource.load([]);\n    }\n  }\n\n  /** Called whenever a change is made to the tableEntryList input. */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.tableEntryList && this.tableEntryList.length > 0) {\n      const rows = this.generateRows();\n      this.tableDataSource.load(rows);\n    } else {\n      this.tableDataSource.load([]);\n    }\n  }\n\n  /** Emits event to parent component telling it to remove an entry from the table. */\n  deleteShipActivity(row) {\n    this.delete.emit(row);\n  }\n\n  /** Maps content of tableEntryList to a format compatible with tableSettings. */\n  generateRows() {\n    const rowData = this.tableEntryList.map(shipActivity => {\n      return {\n        shipToShipActivity: shipActivity,\n        location: (shipActivity.location != null) ? shipActivity.location.name : '',\n        fromDate: `<span class=\"no-wrap\">` +\n          this.datePipe.transform(shipActivity.fromDate, 'yyyy-MM-dd') +\n          `</span> <span class=\"no-wrap\">` +\n          this.datePipe.transform(shipActivity.fromDate, 'HH:mm') +\n          `</span>`,\n        toDate: `<span class=\"no-wrap\">` +\n          this.datePipe.transform(shipActivity.toDate, 'yyyy-MM-dd') +\n          `</span> <span class=\"no-wrap\">` +\n          this.datePipe.transform(shipActivity.toDate, 'HH:mm') +\n          `</span>`,\n        activityType: shipActivity.activityType.name,\n      };\n    });\n    return rowData;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity-table/ship-to-ship-activity-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"'Ship To Ship Activities'\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"text-center mb-1\\\">\\n        <span>Select a port by searching for it by name or LOCODE.</span>\\n      </div>\\n      <app-search-location *ngIf=\\\"!locationFound\\\" [restrictTypeHarbour]=true (locationResult)=\\\"onLocationResult($event)\\\"></app-search-location>\\n      <div class=\\\"text-center\\\" *ngIf=\\\"locationFound\\\">\\n        <app-ssn-table [entryData]=\\\"locationData\\\"></app-ssn-table>\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectLocation()\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <label for=\\\"latitude\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\"> Latitude:</label>\\n      <input id=\\\"latitude\\\" [(ngModel)]=\\\"formModel.latitude\\\" type=\\\"number\\\" max=\\\"90\\\" min=\\\"-90\\\" step=\\\"0.0001\\\" class=\\\"form-control form-control-sm\\\"\\n      />\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <label for=\\\"longitude\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Longitude:</label>\\n      <input id=\\\"longitude\\\" [(ngModel)]=\\\"formModel.longitude\\\" type=\\\"number\\\" max=\\\"180\\\" min=\\\"-180\\\" step=\\\"0.00001\\\" class=\\\"form-control form-control-sm\\\"\\n      />\\n    </div>\\n\\n  </div>\\n\\n\\n  <div class=\\\"row mb-1\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <app-date-time-picker [header]=\\\"'From Date'\\\" [dateTimeModel]=\\\"fromDateModel\\\" (dateTimeResult)=\\\"onFromDateResult($event)\\\"></app-date-time-picker>\\n      <app-date-time-picker [header]=\\\"'To Date'\\\" [dateTimeModel]=\\\"toDateModel\\\" (dateTimeResult)=\\\"onToDateResult($event)\\\"></app-date-time-picker>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"mb-2\\\">\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"activity_type_select\\\">Activity</label>\\n        <ng-select id=\\\"activity_type_select\\\" [items]=\\\"activityTypeList\\\" bindLabel=\\\"name\\\" [ngModel]=\\\"formModel.activityType\\\" placeholder=\\\"Select activity...\\\"\\n          (change)=\\\"onActivityTypeResult($event)\\\"></ng-select>\\n      </div>\\n      <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"security_measures_applied_in_lieu\\\">(Optional) Security measures\\n        applied in lieu</label>\\n      <textarea [(ngModel)]=\\\"formModel.securityMeasuresAppliedInLieu\\\" class=\\\"form-control form-control-sm\\\" id=\\\"security_measures_applied_in_lieu\\\"\\n        rows=\\\"6\\\" placeholder=\\\"Please describe any security measures applied in lieu of procedures specified in the SSP.\\\"></textarea>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"alert alert-danger text-center\\\" *ngIf=\\\"fromDateIsAfterToDateError\\\">\\n    <div *ngIf=\\\"fromDateIsAfterToDateError\\\">Error: 'to date' must be after 'from date'.</div>\\n  </div>\\n\\n  <div class=\\\"row text-center mb-1\\\">\\n    <div class=\\\"col\\\">\\n      <div *ngIf=\\\"!fromDateIsAfterToDateError && formModel.fromDate && formModel.toDate && formModel.activityType && formModel.activityTypeId\\\">\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"addShipToShipActivity()\\\">\\n          <span> Add Entry</span>\\n        </button>\\n      </div>\\n      <div *ngIf=\\\"!(!fromDateIsAfterToDateError && formModel.fromDate && formModel.toDate && formModel.activityType && formModel.activityTypeId)\\\">\\n        <button class=\\\"btn btn-ssn\\\" disabled>\\n          <span> Add Entry</span>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ship-to-ship-activity-table [tableEntryList]=\\\"shipToShipActivityListDeepCopy\\\" (delete)=\\\"onDeleteShipToShipActivity($event)\\\"></app-ship-to-ship-activity-table>\\n    </div>\\n  </div>\\n\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbDate } from '../../../../../../../../../node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\nimport { NgbTime } from '../../../../../../../../../node_modules/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\nimport { Subscription } from '../../../../../../../../../node_modules/rxjs';\nimport { LocationProperties } from '../../../../../../../shared/constants/location-properties';\nimport { DateTime } from '../../../../../../../shared/interfaces/dateTime.interface';\nimport { PortCallPurposeModel } from '../../../../../../../shared/models/port-call-purpose-model';\nimport { ShipToShipActivityModel } from '../../../../../../../shared/models/ship-to-ship-activity-model';\nimport { FalSecurityService, PurposeService,  } from '../../../../../../../shared/services/';\n\n@Component({\n  selector: 'app-ship-to-ship-activity',\n  templateUrl: './ship-to-ship-activity.component.html',\n  styleUrls: ['./ship-to-ship-activity.component.css'],\n  providers: [PurposeService]\n})\nexport class ShipToShipActivityComponent implements OnInit, OnDestroy {\n\n  @Input() shipToShipActivityList: ShipToShipActivityModel[];\n  shipToShipActivityListDeepCopy: ShipToShipActivityModel[] = [];\n  formModel: ShipToShipActivityModel = new ShipToShipActivityModel();\n  latitudeDirection = 1;\n  longitudeDirection = 1;\n  locationFound = false;\n  locationData = new LocationProperties().getPropertyList();\n  fromDateModel: DateTime = {\n    date: null,\n    time: new NgbTime(0, 0, 0)\n  };\n  toDateModel: DateTime = {\n    date: null,\n    time: new NgbTime(0, 0, 0)\n  };\n  activityTypeList: PortCallPurposeModel[] = [];\n  activityTypeListSubscription: Subscription;\n\n  fromDateIsAfterToDateError = false;\n\n  constructor(\n    private securityService: FalSecurityService,\n    private purposeService: PurposeService\n  ) { }\n\n  ngOnInit() {\n    this.validateData();\n    this.shipToShipActivityListDeepCopy = JSON.parse(JSON.stringify(this.shipToShipActivityList));\n    this.activityTypeListSubscription = this.purposeService.getPurposes().subscribe(\n      result => {\n        this.activityTypeList = result;\n      }, error => {\n        console.log(error);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.activityTypeListSubscription.unsubscribe();\n  }\n\n  /** Sorts list by fromDate (most recent first) */\n  sortList() {\n    if (this.shipToShipActivityList.length > 0) {\n      this.shipToShipActivityList.sort((entry1, entry2) => {\n        const date1 = new Date(entry1.fromDate);\n        const date2 = new Date(entry2.fromDate);\n        return date2.getTime() - date1.getTime();\n      });\n    }\n  }\n\n  addShipToShipActivity() {\n    this.validateDateTime();\n    const shipToShipActivityCopy = JSON.parse(JSON.stringify(this.formModel));\n    this.shipToShipActivityList.push(shipToShipActivityCopy);\n    this.touchData();\n    this.resetModel();\n  }\n\n  /** Called on (delete) output from ship-to-ship-activity-table component */\n  onDeleteShipToShipActivity(row) {\n    const index = this.shipToShipActivityListDeepCopy.findIndex(entry => entry.fromDate === row.shipToShipActivity.fromDate);\n    if (index !== -1) {\n      this.shipToShipActivityList.splice(index, 1);\n    }\n    this.touchData();\n  }\n\n  onFromDateResult(fromDateResult) {\n    if (fromDateResult) {\n      this.fromDateModel = fromDateResult;\n      this.formModel.fromDate = new Date(this.fromDateModel.date.year, this.fromDateModel.date.month - 1, this.fromDateModel.date.day, this.fromDateModel.time.hour, this.fromDateModel.time.minute);\n    }\n    this.validateDateTime();\n  }\n\n  onToDateResult(toDateResult) {\n    if (toDateResult) {\n      this.toDateModel = toDateResult;\n      this.formModel.toDate = new Date(this.toDateModel.date.year, this.toDateModel.date.month - 1, this.toDateModel.date.day, this.toDateModel.time.hour, this.toDateModel.time.minute);\n    }\n    this.validateDateTime();\n  }\n\n  /** Not currently in use. */\n  onLatitudeInput(latitudeResult) {\n    this.formModel.latitude = latitudeResult * this.latitudeDirection;\n  }\n\n  /** Not currently in use. */\n  onLongitudeInput(longitudeResult) {\n    this.formModel.longitude = longitudeResult * this.longitudeDirection;\n  }\n\n  onLocationResult(locationResult) {\n    this.formModel.locationId = locationResult.locationId;\n    this.formModel.location = locationResult;\n    LocationProperties.setLocationData(this.locationData, this.formModel.location);\n    if (this.formModel.location.country) {\n      const twoCharCode = this.formModel.location.country.twoCharCode.toLowerCase() || 'xx';\n      const countryFlag = twoCharCode + '.png';\n      LocationProperties.setCountry(this.locationData, this.formModel.location.country.name, countryFlag);\n    }\n    this.locationFound = true;\n  }\n\n  deselectLocation() {\n    this.locationFound = false;\n    this.formModel.locationId = null;\n    this.formModel.location = null;\n  }\n\n  onActivityTypeResult(activityType) {\n    this.formModel.activityType = activityType;\n    this.formModel.activityTypeId = activityType.portCallPurposeId;\n  }\n\n  /** Resets formModel so input fields are cleared. Called whenever a table entry is added. */\n  private resetModel() {\n    this.locationFound = false;\n    this.fromDateModel = {\n      date: null,\n      time: new NgbTime(0, 0, 0)\n    };\n    this.toDateModel = {\n      date: null,\n      time: new NgbTime(0, 0, 0)\n    };\n    this.formModel = new ShipToShipActivityModel();\n  }\n\n  /** Checks for consistency error in fromDate/toDate of the formModel. Can potentially be expanded (see: last-10-port-calls component). */\n  private validateDateTime() {\n    if (this.fromDateModel && this.fromDateModel.date && this.toDateModel && this.toDateModel.date) {\n      this.fromDateIsAfterToDateError = this.isAfter(this.fromDateModel, this.toDateModel);\n    } else {\n      this.fromDateIsAfterToDateError = false;\n    }\n  }\n\n  /** Not currently in use, can be useful if more date validation is added (see: last-10-port-calls component). */\n  private dateStringToDateTime(dateString) {\n    const date = new Date(dateString);\n    const dateTime: DateTime = {\n      date: new NgbDate(date.getFullYear(), date.getMonth() + 1, date.getDate()),\n      time: new NgbTime(date.getHours(), date.getMinutes(), 0)\n    };\n    return dateTime;\n  }\n\n  /** Checks if one DateTime (dt1) is after another (dt2). */\n  private isAfter(dt1: DateTime, dt2: DateTime) {\n    if (dt1.date && dt2.date) {\n      const dt1Date = new NgbDate(dt1.date.year, dt1.date.month, dt1.date.day);\n      const dt2Date = new NgbDate(dt2.date.year, dt2.date.month, dt2.date.day);\n      if (dt1Date.after(dt2Date)) {\n        return true;\n      }\n      if (dt1Date.equals(dt2Date)) {\n        if (dt1.time.hour > dt2.time.hour || (dt1.time.hour === dt2.time.hour && dt1.time.minute >= dt2.time.minute)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /** Called whenever a table entry is added or removed. */\n  private touchData() {\n    this.sortList();\n    this.shipToShipActivityListDeepCopy = JSON.parse(JSON.stringify(this.shipToShipActivityList));\n    this.securityService.setPristineData(false);\n    this.validateData();\n  }\n\n  /** Checks that information required for saving is present. */\n  private validateData() {\n    this.securityService.setValidShipToShipActivityData(this.dataIsValid());\n  }\n\n  private dataIsValid() {\n    return true; // can potentially be replaced with 'this.shipToShipActivityList.length >= 10'\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/security/ship-to-ship-activity/ship-to-ship-activity.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/shared/date-picker/date-picker.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/shared/date-picker/date-picker.component.css\n// module chunks = main","module.exports = \"<div class=\\\"input-group\\\">\\n  <div class=\\\"input-group-prepend\\\">\\n    <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"doB.toggle()\\\" type=\\\"button\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/calendar.png\\\" height=\\\"20px\\\" />\\n    </button>\\n  </div>\\n  <input id=\\\"doB\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"doB\\\" [showWeekNumbers]=\\\"true\\\"\\n    [(ngModel)]=\\\"dateModel\\\" ngbDatepicker [minDate]=\\\"{year: 1890, month: 1, day: 1}\\\" [maxDate]=\\\"{year: 2150, month: 12, day: 31}\\\" #doB=\\\"ngbDatepicker\\\" (ngModelChange)=\\\"dateChanged($event)\\\">\\n</div>\\n<div *ngIf=\\\"!validDateFormat\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n  <li>\\n    <small>Invalid date format.</small>\\n  </li>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/shared/date-picker/date-picker.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/shared/date-picker/date-picker.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\n\n@Component({\n  selector: 'app-date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.css']\n})\nexport class DatePickerComponent implements OnInit {\n\n  @Input() dateInput: any;\n\n  @Output() dateResult: EventEmitter<any> = new EventEmitter();\n  @Output() outputValidDateFormat: EventEmitter<boolean> = new EventEmitter();\n\n  dateModel: NgbDate = new NgbDate(null, null, null);\n\n  validDateFormat = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (this.dateInput != null) {\n      this.dateModel = this.dateInput;\n    }\n  }\n\n  /** Runs every time the user changes the date in the input field. */\n  dateChanged($event): void {\n    this.validDateFormat = this.hasValidDateFormat($event);\n    this.dateModel = $event;\n    this.persistData();\n  }\n\n  private persistData() {\n    if (this.validDateFormat) {\n      this.dateResult.emit(this.dateModel);\n    } else {\n      this.dateResult.emit(null);\n    }\n  }\n\n  private hasValidDateFormat($event) {\n    return typeof $event !== 'string';\n  }\n\n  getNgbDateFormat(date) {\n    if (date) {\n      return new NgbDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\n    } else {\n      return '';\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/shared/date-picker/date-picker.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Save Ship Stores\\\" icon=\\\"save.png\\\">\\n  <div class=\\\"text-center\\\" *ngIf=\\\"!listIsPristine\\\">\\n      <span>You have unsaved changes.</span>\\n      <br>\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"saveShipStores()\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n      <span>Save Ship Stores</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"text-center\\\" *ngIf=\\\"listIsPristine\\\">\\n    <span>There is nothing to save.</span>\\n    <br>\\n    <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n      <span>Save Ship Stores</span>\\n    </button>\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ShipStoresModel } from 'app/shared/models/ship-stores-model';\nimport { FalShipStoresService, PortCallService } from 'app/shared/services/';\n\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-save-ship-stores',\n  templateUrl: './save-ship-stores.component.html',\n  styleUrls: ['./save-ship-stores.component.css']\n})\nexport class SaveShipStoresComponent implements OnInit, OnDestroy {\n\n  @Input() portCallId: number;\n\n  shipStoresModel: ShipStoresModel = new ShipStoresModel();\n  reportingModel: any;\n\n  shipStoresList: ShipStoresModel[] = [];\n\n  listIsPristine: Boolean = true;\n\n  shipStoresListSubscription: Subscription;\n\n  saving = false;\n\n  constructor(\n    private shipStoresService: FalShipStoresService,\n    private portCallService: PortCallService\n  ) { }\n\n  ngOnInit() {\n    // Get updated list of ship stores\n    this.shipStoresListSubscription = this.shipStoresService.shipStoresList$.subscribe(shipStoresList => {\n      if (shipStoresList) {\n        this.shipStoresList = shipStoresList;\n      }\n\n      this.shipStoresService.dataIsPristine$.subscribe(isPristine => {\n        this.listIsPristine = isPristine;\n      });\n\n    });\n  }\n\n  ngOnDestroy() {\n    this.shipStoresListSubscription.unsubscribe();\n  }\n\n  saveShipStores() {\n    this.saving = true;\n    const formattedShipStoresList = this.shipStoresService.formatShipStores(this.shipStoresList);\n    this.shipStoresService.saveShipStores(formattedShipStoresList, this.portCallId).subscribe(\n      res => {\n        this.shipStoresService.setDataIsPristine(true);\n        this.saving = false;\n      },\n      error => {\n        this.saving = false;\n        console.log(error);\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.ts","module.exports = \".modal-body ::ng-deep .ng-select-placeholder-sm, ::-webkit-input-placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n  \\n  .modal-body ::ng-deep .ng-select-placeholder-sm, :-ms-input-placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n  \\n  .modal-body ::ng-deep .ng-select-placeholder-sm, ::-ms-input-placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n  \\n  .modal-body ::ng-deep .ng-select-placeholder-sm, ::placeholder {\\n    font-size: 0.875rem;\\n    height: 31px;\\n  }\\n  \\n  .modal-body ::ng-deep .ng-placeholder, ::-webkit-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n  \\n  .modal-body ::ng-deep .ng-placeholder, :-ms-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n  \\n  .modal-body ::ng-deep .ng-placeholder, ::-ms-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n  \\n  .modal-body ::ng-deep .ng-placeholder, ::placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n  \\n  .modal-body ::ng-deep .ng-input {\\n    height: 21px;\\n  }\\n  \\n  .modal-body ::ng-deep .ng-select .ng-select-container {\\n    min-height: 31px;\\n    height: 31px;\\n    border-radius: .2rem;\\n    border-color: #ced4da;\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores-modal/ship-stores-modal.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores-modal/ship-stores-modal.component.css\n// module chunks = main","module.exports = \"<ng-template #viewModal let-close=\\\"close()\\\" class=\\\"modal fade\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">View</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"resetInputShipStoresModel(); close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\" *ngIf=\\\"inputShipStoresModel\\\">\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Article Name *</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [ngModel]=\\\"inputShipStoresModel.articleName\\\" readonly name=\\\"articleName\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Measurement Type</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input *ngIf=\\\"inputShipStoresModel.measurementType\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [ngModel]=\\\"inputShipStoresModel.measurementType.name\\\"\\n          readonly name=\\\"measurementType\\\">\\n        <input *ngIf=\\\"!inputShipStoresModel.measurementType\\\" class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" readonly name=\\\"measurementType\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Quantity</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [ngModel]=\\\"inputShipStoresModel.quantity\\\" readonly name=\\\"quantity\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Location on Board</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [ngModel]=\\\"inputShipStoresModel.locationOnBoard\\\" readonly name=\\\"locationOnBoard\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Location on Board Code</label>\\n      <div class=\\\"col my-auto\\\">\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [ngModel]=\\\"inputShipStoresModel.locationOnBoardCode\\\" readonly name=\\\"locationOnBoardCode\\\">\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"resetInputShipStoresModel(); close\\\">\\n      <span>Exit</span>\\n    </button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #editModal let-close=\\\"close()\\\" class=\\\"modal fade\\\">\\n  <form #editForm=\\\"ngForm\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Edit</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"resetInputShipStoresModel(); close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"modal-body\\\" *ngIf=\\\"inputShipStoresModel\\\">\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Article Name *</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input type=\\\"text\\\" required [(ngModel)]=\\\"inputShipStoresModel.articleName\\\" #articleName=\\\"ngModel\\\" placeholder=\\\"Article Name\\\"\\n            class=\\\"form-control form-control-sm\\\" name=\\\"articleName\\\">\\n          <div *ngIf=\\\"articleName.hasError('required') && articleName.touched\\\" class=\\\"alert alert-danger\\\">\\n            <li>\\n              <small>This field is required.</small>\\n            </li>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Measurement Type</label>\\n        <div class=\\\"col my-auto\\\">\\n          <ng-select class=\\\"ng-select-placeholder-sm\\\" [items]=\\\"measurementTypeList\\\" [ngModel]=\\\"inputShipStoresModel.measurementType\\\"\\n            name=\\\"measurementType\\\" bindLabel=\\\"name\\\" [closeOnSelect]=\\\"true\\\" placeholder=\\\"Measurement Type\\\" (change)=\\\"setMeasurementType($event)\\\">\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Quantity</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input type=\\\"number\\\" [(ngModel)]=\\\"inputShipStoresModel.quantity\\\" #quantity=\\\"ngModel\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control form-control-sm\\\"\\n            integerValidator positiveNumberValidator name=\\\"quantity\\\">\\n          <div *ngIf=\\\"!quantity.valid && quantity.touched\\\" class=\\\"alert alert-danger\\\">\\n            <li *ngIf=\\\"quantity.hasError('notIntegerError')\\\">\\n              <small>The quantity specified must be an integer.</small>\\n            </li>\\n            <li *ngIf=\\\"quantity.hasError('notPositiveNumberError')\\\">\\n              <small>The quantity specified must be a positive number.</small>\\n            </li>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Location on Board</label>\\n        <div class=\\\"col my-auto\\\">\\n          <textarea type=\\\"text\\\" [(ngModel)]=\\\"inputShipStoresModel.locationOnBoard\\\" #locationOnBoard=\\\"ngModel\\\" placeholder=\\\"Location on Board\\\"\\n            class=\\\"form-control form-control-sm\\\" name=\\\"locationOnBoard\\\">\\n          </textarea>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col col-form-label-sm no-wrap mb-0\\\">Location on Board Code</label>\\n        <div class=\\\"col my-auto\\\">\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"inputShipStoresModel.locationOnBoardCode\\\" #locationOnBoardCode=\\\"ngModel\\\" placeholder=\\\"Location on Board Code\\\"\\n            class=\\\"form-control form-control-sm\\\" name=\\\"locationOnBoardCode\\\">\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"modal-footer\\\">\\n      <button *ngIf=\\\"editForm.valid && editForm.form.dirty\\\" type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"editShipStoresItem(); editForm.reset(); close\\\">\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span>Save Entry</span>\\n      </button>\\n      <button *ngIf=\\\"!editForm.valid || !editForm.form.dirty\\\" type=\\\"button\\\" class=\\\"btn btn-ssn\\\" disabled>\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n        <span>Save Entry</span>\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"resetInputShipStoresModel($event); close\\\">\\n        <span>Cancel</span>\\n      </button>\\n    </div>\\n  </form>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores-modal/ship-stores-modal.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores-modal/ship-stores-modal.component.html\n// module chunks = main","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { MeasurementTypeModel, ShipStoresModel } from 'app/shared/models/';\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\n\n@Component({\n  selector: 'app-ship-stores-modal',\n  templateUrl: './ship-stores-modal.component.html',\n  styleUrls: ['./ship-stores-modal.component.css']\n})\nexport class ShipStoresModalComponent implements OnInit {\n  inputShipStoresModel: ShipStoresModel;\n  startInputShipStoresModel: ShipStoresModel;\n\n  measurementTypeList: MeasurementTypeModel[];\n\n  shipStoresModel: ShipStoresModel = new ShipStoresModel();\n  @Output() outputShipStoresModel: EventEmitter<ShipStoresModel> = new EventEmitter();\n\n  @ViewChild('viewModal') viewModal;\n  @ViewChild('editModal') editModal;\n  dirtyForm = false;\n\n\n  constructor(\n    private modalService: NgbModal,\n    private shipStoresService: FalShipStoresService\n  ) { }\n\n  ngOnInit() {\n    this.inputShipStoresModel = new ShipStoresModel();\n\n    this.shipStoresService.getMeasurementTypeList().subscribe(measurementTypes => {\n      this.measurementTypeList = measurementTypes;\n    });\n  }\n\n  // Open modals\n  openViewModal(shipStoresModel: ShipStoresModel) {\n    this.inputShipStoresModel = JSON.parse(JSON.stringify(shipStoresModel));\n    this.modalService.open(this.viewModal);\n  }\n\n  openEditModal(shipStoresModel: ShipStoresModel) {\n    // Set model to modify\n    this.inputShipStoresModel = JSON.parse(JSON.stringify(shipStoresModel));\n    // Set model to fall back to\n    this.shipStoresModel = JSON.parse(JSON.stringify(shipStoresModel));\n\n    this.modalService.open(this.editModal, {\n      backdrop: 'static'\n    });\n  }\n\n  // Output\n  editShipStoresItem() {\n    this.outputShipStoresModel.emit(this.inputShipStoresModel);\n  }\n\n  resetInputShipStoresModel() {\n    this.inputShipStoresModel = JSON.parse(JSON.stringify(this.shipStoresModel));\n  }\n\n  setMeasurementType($event) {\n    if (typeof $event !== 'undefined') {\n      this.inputShipStoresModel.measurementType = $event;\n      this.inputShipStoresModel.measurementTypeId = $event.measurementTypeId;\n    } else {\n      this.inputShipStoresModel.measurementType = null;\n      this.inputShipStoresModel.measurementTypeId = null;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores-modal/ship-stores-modal.component.ts","module.exports = \"/* Smart table */\\n:root {\\n  --color-primary: #002d50;\\n  --color-primary-light: #37557c;\\n  --color-primary-dark: #000128;\\n  --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n  background-color: var(--color-primary);\\n  color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n  color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n  content: \\\"\\\";\\n  display: inline-block;\\n  width: 0;\\n  height: 0;\\n  border-bottom: 4px solid white;\\n  border-top: 4px solid transparent;\\n  border-left: 4px solid transparent;\\n  border-right: 4px solid transparent;\\n  -webkit-transform: rotate(90deg);\\n          transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n  border-bottom: 4px solid white;\\n  -webkit-transform: rotate(0deg);\\n          transform: rotate(0deg);\\n  margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n  border-bottom: 4px solid white;\\n  -webkit-transform: rotate(180deg);\\n          transform: rotate(180deg);\\n  margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a {\\n  color: var(--color-primary-text);\\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {\\n  color: var(--color-primary-dark);\\n  border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link {\\n  color: var(--color-primary-dark);\\n  background-color: #dee2e6;\\n  border-color: #dee2e6;\\n}\\n:host /deep/ tbody > tr > td.ng2-smart-actions > a {\\n  color: var(--color-primary-dark);\\n}\\n:host /deep/ ng2-st-tbody-edit-delete > a,\\n:host /deep/ ng2-st-tbody-create-cancel > a {\\n  color: var(--color-primary);\\n}\\n#measurementTypes {\\n  font-size: 0.875rem;\\n  height: 31px;\\n}\\n:host /deep/ .ng-placeholder, ::-webkit-input-placeholder  {\\n    color: gray !important;\\n    font-style: italic;\\n}\\n:host /deep/ .ng-placeholder, :-ms-input-placeholder  {\\n    color: gray !important;\\n    font-style: italic;\\n}\\n:host /deep/ .ng-placeholder, ::-ms-input-placeholder  {\\n    color: gray !important;\\n    font-style: italic;\\n}\\n:host /deep/ .ng-placeholder, ::placeholder  {\\n    color: gray !important;\\n    font-style: italic;\\n}\\n:host /deep/ .ng-input {\\n  height: 21px;\\n}\\n:host /deep/ .ng-select .ng-select-container{\\n  min-height: 31px;\\n  height: 31px;\\n}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Ship Stores List\\\" icon=\\\"alcohol.png\\\">\\n\\n    <form>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col my-auto\\\">\\n                        <label for=\\\"articleName\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Article Name *</label>\\n                        <input type=\\\"text\\\" required [(ngModel)]=\\\"shipStoresModel.articleName\\\" #articleName=\\\"ngModel\\\"\\n                            placeholder=\\\"Article Name\\\" class=\\\"form-control form-control-sm\\\" name=\\\"articleName\\\">\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"articleName.hasError('required') && articleName.touched\\\" class=\\\"alert alert-danger\\\">\\n                    <li>\\n                        <small>This field is required.</small>\\n                    </li>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col my-auto\\\">\\n                        <label for=\\\"measurementType\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Measurement Type</label>\\n                        <ng-select id=\\\"measurementTypes\\\" [items]=\\\"measurementTypeList\\\" [ngModel]=\\\"shipStoresModel.measurementType\\\"\\n                            name=\\\"measurementType\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Measurement Type\\\"\\n                            (change)=\\\"selectMeasurementType($event)\\\">\\n                        </ng-select>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col my-auto\\\">\\n                        <label for=\\\"locationOnBoardCode\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Location on Board Code</label>\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"shipStoresModel.locationOnBoardCode\\\" #locationOnBoardCode=\\\"ngModel\\\"\\n                            placeholder=\\\"Location on Board Code\\\" class=\\\"form-control form-control-sm\\\" name=\\\"locationOnBoardCode\\\">\\n                    </div>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\n\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col my-auto\\\">\\n                        <label for=\\\"quantity\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Quantity</label>\\n                        <input type=\\\"number\\\" [(ngModel)]=\\\"shipStoresModel.quantity\\\" #quantity=\\\"ngModel\\\" placeholder=\\\"Quantity\\\"\\n                            class=\\\"form-control form-control-sm\\\" integerValidator positiveNumberValidator name=\\\"quantity\\\">\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\\"!quantity.valid\\\" class=\\\"alert alert-danger\\\">\\n                    <li *ngIf=\\\"quantity.hasError('notIntegerError')\\\">\\n                        <small>The quantity specified must be an integer.</small>\\n                    </li>\\n                    <li *ngIf=\\\"quantity.hasError('notPositiveNumberError')\\\">\\n                        <small>The quantity specified must be a positive number.</small>\\n                    </li>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col my-auto\\\">\\n                        <label for=\\\"locationOnBoard\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Location on Board</label>\\n                        <textarea type=\\\"text\\\" [(ngModel)]=\\\"shipStoresModel.locationOnBoard\\\" #locationOnBoard=\\\"ngModel\\\"\\n                            placeholder=\\\"Location on Board\\\" class=\\\"form-control form-control-sm\\\" name=\\\"locationOnBoard\\\">\\n                        </textarea>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n                <button *ngIf=\\\"form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"addShipStoreItem(); form.reset()\\\">\\n                    <span>Submit</span>\\n                </button>\\n                <button *ngIf=\\\"!(form.valid)\\\" type=\\\"submit\\\" disabled class=\\\"btn btn-ssn mt-2\\\">\\n                    <span>Submit</span>\\n                </button>\\n                <button *ngIf=\\\"shipStoresList.length > 0\\\" type=\\\"submit\\\" class=\\\"btn mt-2 btn-danger float-right\\\" (click)=openWarningModal(warningModal)>\\n                    <span>Delete all ship stores</span>\\n                </button>\\n                <button *ngIf=\\\"shipStoresList.length === 0\\\" type=\\\"submit\\\" class=\\\"btn mt-2 btn-danger float-right\\\"\\n                    disabled>\\n                    <span>Delete all ship stores</span>\\n                </button>\\n            </div>\\n\\n            <div class=\\\"mb-3\\\">\\n                <div class=\\\"table-responsive\\\">\\n                    <div ng2-st-add-button=\\\"\\\" ng-reflect-grid=\\\"[object Object]\\\" class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\n                    </div>\\n                    <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"shipStoresDataSource\\\"></ng2-smart-table>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</app-ssn-card>\\n\\n<app-save-ship-stores [portCallId]=\\\"portCallId\\\"></app-save-ship-stores>\\n\\n<app-ship-stores-modal (outputShipStoresModel)=\\\"editShipStoresItem($event)\\\"></app-ship-stores-modal>\\n\\n\\n<ng-template #warningModal let-close=\\\"close()\\\" class=\\\"modal fade\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Do you want to delete all ship stores in the list?\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn mt-2 btn-danger float-right\\\" (click)=\\\"deleteAllShipStores(); close\\\">\\n            <span>Delete all ship stores</span>\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn mt-2 btn-ssn\\\" (click)=\\\"close\\\">\\n            <span>Cancel</span>\\n        </button>\\n    </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ActionButtonsComponent } from 'app/shared/components/action-buttons/action-buttons.component';\nimport { MeasurementTypeModel, ShipStoresModel } from 'app/shared/models/';\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ShipStoresModalComponent } from './ship-stores-modal/ship-stores-modal.component';\n\n@Component({\n  selector: 'app-ship-stores',\n  templateUrl: './ship-stores.component.html',\n  styleUrls: ['./ship-stores.component.css']\n})\nexport class ShipStoresComponent implements OnInit, OnDestroy {\n\n  @Input() portCallId: number;\n  @Input() shipStoresList: ShipStoresModel[];\n\n  @ViewChild(NgForm) form: NgForm;\n  @ViewChild(ShipStoresModalComponent) shipStoresModalComponent;\n\n  shipStoresModel: ShipStoresModel = new ShipStoresModel();\n\n  measurementTypeList: Observable<any>;\n\n  listIsPristine: Boolean = true;\n\n  shipStoresDataSource: LocalDataSource = new LocalDataSource();\n\n  tableSettings = {\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    editor: {\n      config: {\n        completer: {\n          descriptionField: 'Search here'\n        }\n      }\n    },\n    noDataMessage: 'There are no ship stores in this list.',\n    columns: {\n      sequenceNumber: {\n        title: 'Sequence Number',\n      },\n      articleName: {\n        title: 'Article Name'\n      },\n      quantity: {\n        title: 'Quantity'\n      },\n      measurementType: {\n        title: 'Measurement Type'\n      },\n      locationOnBoard: {\n        title: 'Location Onboard'\n      },\n      locationOnBoardCode: {\n        title: 'Location Onboard Code'\n      },\n      delete: {\n        title: 'Delete',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: ActionButtonsComponent,\n        onComponentInitFunction: (instance) => {\n          instance.view.subscribe(row => {\n            this.openViewShipStoreModal(row);\n          });\n          instance.edit.subscribe(row => {\n            this.openEditShipStoreModal(row);\n          });\n          instance.delete.subscribe(row => {\n            this.deleteShipStore(row);\n          });\n        }\n      },\n    }\n  };\n\n  getMeasurementTypeSubscription: Subscription;\n\n  constructor(\n    private shipStoresService: FalShipStoresService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n    this.getMeasurementTypeSubscription = this.shipStoresService.getMeasurementTypeList().subscribe(\n      results => {\n        this.measurementTypeList = results;\n      }\n    );\n    this.reloadTable();\n  }\n\n  ngOnDestroy() {\n    this.getMeasurementTypeSubscription.unsubscribe();\n  }\n\n  // Generate list that will be sent to shipStoresDataSource that is connected to the smart table\n  generateRows(): any[] {\n    let rowData = [];\n    if (this.shipStoresList) {\n      rowData = this.shipStoresList.map(shipStore => {\n        const row = {\n          shipStoresModel: shipStore,\n          sequenceNumber: shipStore.sequenceNumber,\n          articleName: shipStore.articleName,\n          quantity: shipStore.quantity,\n          measurementType: shipStore.measurementType ? shipStore.measurementType.name : null,\n          locationOnBoard: shipStore.locationOnBoard,\n          locationOnBoardCode: shipStore.locationOnBoardCode,\n        };\n        return row;\n      });\n    }\n    return rowData;\n  }\n\n  // Set measurement type and id of model\n  selectMeasurementType(measurementType) {\n    if (typeof measurementType !== 'undefined') {\n      this.shipStoresModel.measurementType = measurementType;\n      this.shipStoresModel.measurementTypeId = measurementType.measurementTypeId;\n    } else {\n      this.shipStoresModel.measurementType = null;\n      this.shipStoresModel.measurementTypeId = null;\n    }\n  }\n\n  deleteShipStoreItem($event) {\n    this.shipStoresList = this.shipStoresList.filter(item => item !== $event.shipStoresModel);\n    this.persistData();\n  }\n\n  addShipStoreItem() {\n    this.shipStoresModel.portCallId = this.portCallId;\n    this.shipStoresList.push(this.shipStoresModel);\n    this.persistData();\n    this.clearForm();\n  }\n\n  persistData() {\n    this.updateSequenceNumbers();\n    this.shipStoresService.setShipStoresList(this.shipStoresList);\n    this.touchData();\n    this.reloadTable();\n  }\n\n  touchData() {\n    this.listIsPristine = false;\n    this.shipStoresService.setDataIsPristine(false);\n  }\n\n  clearForm() {\n    this.shipStoresModel = new ShipStoresModel();\n  }\n\n  reloadTable() {\n    const rows = this.generateRows();\n    this.shipStoresDataSource.load(rows);\n  }\n\n  private updateSequenceNumbers() {\n    this.shipStoresList.forEach((shipStore, index) => {\n      shipStore.sequenceNumber = index + 1;\n    });\n  }\n\n  deleteShipStore(row) {\n    if (this.shipStoresList.length <= 1) {\n      this.shipStoresList = [];\n    } else {\n      this.shipStoresList.forEach((item, index) => {\n        if (item.sequenceNumber === row.sequenceNumber) {\n          this.shipStoresList.splice(index, 1);\n        }\n      });\n    }\n    this.persistData();\n  }\n\n  editShipStoresItem($event) {\n    this.shipStoresList[this.shipStoresList.findIndex(p => p.sequenceNumber === $event.sequenceNumber)] = JSON.parse(JSON.stringify($event));\n    this.persistData();\n  }\n\n  deleteAllShipStores() {\n    this.shipStoresList = [];\n    this.persistData();\n  }\n\n  openViewShipStoreModal(row) {\n    this.shipStoresList.forEach(item => {\n      if (item.sequenceNumber === row.sequenceNumber) {\n        this.shipStoresModalComponent.openViewModal(item);\n        return;\n      }\n    });\n  }\n\n  openEditShipStoreModal(row) {\n    this.shipStoresList.forEach(item => {\n      if (item.sequenceNumber === row.sequenceNumber) {\n        this.shipStoresModalComponent.openEditModal(item);\n        return;\n      }\n    });\n  }\n\n  openWarningModal(content: any) {\n    this.modalService.open(content);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/voyages/save-new-port-call/save-new-port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/voyages/save-new-port-call/save-new-port-call.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"!(shipFound && locationFound && etaFound && etdFound && !voyagesErrors)\\\" class=\\\"text-center\\\">\\n  <div class=\\\"mb-3\\\">\\n    <p *ngIf=\\\"!shipFound\\\" class=\\\"no-wrap mb-0\\\">Ship is required.</p>\\n    <p *ngIf=\\\"!locationFound\\\" class=\\\"no-wrap mb-0\\\">Location is required.</p>\\n    <p *ngIf=\\\"!etaFound\\\" class=\\\"no-wrap mb-0\\\">ETA is required.</p>\\n    <p *ngIf=\\\"!etdFound\\\" class=\\\"no-wrap mb-0\\\">ETD is required.</p>\\n  </div>\\n  <div class=\\\"alert alert-danger mb-3\\\" *ngIf=\\\"voyagesErrors\\\">There are errors that must be resolved.</div>\\n  <button class=\\\"btn btn-ssn\\\" disabled>\\n    <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Create Port Call Draft</button>\\n</div>\\n<div *ngIf=\\\"shipFound && locationFound && etaFound && etdFound && !voyagesErrors\\\" class=\\\"text-center\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-bordered\\\">\\n      <thead>\\n        <tr class=\\\"bg-ssn text-ssn\\\">\\n          <th>Ship flag</th>\\n          <th>Ship name</th>\\n          <th>Location Name</th>\\n          <th>Location Code</th>\\n          <th>ETA</th>\\n          <th>ETD</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>\\n            <img src=\\\"assets/images/flags/128x128/{{shipModel.shipFlagCode.country.twoCharCode | lowercase}}.png\\\" height=\\\"20px\\\" />\\n          </td>\\n          <td>{{ shipModel.name }}</td>\\n          <td>{{ locationModel.name }}</td>\\n          <td>{{ locationModel.locationCode }}</td>\\n          <td>{{ formatDateTime(etaModel) | date:'dd-MM-yyyy hh:mm' }}</td>\\n          <td>{{ formatDateTime(etdModel) | date:'dd-MM-yyyy hh:mm' }}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerPortCallDraft()\\\" [disabled]=\\\"creatingPortCall\\\">\\n    <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" />\\n    <span> Create Port Call Draft</span>\\n  </button>\\n  <p *ngIf=\\\"creatingPortCall\\\">Registering new port call draft...</p>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/voyages/save-new-port-call/save-new-port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/voyages/save-new-port-call/save-new-port-call.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\nimport { LocationModel, PortCallModel, ShipModel } from 'app/shared/models/';\nimport { PortCallDetailsService, PortCallService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\nimport { LoadPortCallService } from '../../../../load-port-call.service';\n\n@Component({\n  selector: 'app-save-new-port-call',\n  templateUrl: './save-new-port-call.component.html',\n  styleUrls: ['./save-new-port-call.component.css']\n})\nexport class SaveNewPortCallComponent implements OnInit, OnDestroy {\n  shipModel: ShipModel;\n  locationModel: LocationModel;\n  etaModel: DateTime;\n  etdModel: DateTime;\n  prevLocationModel: LocationModel;\n  nextLocationModel: LocationModel;\n  prevEtdModel: DateTime;\n  nextEtaModel: DateTime;\n\n  shipFound = false;\n  locationFound = false;\n  etaFound = false;\n  etdFound = false;\n  prevLocationFound = false;\n  prevEtdFound = false;\n  nextLocationFound = false;\n  nextEtaFound = false;\n\n  voyagesErrors = false;\n\n  creatingPortCall = false;\n\n  shipDataSubscription: Subscription;\n  locationDataSubscription: Subscription;\n  etaDataSubscription: Subscription;\n  etdDataSubscription: Subscription;\n  voyagesErrorSubscription: Subscription;\n  prevLocationSubscription: Subscription;\n  prevEtdSubscription: Subscription;\n  nextLocationSubscription: Subscription;\n  nextEtaSubscription: Subscription;\n\n  isLoadingPortCallSubscription: Subscription;\n\n  constructor(\n    private portCallService: PortCallService,\n    private portCallDetailsService: PortCallDetailsService,\n    private loadPortCallService: LoadPortCallService,\n  ) { }\n\n  ngOnInit() {\n    this.shipDataSubscription = this.portCallService.shipData$.subscribe(shipData => {\n      this.shipFound = !!shipData;\n      this.shipModel = shipData;\n    });\n    this.locationDataSubscription = this.portCallService.locationData$.subscribe(locationData => {\n      this.locationFound = !!locationData;\n      this.locationModel = locationData;\n    });\n    this.etaDataSubscription = this.portCallService.etaData$.subscribe(etaData => {\n      this.etaFound = !!etaData;\n      this.etaModel = etaData;\n    });\n    this.etdDataSubscription = this.portCallService.etdData$.subscribe(etdData => {\n      this.etdFound = !!etdData;\n      this.etdModel = etdData;\n    });\n    this.prevLocationSubscription = this.portCallService.prevLocationData$.subscribe(\n      data => {\n        this.prevLocationFound = !!data;\n        this.prevLocationModel = data;\n      }\n    );\n    this.prevEtdSubscription = this.portCallService.prevEtdData$.subscribe(\n      data => {\n        this.prevEtdFound = !!data;\n        this.prevEtdModel = data;\n      }\n    );\n    this.nextLocationSubscription = this.portCallService.nextLocationData$.subscribe(\n      data => {\n        this.nextLocationFound = !!data;\n        this.nextLocationModel = data;\n      }\n    );\n    this.nextEtaSubscription = this.portCallService.nextEtaData$.subscribe(\n      data => {\n        this.nextEtaFound = !!data;\n        this.nextEtaModel = data;\n      }\n    );\n\n    this.voyagesErrorSubscription = this.portCallService.voyagesErrors$.subscribe(\n      hasError => {\n        this.voyagesErrors = hasError;\n      }\n    );\n\n    this.isLoadingPortCallSubscription = this.loadPortCallService.isLoading$.subscribe(\n      data => {\n        this.creatingPortCall = data;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.shipDataSubscription.unsubscribe();\n    this.locationDataSubscription.unsubscribe();\n    this.etaDataSubscription.unsubscribe();\n    this.etdDataSubscription.unsubscribe();\n    this.voyagesErrorSubscription.unsubscribe();\n    this.prevLocationSubscription.unsubscribe();\n    this.prevEtdSubscription.unsubscribe();\n    this.nextLocationSubscription.unsubscribe();\n    this.nextEtaSubscription.unsubscribe();\n    this.isLoadingPortCallSubscription.unsubscribe();\n  }\n\n  formatDateTime(dateTime: DateTime): Date {\n    return new Date(dateTime.date.year, dateTime.date.month - 1, dateTime.date.day, dateTime.time.hour, dateTime.time.minute);\n  }\n\n  private buildPortCallModel(oldPortCallModel: PortCallModel = null): PortCallModel {\n    const portCallModel = !!oldPortCallModel ? oldPortCallModel : new PortCallModel();\n    portCallModel.shipId = this.shipModel.shipId;\n    portCallModel.locationId = this.locationModel.locationId;\n    portCallModel.locationEta = this.formatDateTime(this.etaModel);\n    portCallModel.locationEtd = this.formatDateTime(this.etdModel);\n\n    portCallModel.previousLocationId = this.prevLocationFound ? this.prevLocationModel.locationId : null;\n    portCallModel.previousLocationEtd = this.prevEtdFound ? this.formatDateTime(this.prevEtdModel) : null;\n    portCallModel.nextLocationId = this.nextLocationFound ? this.nextLocationModel.locationId : null;\n    portCallModel.nextLocationEta = this.nextEtaFound ? this.formatDateTime(this.nextEtaModel) : null;\n\n    return portCallModel;\n  }\n\n  registerPortCallDraft() {\n    this.creatingPortCall = true;\n    const portCallModel = this.buildPortCallModel();\n    this.portCallService.registerNewPortCall(portCallModel).subscribe(\n      result => {\n        // add list of authorities for clearance\n        this.portCallService.registerClearanceAgenciesForPortCall(result);\n\n        this.portCallDetailsService.wipeDetailsData();\n        this.loadPortCallService.setContent(result.portCallId);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/voyages/save-new-port-call/save-new-port-call.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/voyages/save-voyages/save-voyages.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/voyages/save-voyages/save-voyages.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"!(shipFound && locationFound && etaFound && etdFound && !voyagesErrors)\\\" class=\\\"text-center\\\">\\n  <div class=\\\"mb-3\\\">\\n    <p *ngIf=\\\"!shipFound\\\" class=\\\"no-wrap mb-0\\\">Ship is required.</p>\\n    <p *ngIf=\\\"!locationFound\\\" class=\\\"no-wrap mb-0\\\">Location is required.</p>\\n    <p *ngIf=\\\"!etaFound\\\" class=\\\"no-wrap mb-0\\\">ETA is required.</p>\\n    <p *ngIf=\\\"!etdFound\\\" class=\\\"no-wrap mb-0\\\">ETD is required.</p>\\n  </div>\\n  <div class=\\\"alert alert-danger mb-3\\\" *ngIf=\\\"voyagesErrors\\\">There are errors that must be resolved.</div>\\n  <button class=\\\"btn btn-ssn\\\" disabled>\\n    <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\" /> Save Voyages</button>\\n</div>\\n<div *ngIf=\\\"shipFound && locationFound && etaFound && etdFound && !voyagesErrors\\\" class=\\\"text-center\\\">\\n  \\n  <div class=\\\"text-center\\\" *ngIf=\\\"!dataIsPristine\\\">\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"savePortCall()\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n      <span>Save Voyages</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"text-center\\\" *ngIf=\\\"dataIsPristine\\\">\\n    <span>{{ dataIsPristineText }}</span>\\n    <br>\\n    <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\n      <span>Save Voyages</span>\\n    </button>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/voyages/save-voyages/save-voyages.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/voyages/save-voyages/save-voyages.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\nimport { LocationModel, PortCallModel, ShipModel } from 'app/shared/models/';\nimport { PortCallDetailsService, PortCallService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst INITIAL_DATA_IS_PRISTINE_TEXT = 'There are no unsaved changes in this page.';\nconst UPDATED_DATA_IS_PRISTINE_TEXT = 'Your changes have been saved.';\n\n@Component({\n  selector: 'app-save-voyages',\n  templateUrl: './save-voyages.component.html',\n  styleUrls: ['./save-voyages.component.css']\n})\nexport class SaveVoyagesComponent implements OnInit, OnDestroy {\n\n  @Input() portCallId: number;\n\n  shipModel: ShipModel;\n  locationModel: LocationModel;\n  etaModel: DateTime;\n  etdModel: DateTime;\n  prevLocationModel: LocationModel;\n  nextLocationModel: LocationModel;\n  prevEtdModel: DateTime;\n  nextEtaModel: DateTime;\n\n  shipFound = false;\n  locationFound = false;\n  etaFound = false;\n  etdFound = false;\n  prevLocationFound = false;\n  prevEtdFound = false;\n  nextLocationFound = false;\n  nextEtaFound = false;\n\n  voyagesErrors = false;\n\n  dataIsPristine = true;\n  dataIsPristineText: string;\n\n  dataIsPrisitineSubscription: Subscription;\n  shipDataSubscription: Subscription;\n  locationDataSubscription: Subscription;\n  etaDataSubscription: Subscription;\n  etdDataSubscription: Subscription;\n  voyagesErrorSubscription: Subscription;\n  prevLocationSubscription: Subscription;\n  prevEtdSubscription: Subscription;\n  nextLocationSubscription: Subscription;\n  nextEtaSubscription: Subscription;\n\n  constructor(private portCallService: PortCallService, private portCallDetailsService: PortCallDetailsService) {\n    this.dataIsPristineText = INITIAL_DATA_IS_PRISTINE_TEXT;\n  }\n\n  ngOnInit() {\n    this.dataIsPrisitineSubscription = this.portCallService.voyagesIsPristine$.subscribe(\n      voyagesIsPristine => {\n        this.dataIsPristine = voyagesIsPristine;\n      }\n    );\n\n    this.shipDataSubscription = this.portCallService.shipData$.subscribe(shipData => {\n      this.shipFound = !!shipData;\n      this.shipModel = shipData;\n    });\n    this.locationDataSubscription = this.portCallService.locationData$.subscribe(locationData => {\n      this.locationFound = !!locationData;\n      this.locationModel = locationData;\n    });\n    this.etaDataSubscription = this.portCallService.etaData$.subscribe(etaData => {\n      this.etaFound = !!etaData;\n      this.etaModel = etaData;\n    });\n    this.etdDataSubscription = this.portCallService.etdData$.subscribe(etdData => {\n      this.etdFound = !!etdData;\n      this.etdModel = etdData;\n    });\n    this.prevLocationSubscription = this.portCallService.prevLocationData$.subscribe(\n      data => {\n        this.prevLocationFound = !!data;\n        this.prevLocationModel = data;\n      }\n    );\n    this.prevEtdSubscription = this.portCallService.prevEtdData$.subscribe(\n      data => {\n        this.prevEtdFound = !!data;\n        this.prevEtdModel = data;\n      }\n    );\n    this.nextLocationSubscription = this.portCallService.nextLocationData$.subscribe(\n      data => {\n        this.nextLocationFound = !!data;\n        this.nextLocationModel = data;\n      }\n    );\n    this.nextEtaSubscription = this.portCallService.nextEtaData$.subscribe(\n      data => {\n        this.nextEtaFound = !!data;\n        this.nextEtaModel = data;\n      }\n    );\n\n    this.voyagesErrorSubscription = this.portCallService.voyagesErrors$.subscribe(\n      hasError => {\n        this.voyagesErrors = hasError;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.dataIsPrisitineSubscription.unsubscribe();\n    this.shipDataSubscription.unsubscribe();\n    this.locationDataSubscription.unsubscribe();\n    this.etaDataSubscription.unsubscribe();\n    this.etdDataSubscription.unsubscribe();\n    this.voyagesErrorSubscription.unsubscribe();\n    this.prevLocationSubscription.unsubscribe();\n    this.prevEtdSubscription.unsubscribe();\n    this.nextLocationSubscription.unsubscribe();\n    this.nextEtaSubscription.unsubscribe();\n  }\n\n  formatDateTime(dateTime: DateTime): Date {\n    return new Date(dateTime.date.year, dateTime.date.month - 1, dateTime.date.day, dateTime.time.hour, dateTime.time.minute);\n  }\n\n  private buildPortCallModel(oldPortCallModel: PortCallModel = null): PortCallModel {\n    const portCallModel = !!oldPortCallModel ? oldPortCallModel : new PortCallModel();\n    portCallModel.shipId = this.shipModel.shipId;\n    portCallModel.locationId = this.locationModel.locationId;\n    portCallModel.locationEta = this.formatDateTime(this.etaModel);\n    portCallModel.locationEtd = this.formatDateTime(this.etdModel);\n\n    portCallModel.previousLocationId = this.prevLocationFound ? this.prevLocationModel.locationId : null;\n    portCallModel.previousLocationEtd = this.prevEtdFound ? this.formatDateTime(this.prevEtdModel) : null;\n    portCallModel.nextLocationId = this.nextLocationFound ? this.nextLocationModel.locationId : null;\n    portCallModel.nextLocationEta = this.nextEtaFound ? this.formatDateTime(this.nextEtaModel) : null;\n\n    return portCallModel;\n  }\n\n  savePortCall() {\n    this.portCallService.getPortCallById(this.portCallId).subscribe(\n      portCall => {\n        if (portCall) {\n          const portCallModel = this.buildPortCallModel(portCall);\n          this.portCallService.updatePortCall(portCallModel).subscribe(\n            result => {\n              this.portCallService.setVoyagesIsPristine(true);\n              this.dataIsPristineText = UPDATED_DATA_IS_PRISTINE_TEXT;\n            },\n            error => {\n              console.log(error);\n            }\n          );\n        }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/voyages/save-voyages/save-voyages.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/voyages/voyages.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/voyages/voyages.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"'Select Ship'\\\" [icon]=\\\"'ship.png'\\\">\\n  <div *ngIf=\\\"!shipFound\\\">\\n    <app-search-ship [filter]=\\\"shipFilter\\\" (shipResult)=\\\"onShipResult($event)\\\"></app-search-ship>\\n  </div>\\n\\n  <div *ngIf=\\\"shipFound\\\" class=\\\"text-center\\\">\\n    <div class=\\\"table-responsive\\\">\\n      <app-ssn-table [entryData]=shipProperties></app-ssn-table>\\n    </div>\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectShip()\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n  </div>\\n</app-ssn-card>\\n\\n<app-ssn-card [header]=\\\"'Select Port of Call'\\\" [icon]=\\\"'location.png'\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-8\\\">\\n      <div *ngIf=\\\"!locationFound\\\" class=\\\"text-center\\\">\\n        <span>Search using location name or UN/LOCODE code</span>\\n        <app-search-location [restrictTypeHarbour]=true [showDropdown]=true (locationResult)=\\\"onLocationResult($event)\\\"></app-search-location>\\n      </div>\\n\\n      <div *ngIf=\\\"locationFound\\\" class=\\\"text-center\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <app-ssn-table [entryData]=\\\"locationProperties\\\"></app-ssn-table>\\n        </div>\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectLocation()\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <app-date-time-picker [header]=\\\"'ETA'\\\" [dateTimeInput]=\\\"etaModel\\\" (dateTimeResult)=\\\"onEtaResult($event)\\\"></app-date-time-picker>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <app-date-time-picker [header]=\\\"'ETD'\\\" [dateTimeInput]=\\\"etdModel\\\" (dateTimeResult)=\\\"onEtdResult($event)\\\"></app-date-time-picker>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"etaIsAfterEtdError\\\">\\n    <div class=\\\"col-6 alert alert-danger\\\" role=\\\"alert\\\">\\n      <span>Departure must be after arrival.</span>\\n    </div>\\n  </div>\\n</app-ssn-card>\\n\\n<app-ssn-card header=\\\"Previous Port of Call\\\" icon=\\\"location.png\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-7\\\">\\n      <div class=\\\"text-center pt-lg-4\\\" *ngIf=\\\"!prevLocationFound\\\">\\n        <span>Search using location name or UN/LOCODE code</span>\\n        <app-search-location [restrictTypeHarbour]=true (locationResult)=\\\"onPrevLocationResult($event)\\\"></app-search-location>\\n      </div>\\n\\n      <div class=\\\"text-center\\\" *ngIf=\\\"prevLocationFound\\\">\\n        <app-ssn-table [entryData]=\\\"prevLocationProperties\\\"></app-ssn-table>\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectPrevLocation()\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-5\\\">\\n      <app-date-time-picker header=\\\"ETD\\\" [dateTimeInput]=\\\"prevEtdModel\\\" (dateTimeResult)=\\\"onPrevEtdResult($event)\\\"></app-date-time-picker>\\n    </div>\\n\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"prevEtdIsAfterCurrentEtaError\\\">\\n      <div class=\\\"col-6 alert alert-danger\\\" role=\\\"alert\\\">\\n        <span>ETD for previous Port of Call must be before ETA for current Port of Call.</span>\\n      </div>\\n    </div>\\n  </div>\\n</app-ssn-card>\\n\\n<app-ssn-card header=\\\"Next Port of Call\\\" icon=\\\"location.png\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-7\\\">\\n      <div class=\\\"text-center pt-lg-4\\\" *ngIf=\\\"!nextLocationFound\\\">\\n        <span>Search using location name or UN/LOCODE code</span>\\n        <app-search-location [restrictTypeHarbour]=true (locationResult)=\\\"onNextLocationResult($event)\\\"></app-search-location>\\n      </div>\\n\\n      <div class=\\\"text-center\\\" *ngIf=\\\"nextLocationFound\\\">\\n        <app-ssn-table [entryData]=\\\"nextLocationProperties\\\"></app-ssn-table>\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectNextLocation()\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-5\\\">\\n      <app-date-time-picker header=\\\"ETA\\\" [dateTimeInput]=\\\"nextEtaModel\\\" (dateTimeResult)=\\\"onNextEtaResult($event)\\\"></app-date-time-picker>\\n    </div>\\n\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"nextEtaIsBeforeCurrentEtdError\\\">\\n      <div class=\\\"col-6 alert alert-danger\\\" role=\\\"alert\\\">\\n        <span>ETA for next Port of Call must be after ETA for current Port of Call.</span>\\n      </div>\\n    </div>\\n  </div>\\n</app-ssn-card>\\n\\n<app-ssn-card [header]=\\\"'Create Port Call Draft'\\\" [icon]=\\\"'save.png'\\\" *ngIf=\\\"portCallId == null\\\">\\n  <app-save-new-port-call></app-save-new-port-call>\\n</app-ssn-card>\\n\\n<app-ssn-card [header]=\\\"'Save Voyages'\\\" [icon]=\\\"'save.png'\\\" *ngIf=\\\"portCallId != null\\\">\\n  <app-save-voyages [portCallId]=\\\"portCallId\\\"></app-save-voyages>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/voyages/voyages.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/voyages/voyages.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\nimport { SHIP_STATUSES } from 'app/shared/constants/enumValues';\nimport { LocationProperties } from 'app/shared/constants/location-properties';\nimport { ShipProperties } from 'app/shared/constants/ship-properties';\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\nimport { LocationModel, ShipModel } from 'app/shared/models/';\nimport { PortCallService } from 'app/shared/services/port-call.service';\n\n@Component({\n  selector: 'app-voyages',\n  templateUrl: './voyages.component.html',\n  styleUrls: ['./voyages.component.css']\n})\nexport class VoyagesComponent implements OnInit {\n\n  @Input() portCallId: number;\n  @Input() shipModel: ShipModel;\n  @Input() locationModel: LocationModel;\n  @Input() etaModel: DateTime;\n  @Input() etdModel: DateTime;\n  @Input() prevLocationModel: LocationModel;\n  @Input() nextLocationModel: LocationModel;\n  @Input() prevEtdModel: DateTime;\n  @Input() nextEtaModel: DateTime;\n\n  shipFound = false;\n  locationFound = false;\n  prevLocationFound = false;\n  nextLocationFound = false;\n  shipFilter = SHIP_STATUSES.ACTIVE;\n\n  shipProperties = new ShipProperties().getPropertyList();\n  locationProperties = new LocationProperties().getPropertyList();\n  prevLocationProperties = new LocationProperties().getPropertyList();\n  nextLocationProperties = new LocationProperties().getPropertyList();\n\n  etaIsAfterEtdError = false;\n  prevEtdIsAfterCurrentEtaError = false;\n  nextEtaIsBeforeCurrentEtdError = false;\n\n  constructor(private portCallService: PortCallService) { }\n\n  ngOnInit() {\n    this.shipFound = !!this.shipModel;\n    if (this.shipFound) {\n      this.setShipData(this.shipModel);\n    }\n\n    this.locationFound = !!this.locationModel;\n    if (this.locationFound) {\n      this.setLocationData(this.locationModel);\n    }\n\n    this.prevLocationFound = !!this.prevLocationModel;\n    if (this.prevLocationFound) {\n      this.setPrevLocationData(this.prevLocationModel);\n    }\n\n    this.nextLocationFound = !!this.nextLocationModel;\n    if (this.nextLocationFound) {\n      this.setNextLocationData(this.nextLocationModel);\n    }\n\n    this.validateDates();\n  }\n\n  onShipResult(shipResult) {\n    this.setShipData(shipResult);\n    this.portCallService.setShipData(shipResult);\n    this.shipFound = true;\n  }\n\n  onLocationResult(locationResult) {\n    this.setLocationData(locationResult);\n    this.portCallService.setLocationData(locationResult);\n    this.locationFound = true;\n  }\n\n  onPrevLocationResult(locationResult) {\n    this.setPrevLocationData(locationResult);\n    this.portCallService.setPrevLocationData(locationResult);\n    this.prevLocationFound = true;\n  }\n\n  onNextLocationResult(locationResult) {\n    this.setNextLocationData(locationResult);\n    this.portCallService.setNextLocationData(locationResult);\n    this.nextLocationFound = true;\n  }\n\n  deselectShip() {\n    this.portCallService.setShipData(null);\n    this.shipFound = false;\n  }\n\n  deselectLocation() {\n    this.portCallService.setLocationData(null);\n    this.locationFound = false;\n  }\n\n  deselectPrevLocation() {\n    this.portCallService.setPrevLocationData(null);\n    this.prevLocationFound = false;\n  }\n\n  deselectNextLocation() {\n    this.portCallService.setNextLocationData(null);\n    this.nextLocationFound = false;\n  }\n\n  onEtaResult(etaResult) {\n    this.etaModel = etaResult;\n    this.validateDates();\n    this.persistEta();\n  }\n\n  onEtdResult(etdResult) {\n    this.etdModel = etdResult;\n    this.validateDates();\n    this.persistEtd();\n  }\n\n  onPrevEtdResult(etdResult) {\n    this.prevEtdModel = etdResult;\n    this.validateDates();\n    this.persistPrevEtd();\n  }\n\n  onNextEtaResult(etaResult) {\n    this.nextEtaModel = etaResult;\n    this.validateDates();\n    this.persistNextEta();\n  }\n\n  private validateDates() {\n    if (this.etaModel && this.etdModel) {\n      const etaDate = new NgbDate(this.etaModel.date.year, this.etaModel.date.month, this.etaModel.date.day);\n      const etdDate = new NgbDate(this.etdModel.date.year, this.etdModel.date.month, this.etdModel.date.day);\n\n      this.etaIsAfterEtdError = etdDate.before(etaDate);\n\n      if (etdDate.equals(etaDate)) {\n        this.etaIsAfterEtdError = this.etaModel.time.hour > this.etdModel.time.hour\n          || (this.etaModel.time.hour === this.etdModel.time.hour\n            && this.etaModel.time.minute >= this.etdModel.time.minute);\n      }\n    } else {\n      this.etaIsAfterEtdError = false;\n    }\n\n    const prevEtdDate = this.prevEtdModel != null && this.prevEtdModel.date != null ? new NgbDate(this.prevEtdModel.date.year, this.prevEtdModel.date.month, this.prevEtdModel.date.day) : null;\n    const nextEtaDate = this.nextEtaModel != null && this.nextEtaModel.date != null ? new NgbDate(this.nextEtaModel.date.year, this.nextEtaModel.date.month, this.nextEtaModel.date.day) : null;\n\n    // Checking for sequence errors between prev and current port of call\n    if (prevEtdDate && this.etaModel) {\n      this.prevEtdIsAfterCurrentEtaError = prevEtdDate.after(this.etaModel.date);\n      if (prevEtdDate.equals(this.etaModel.date)) {\n        this.prevEtdIsAfterCurrentEtaError = this.prevEtdModel.time.hour > this.etaModel.time.hour\n          || (this.prevEtdModel.time.hour === this.etaModel.time.hour\n            && this.prevEtdModel.time.minute >= this.etaModel.time.minute);\n      }\n    } else {\n      this.prevEtdIsAfterCurrentEtaError = false;\n    }\n\n    // Checking for sequence errors between next and current port of call\n    if (nextEtaDate && this.etdModel) {\n      this.nextEtaIsBeforeCurrentEtdError = nextEtaDate.before(this.etdModel.date);\n      if (nextEtaDate.equals(this.etdModel.date)) {\n        this.nextEtaIsBeforeCurrentEtdError = this.nextEtaModel.time.hour < this.etdModel.time.hour\n          || (this.nextEtaModel.time.hour === this.etdModel.time.hour\n            && this.nextEtaModel.time.minute <= this.etdModel.time.minute);\n      }\n    } else {\n      this.nextEtaIsBeforeCurrentEtdError = false;\n    }\n\n    // console.log('ETA is after ETD', this.etaIsAfterEtdError);\n    // console.log('Prev ETD is after ETA', this.prevEtdIsAfterCurrentEtaError);\n    // console.log('Next ETA is before ETD', this.nextEtaIsBeforeCurrentEtdError);\n    this.portCallService.setVoyagesErrors(this.etaIsAfterEtdError || this.prevEtdIsAfterCurrentEtaError || this.nextEtaIsBeforeCurrentEtdError);\n  }\n\n  private persistEta() {\n    if (this.etaModel) {\n      this.portCallService.setEtaData(this.etaModel);\n    }\n  }\n\n  private persistEtd() {\n    if (this.etdModel) {\n      this.portCallService.setEtdData(this.etdModel);\n    }\n  }\n\n  private persistPrevEtd() {\n    this.portCallService.setPrevEtdData(this.prevEtdModel);\n  }\n\n  private persistNextEta() {\n    this.portCallService.setNextEtaData(this.nextEtaModel);\n  }\n\n  // Methods used for populating info tables with correcly formatted data\n  private setShipData(shipData: ShipModel) {\n    const twoCharCode = shipData.shipFlagCode.country.twoCharCode.toLowerCase() || 'xx';\n    const countryFlag = twoCharCode + '.png';\n    ShipProperties.setShipData(this.shipProperties, shipData);\n    ShipProperties.setCountry(this.shipProperties, null, countryFlag);\n  }\n\n  private setLocationData(locationData: LocationModel) {\n    const twoCharCode = locationData.country.twoCharCode.toLowerCase() || 'xx';\n    const countryFlag = twoCharCode + '.png';\n    LocationProperties.setLocationData(this.locationProperties, locationData);\n    LocationProperties.setCountry(this.locationProperties, locationData.country.name, countryFlag);\n  }\n\n  private setPrevLocationData(locationData: LocationModel) {\n    const twoCharCode = locationData.country.twoCharCode.toLowerCase() || 'xx';\n    const countryFlag = twoCharCode + '.png';\n    LocationProperties.setLocationData(this.prevLocationProperties, locationData);\n    LocationProperties.setCountry(this.prevLocationProperties, locationData.country.name, countryFlag);\n  }\n\n  private setNextLocationData(locationData: LocationModel) {\n    const twoCharCode = locationData.country.twoCharCode.toLowerCase() || 'xx';\n    const countryFlag = twoCharCode + '.png';\n    LocationProperties.setLocationData(this.nextLocationProperties, locationData);\n    LocationProperties.setCountry(this.nextLocationProperties, locationData.country.name, countryFlag);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/voyages/voyages.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card card-ssn bg-ssn text-ssn\\\">\\n  <div class=\\\"row px-3 py-1\\\">\\n\\n    <div *ngFor=\\\"let menuEntry of menuEntries\\\">\\n      <div *ngIf=\\\"menuEntry.checked\\\" class=\\\"mx-1 my-1\\\">\\n        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"{'btn-danger': !!menuEntry.hasError, 'btn-ssn': !menuEntry.hasError, 'active': selectedPortCallForm == menuEntry.name}\\\"\\n          (click)=\\\"setPortCallForm(menuEntry.name)\\\">\\n          <img src=\\\"{{iconPath}}{{menuEntry.icon}}\\\" height=\\\"24px\\\" /> {{menuEntry.name}}\\n          <span *ngIf=\\\"menuEntry.hasUnsavedData\\\" title=\\\"There is unsaved data in this page.\\\"> *</span>\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FORM_NAMES } from 'app/shared/constants/form-names';\nimport { ContentService, DpgService, FalCargoService, FalSecurityService, FalShipStoresService, PortCallDetailsService, PortCallFalPersonOnBoardService, PortCallService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.css']\n})\nexport class ProgressBarComponent implements OnInit, OnDestroy {\n  iconPath = 'assets/images/icons/128x128/white/';\n  baseMenuEntries: any[] = [\n    {\n      name: FORM_NAMES.VOYAGES,\n      icon: 'voyage.png',\n      checked: true,\n      hasError: false,\n      hasUnsavedData: false\n    },\n    {\n      name: FORM_NAMES.PORT_CALL_DETAILS,\n      icon: 'verification-clipboard.png',\n      checked: true,\n      hasError: false,\n      hasUnsavedData: false\n    }\n  ];\n  finalMenuEntries: any[] = [\n    {\n      name: FORM_NAMES.CONFIRM_PORT_CALL,\n      icon: 'checkmark.png',\n      checked: true,\n      hasError: false,\n      hasUnsavedData: false\n    }\n  ];\n\n  menuEntries: any[];\n\n  cargoIsPrisitne = true;\n  shipStoresIsPristine = true;\n  passengerListIsPristine = true;\n  crewListIsPristine = true;\n  dpgListIsPristine = true;\n\n  selectedPortCallForm: string;\n\n  reportingForThisPortCallDataSubscription: Subscription;\n  portCallFormNameSubscription: Subscription;\n  crewPassengersAndDimensionsMetaSubscription: Subscription;\n  voyagesDataIsPristineSubscription: Subscription;\n  voyagesErrorSubscription: Subscription;\n  portCallDetailsPristineSubscription: Subscription;\n  shipStoresDataIsPristineSubscription: Subscription;\n  dpgDataIsPristineSubscription: Subscription;\n  cargoDataIsPristineSubscription: Subscription;\n  passengerDataIsPristineSubscription: Subscription;\n  crewDataIsPristineSubscription: Subscription;\n\n  constructor(\n    private portCallService: PortCallService,\n    private portCallDetailsService: PortCallDetailsService,\n    private contentService: ContentService,\n    private shipStoresService: FalShipStoresService,\n    private cargoService: FalCargoService,\n    private personOnBoardService: PortCallFalPersonOnBoardService,\n    private securityService: FalSecurityService,\n    private dpgService: DpgService\n  ) { }\n\n  ngOnInit() {\n    this.menuEntries = this.baseMenuEntries.concat(this.finalMenuEntries);\n\n    this.reportingForThisPortCallDataSubscription = this.portCallDetailsService.reportingForThisPortCallData$.subscribe(\n      reportingData => {\n        if (reportingData != null) {\n          const falForms = [\n            {\n              name: FORM_NAMES.DPG,\n              icon: 'hazard.png',\n              checked: reportingData.reportingDpg || false,\n              hasError: false,\n              hasUnsavedData: !this.dpgListIsPristine\n            },\n            {\n              name: FORM_NAMES.CARGO,\n              icon: 'cargo.png',\n              checked: reportingData.reportingCargo || false,\n              hasError: false,\n              hasUnsavedData: !this.cargoIsPrisitne\n            },\n            {\n              name: FORM_NAMES.SHIP_STORES,\n              icon: 'alcohol.png',\n              checked: reportingData.reportingShipStores || false,\n              hasError: false,\n              hasUnsavedData: !this.shipStoresIsPristine\n            },\n            {\n              name: FORM_NAMES.CREW,\n              icon: 'crew.png',\n              checked: reportingData.reportingCrew || false,\n              hasError: false,\n              hasUnsavedData: false\n            },\n            {\n              name: FORM_NAMES.PAX,\n              icon: 'pax.png',\n              checked: reportingData.reportingPax || false,\n              hasError: false,\n              hasUnsavedData: false\n            },\n            {\n              name: FORM_NAMES.SECURITY,\n              icon: 'security.png',\n              checked: reportingData.reportingSecurity || false,\n              hasError: false,\n              hasUnsavedData: false\n            }\n          ];\n          this.menuEntries = this.baseMenuEntries\n            .concat(falForms)\n            .concat(this.finalMenuEntries);\n\n          // Set checked in services for FAL forms\n          this.shipStoresService.setCheckedInProgressBar(reportingData.reportingShipStores);\n          this.personOnBoardService.setPassengerCheckedInProgressBar(reportingData.reportingPax);\n          this.personOnBoardService.setCrewCheckedInProgressBar(reportingData.reportingCrew);\n          this.securityService.setSecurityIsCheckedData(reportingData.reportingSecurity);\n          this.dpgService.setDpgCheckedInProgressBar(reportingData.reportingDpg);\n        }\n      }\n    );\n\n    this.portCallFormNameSubscription = this.contentService.portCallFormName$.subscribe(\n      portCallFormName => {\n        this.selectedPortCallForm = portCallFormName;\n      }\n    );\n\n    this.crewPassengersAndDimensionsMetaSubscription = this.portCallDetailsService.crewPassengersAndDimensionsMeta$.subscribe(\n      metaData => {\n        this.menuEntries.find(\n          p => p.name === FORM_NAMES.PORT_CALL_DETAILS\n        ).hasError = !metaData.valid;\n      }\n    );\n\n    this.voyagesDataIsPristineSubscription = this.portCallService.voyagesIsPristine$.subscribe(\n      pristineData => {\n        this.menuEntries.find(\n          p => p.name === FORM_NAMES.VOYAGES\n        ).hasUnsavedData = !pristineData;\n      }\n    );\n\n    this.voyagesErrorSubscription = this.portCallService.voyagesErrors$.subscribe(\n      hasError => {\n        this.menuEntries.find(\n          p => p.name === FORM_NAMES.VOYAGES\n        ).hasError = hasError;\n      }\n    );\n\n    this.portCallDetailsPristineSubscription = this.portCallDetailsService.detailsPristine$.subscribe(\n      detailsDataIsPristine => {\n        this.menuEntries.find(\n          p => p.name === FORM_NAMES.PORT_CALL_DETAILS\n        ).hasUnsavedData = !detailsDataIsPristine;\n      }\n    );\n\n    this.shipStoresDataIsPristineSubscription = this.shipStoresService.dataIsPristine$.subscribe(shipStoresDataIsPristine => {\n      this.shipStoresIsPristine = shipStoresDataIsPristine;\n      const shipStores = this.menuEntries.find(\n        p => p.name === FORM_NAMES.SHIP_STORES\n      );\n      if (shipStores) {\n        shipStores.hasUnsavedData = !shipStoresDataIsPristine;\n      }\n    });\n\n    this.dpgDataIsPristineSubscription = this.dpgService.dataIsPristine$.subscribe(\n      dpgDataIsPristine => {\n      this.dpgListIsPristine = dpgDataIsPristine;\n      const dpg = this.menuEntries.find(\n        p => p.name === FORM_NAMES.DPG\n      );\n      if (dpg) {\n        dpg.hasUnsavedData = !dpgDataIsPristine;\n      }\n    });\n\n    this.cargoDataIsPristineSubscription = this.cargoService.dataIsPristine$.subscribe(\n      cargoDataIsPristine => {\n        this.cargoIsPrisitne = cargoDataIsPristine;\n        const cargo = this.menuEntries.find(\n          p => p.name === FORM_NAMES.CARGO\n        );\n        if (cargo) {\n          cargo.hasUnsavedData = !cargoDataIsPristine;\n        }\n      }\n    );\n\n    this.passengerDataIsPristineSubscription = this.personOnBoardService.passengerDataIsPristine$.subscribe(\n      passengerDataIsPristine => {\n        this.passengerListIsPristine = passengerDataIsPristine;\n        const pax = this.menuEntries.find(\n          p => p.name === FORM_NAMES.PAX\n        );\n        if (pax) {\n          pax.hasUnsavedData = !passengerDataIsPristine;\n        }\n      }\n    );\n\n    this.crewDataIsPristineSubscription = this.personOnBoardService.crewDataIsPristine$\n    .subscribe(\n      crewDataIsPristine => {\n        this.crewListIsPristine = crewDataIsPristine;\n        const crew = this.menuEntries.find(\n          p => p.name === FORM_NAMES.CREW\n        );\n        if (crew) {\n          crew.hasUnsavedData = !crewDataIsPristine;\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.reportingForThisPortCallDataSubscription.unsubscribe();\n    this.portCallFormNameSubscription.unsubscribe();\n    this.crewPassengersAndDimensionsMetaSubscription.unsubscribe();\n    this.voyagesDataIsPristineSubscription.unsubscribe();\n    this.portCallDetailsPristineSubscription.unsubscribe();\n    this.shipStoresDataIsPristineSubscription.unsubscribe();\n    this.cargoDataIsPristineSubscription.unsubscribe();\n  }\n\n  setPortCallForm(contentName: string) {\n    this.contentService.setPortCallForm(contentName);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/registration.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/registration.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"PORT CALL REGISTRATION\\\" icon=\\\"portcall.png\\\">\\n  <app-forms></app-forms>\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/registration.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/registration.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ContentService } from '../../../../shared/services/content.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit, OnDestroy {\n  selectedComponent: string;\n\n  portCallFormNameSubscription: Subscription;\n\n  constructor(\n    private contentService: ContentService\n  ) { }\n\n  ngOnInit() {\n    this.portCallFormNameSubscription = this.contentService.portCallFormName$.subscribe(content => {\n      this.selectedComponent = content;\n    });\n  }\n\n  ngOnDestroy() {\n    this.portCallFormNameSubscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/registration.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"VIEW PORT CALL\\\" icon=\\\"eye.png\\\">\\n\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col\\\">\\n      <app-ship-info-table></app-ship-info-table>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col\\\">\\n      <app-location-time-info-table></app-location-time-info-table>\\n    </div>\\n  </div>\\n\\n  <app-confirmation-view></app-confirmation-view>\\n\\n  <div class=\\\"row text-center\\\">\\n    <div class=\\\"col\\\">\\n      <button class=\\\"btn btn-outline-light\\\" (click)=\\\"goBack()\\\" (mouseover)=\\\"backButtonIcon='left-arrow'\\\" (mouseout)=\\\"backButtonIcon='white/left-arrow'\\\">\\n        <img src=\\\"assets/images/icons/128x128/{{backButtonIcon}}.png\\\" height=\\\"32px\\\">\\n        <span class=\\\"no-wrap\\\"> GO BACK</span>\\n      </button>\\n    </div>\\n  </div>\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ContentService, PortCallService, ShipService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-view-port-call',\n  templateUrl: './view-port-call.component.html',\n  styleUrls: ['./view-port-call.component.css']\n})\nexport class ViewPortCallComponent implements OnInit, OnDestroy {\n\n  backButtonIcon = 'white/left-arrow';\n\n  shipDataSubscription: Subscription;\n\n  constructor(\n    private contentService: ContentService,\n    private portCallService: PortCallService,\n    private shipService: ShipService\n  ) { }\n\n  ngOnInit() {\n    this.shipDataSubscription = this.portCallService.shipData$.subscribe(shipResult => {\n      this.shipService.setShipData(shipResult);\n    });\n  }\n\n  ngOnDestroy() {\n    this.shipDataSubscription.unsubscribe();\n  }\n\n  goBack() {\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.ts","module.exports = \"footer {\\n    height: 100px;\\n    bottom: 0;\\n    width: 100%;\\n}\\n\\n.footer-section {\\n    height: 100px;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/footer/footer.component.css\n// module id = ./src/app/main-content/footer/footer.component.css\n// module chunks = main","module.exports = \"<footer class=\\\"footer bg-ssn text-ssn text-center\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4 footer-section\\\">\\n      <a href=\\\"/assets/files/imo_msw_guide.pdf\\\" download=\\\"Guide to operate the preliminary MSW\\\">\\n        <small class=\\\"text-ssn\\\">Download user guide here</small>\\n        <img src=\\\"/assets/images/icons/128x128/white/download.png\\\" height=\\\"24px\\\" />\\n      </a>\\n    </div>\\n    <div class=\\\"col-4 footer-section\\\">\\n      <div class=\\\"d-table\\\">\\n        <div class=\\\"d-table-row\\\">\\n          <div class=\\\"d-table-cell py-1\\\">\\n            <small class=\\\"no-wrap\\\">\\n              An Open Source Maritime\\n            </small>\\n            <small class=\\\"no-wrap\\\">\\n              Single Window project.\\n            </small>\\n          </div>\\n        </div>\\n        <div class=\\\"d-table-row\\\">\\n          <div class=\\\"d-table-cell py-1\\\">\\n            <small>Available at </small>\\n            <a href=\\\"https://github.com/Fundator/IMO-Maritime-Single-Window/\\\" target=\\\"_blank\\\" title=\\\"GitHub\\\">\\n              <small class=\\\"text-ssn\\\">GitHub</small>\\n              <img src=\\\"/assets/images/icons/128x128/white/github.png\\\" height=\\\"24px\\\" />\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-4 footer-section\\\">\\n      <div class=\\\"d-table\\\">\\n        <div class=\\\"d-table-row\\\">\\n          <div class=\\\"d-table-cell py-1\\\">\\n            <span>Coordinated by</span>\\n            <a href=\\\"https://www.imo.org/\\\" target=\\\"_blank\\\">\\n              <img src=\\\"/assets/images/logos/imo-logo.png\\\" alt=\\\"IMO\\\" title=\\\"International Maritime Organization\\\" height=\\\"48px\\\" />\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/footer/footer.component.html\n// module id = ./src/app/main-content/footer/footer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/footer/footer.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/header-home/header-home.component.css\n// module id = ./src/app/main-content/header/header-home/header-home.component.css\n// module chunks = main","module.exports = \"<header *ngIf=\\\"standAlone; else inExistingNav\\\">\\n  <nav class=\\\"navbar navbar-dark bg-ssn\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n      <li class=\\\"nav-item\\\">\\n        <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onClick()\\\" routerLink=\\\"/\\\">\\n          <img src=\\\"{{iconPath}}home.png\\\" height=\\\"16px\\\">\\n        </button>\\n        <img src=\\\"/assets/images/logos/logo.png\\\" height=\\\"32px\\\" />\\n        <span class=\\\"text-center text-ssn\\\">IMO Maritime Single Window</span>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n          <span class=\\\"text-center text-ssn mx-3\\\">Development Version. Deployed: 24.08.2018</span>\\n      </li>\\n    </ul>\\n  </nav>\\n\\n</header>\\n\\n<ng-template #inExistingNav>\\n  <li class=\\\"nav-item\\\">\\n    <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onClick()\\\" routerLink=\\\"/\\\">\\n      <img src=\\\"{{iconPath}}home.png\\\" height=\\\"16px\\\">\\n    </button>\\n    <img src=\\\"/assets/images/logos/logo.png\\\" height=\\\"32px\\\" />\\n    <span class=\\\"text-center text-ssn\\\">IMO Maritime Single Window</span>\\n  </li>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/header-home/header-home.component.html\n// module id = ./src/app/main-content/header/header-home/header-home.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ContentService } from 'app/shared/services/content.service';\n\n@Component({\n  selector: 'app-header-home',\n  templateUrl: './header-home.component.html',\n  styleUrls: ['./header-home.component.css']\n})\nexport class HeaderHomeComponent implements OnInit {\n\n  @Input() standAlone = true;\n  iconPath = 'assets/images/icons/128x128/white/';\n\n  constructor(private contentService: ContentService) { }\n\n  ngOnInit() {\n  }\n\n  onClick() {\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/header/header-home/header-home.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/header.component.css\n// module id = ./src/app/main-content/header/header.component.css\n// module chunks = main","module.exports = \"<header>\\n  <nav class=\\\"navbar navbar-dark bg-ssn\\\">\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"(userMenuEntries.length > 1); else singleEntry\\\">\\n        <button class=\\\"btn btn-sm btn-ssn\\\" type=\\\"button\\\" (click)=\\\"menuIsCollapsed = !menuIsCollapsed\\\" >\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <img src=\\\"/assets/images/logos/logo.png\\\" height=\\\"32px\\\" />\\n        <span class=\\\"text-center text-ssn\\\">IMO Maritime Single Window</span>\\n      </li>\\n      <ng-template #singleEntry>\\n          <app-header-home [standAlone]=\\\"false\\\" *ngIf=\\\"userMenuEntries.length === 1\\\"></app-header-home>\\n      </ng-template>\\n    </ul>\\n\\n    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!(online$ | async)\\\">Internet connection lost</span>\\n    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!hasDbConnection\\\">Connection to database lost.</span>\\n    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!hasServerConnection\\\">Connection to server lost.</span>\\n\\n    <ul class=\\\"navbar-nav ml-auto\\\" *ngIf=\\\"loggedIn || redirected\\\">\\n      <li class=\\\"nav-item\\\" >\\n          <span class=\\\"text-center text-ssn mx-3\\\">Development Version. Deployed: 22.11.2018</span>\\n          <div class=\\\"btn-group\\\">\\n            <button (click)=\\\"navigateToMyAccountPage()\\\" class=\\\"btn btn-light btn-sm\\\">My account</button>\\n          </div>\\n          <div class=\\\"btn-group\\\">\\n            <span class=\\\"btn btn-light btn-sm non-clickable\\\">{{userName}}</span>\\n            <button class=\\\"btn btn-outline-light btn-sm\\\" (click)=\\\"logout()\\\">Log out</button>\\n            <button class=\\\"btn btn-outline-light btn-sm\\\" (click)=\\\"whatsNew()\\\">What's new?</button>\\n          </div>\\n      </li>\\n    </ul>\\n\\n\\n\\n    <div class=\\\"collapse navbar-collapse\\\" [ngbCollapse]=\\\"menuIsCollapsed\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm mx-auto mt-2\\\" *ngFor=\\\"let menuEntry of userMenuEntries\\\">\\n          <button class=\\\"btn btn-ssn btn-sm col\\\" (click)=\\\"setContent(menuEntry.menuName)\\\">\\n            <img src=\\\"{{ menuEntry.iconPath }}\\\" height=\\\"24px\\\" /> {{menuEntry.title}}\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </nav>\\n</header>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/header.component.html\n// module id = ./src/app/main-content/header/header.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { merge } from 'rxjs/observable/merge';\nimport { of } from 'rxjs/observable/of';\nimport { mapTo } from 'rxjs/operators/mapTo';\nimport { Observable } from 'rxjs/Rx';\nimport { Subscription } from 'rxjs/Subscription';\nimport { CONTENT_NAMES } from '../../shared/constants/content-names';\nimport { MenuClaims } from '../../shared/constants/menu-claims';\nimport { MenuEntry } from '../../shared/interfaces/menu-entry.interface';\nimport { AccountService, ContentService, DbConnectionService, LoginService, } from '../../shared/services/';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n  providers: []\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  online$: Observable<boolean>;\n\n  hasDbConnection = true;\n  hasServerConnection = true;\n  dbConnectionSubscription: Subscription;\n\n  menuIsCollapsed = true;\n  subscription: Subscription;\n  loggedIn: boolean;\n  redirected: boolean;\n  roles: any = new Array();\n  userMenuEntries: MenuEntry[];\n  userName = 'default';\n  userClaims: any;\n\n  iconPath = 'assets/images/icons/128x128/white/';\n  menuEntries: MenuEntry[] = [\n    {\n      title: 'PORT CALLS',\n      iconPath: this.iconPath + 'portcall.png',\n      menuName: CONTENT_NAMES.VIEW_PORT_CALLS\n    },\n    {\n      title: 'USERS',\n      iconPath: this.iconPath + 'user.png',\n      menuName: CONTENT_NAMES.VIEW_USERS\n    },\n    {\n      title: 'SHIPS',\n      iconPath: this.iconPath + 'ship.png',\n      menuName: CONTENT_NAMES.VIEW_SHIPS\n    },\n    {\n      title: 'LOCATIONS',\n      iconPath: this.iconPath + 'location.png',\n      menuName: CONTENT_NAMES.LOCATIONS\n    },\n    {\n      title: 'ORGANIZATIONS',\n      iconPath: this.iconPath + 'pax.png',\n      menuName: CONTENT_NAMES.VIEW_ORGANIZATIONS\n    }\n  ];\n\n  permissions = MenuClaims.PERMISSIONS;\n\n  constructor(\n    private loginService: LoginService,\n    private contentService: ContentService,\n    private accountService: AccountService,\n    private dbConnectionService: DbConnectionService,\n    private router: Router\n  ) {\n    this.online$ = merge(\n      of(navigator.onLine),\n      fromEvent(window, 'online').pipe(mapTo(true)),\n      fromEvent(window, 'offline').pipe(mapTo(false))\n    );\n  }\n\n  ngOnInit() {\n    this.subscription = this.loginService.authNavStatus$.subscribe(\n      status => (this.loggedIn = status)\n    );\n    this.contentService.contentName$.subscribe(\n      () => (this.menuIsCollapsed = true)\n    );\n\n    this.accountService.userClaimsData$.subscribe(userClaims => {\n      if (userClaims) {\n        const userClaimsTypeMenu = userClaims.filter(\n          claim => claim.type === MenuClaims.TYPE\n        );\n        const keys = Object.keys(this.permissions);\n        keys.forEach(key => {\n          this.permissions[key] = userClaimsTypeMenu.some(\n            claim => claim.value === key\n          );\n        });\n        this.generateMenu();\n      }\n    });\n\n    if (this.loggedIn) {\n      this.accountService.getDisplayName().subscribe(result => {\n        if (result) {\n          this.userName = result;\n        }\n      });\n    }\n\n    this.startDbConnectionCheck();\n  }\n\n  whatsNew() {\n    this.contentService.setContent(CONTENT_NAMES.WHATS_NEW);\n  }\n\n  ngOnDestroy() {\n    // prevent memory leak by unsubscribing\n    this.subscription.unsubscribe();\n    this.dbConnectionSubscription.unsubscribe();\n  }\n\n  private startDbConnectionCheck() {\n    if (this.dbConnectionSubscription) {\n      this.dbConnectionSubscription.unsubscribe();\n    }\n    this.dbConnectionSubscription = Observable.interval(this.hasDbConnection && this.hasServerConnection ? 15000 : 5000).subscribe(() => {\n      this.dbConnectionService.getHasDbConnection().subscribe(\n        hasConnection => {\n          this.hasServerConnection = true;\n          if (this.hasDbConnection !== hasConnection) {\n            this.hasDbConnection = hasConnection;\n            this.startDbConnectionCheck();\n          }\n        },\n        error => {\n          this.hasServerConnection = false;\n          this.startDbConnectionCheck();\n        }\n      );\n    });\n  }\n\n  private generateMenu() {\n    this.setMenuEntries();\n  }\n\n  private setMenuEntries() {\n    // Populates the menu entry list with the entries the user has access to\n\n    this.userMenuEntries = [];\n    for (const menuEntry of this.menuEntries) {\n      const menuName = menuEntry.menuName;\n      if (this.permissions[menuName]) {\n        this.userMenuEntries.push(\n          this.menuEntries.find(\n            newMenuEntry => newMenuEntry.menuName === menuName\n          )\n        );\n      }\n    }\n  }\n\n  logout() {\n    // To prevent logout button from disappearing before\n    // redirection has begun\n    this.redirected = true;\n\n    this.loginService.logout();\n    this.router.navigate(['/auth/login']);\n  }\n\n  navigateToMyAccountPage() {\n    this.contentService.setContent(CONTENT_NAMES.ACCOUNT_HOME);\n  }\n\n  setContent(contentName: string) {\n    this.contentService.setContent(contentName);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/header/header.component.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HeaderHomeComponent } from './header-home/header-home.component';\nimport { HeaderComponent } from './header.component';\nimport { WhatsNewComponent } from './whats-new/whats-new.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    RouterModule\n  ],\n  declarations: [\n    HeaderComponent,\n    HeaderHomeComponent,\n    WhatsNewComponent\n  ],\n  exports: [\n    HeaderComponent,\n    HeaderHomeComponent,\n    WhatsNewComponent\n  ]\n})\nexport class HeaderModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/header/header.module.ts","module.exports = \".whatsNew {\\n    margin: auto;\\n    width: 50%;\\n    padding: 10px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/whats-new/whats-new.component.css\n// module id = ./src/app/main-content/header/whats-new/whats-new.component.css\n// module chunks = main","module.exports = \"<div class=\\\"whatsNew\\\">\\n\\n    <h1>What's New (Last updated: 22.11.2018) </h1>\\n\\n    <h4>Deployment Date: 22.11.2018</h4>\\n\\n    <div>\\n        <b>Changes</b>\\n        <ol>\\n            <li>Features\\n                <ul>\\n                    <li> DPG-FAL  form implemented</li>\\n                </ul>\\n            </li>\\n            <li>Enhancements\\n                <ul>\\n                    <li>\\n                        Improved  loading of port calls\\n                    </li>\\n                    <li>\\n                        User Management (search and edit details)\\n                    </li>\\n                    <li>\\n                        User Information changed to  ‘Created By’ (person creating the ship call report)\\n                    </li>\\n                    <li>\\n                        Listing of pax in summary screen\\n                    </li>\\n                    <li>\\n                        Listing of crew in summary screen\\n                    </li>\\n                    <li>\\n                        Listing of Cargo in summary screen\\n                    </li>\\n                </ul>\\n            </li>\\n            <li>Fixes\\n                <ul>\\n                    <li>\\n                        Identity Document accepts alfa numeric values\\n                    </li>\\n                    <li>\\n                        CallSign validation, 4-8 characters\\n                    </li>\\n                    <li>\\n                        Ship Registry Number accepts alfa numeric values\\n                    </li>\\n                    <li>\\n                        Changes in Ship Registration GUI (cosmetic)\\n                    </li>\\n                    <li>\\n                        Location Code 2 char + 3 char\\n                    </li>\\n                    <li>\\n                        Removed Article Code from Ship Stores\\n                    </li>\\n                    <li>\\n                        Fixed some typos\\n                    </li>\\n                    <li>\\n                        MMSI and IMO # validation\\n                    </li>\\n                    <li>\\n                        Location Codes validation (unique code)\\n                    </li>\\n                    <li>\\n                        Identity Document Issue/Expiry date required\\n                    </li>\\n                </ul>\\n            </li>\\n        </ol>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/whats-new/whats-new.component.html\n// module id = ./src/app/main-content/header/whats-new/whats-new.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-whats-new',\n  templateUrl: './whats-new.component.html',\n  styleUrls: ['./whats-new.component.css']\n})\nexport class WhatsNewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/header/whats-new/whats-new.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  // {\n  //   path: 'user',\n  //   component: null\n  // }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class MainContentRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/main-content-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/main-content.component.css\n// module id = ./src/app/main-content/main-content.component.css\n// module chunks = main","module.exports = \"<base href=\\\"/\\\">\\n<app-header></app-header>\\n<div class=\\\"mt-2 mx-sm-auto mx-md-2 mx-lg-4\\\">\\n  <app-content-container></app-content-container>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/main-content.component.html\n// module id = ./src/app/main-content/main-content.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'app/shared/services/account.service';\n\n@Component({\n  selector: 'app-main-content',\n  templateUrl: './main-content.component.html',\n  styleUrls: ['./main-content.component.css']\n})\nexport class MainContentComponent implements OnInit {\n  constructor(private accountService: AccountService) {}\n\n  ngOnInit() {\n    let userClaims;\n    if ((userClaims = localStorage.getItem('user_claims'))) {\n      this.accountService.setUserClaims(JSON.parse(userClaims));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/main-content.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/action-buttons/action-buttons.component.css\n// module id = ./src/app/shared/components/action-buttons/action-buttons.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\n  <div class=\\\"d-table-row\\\">\\n\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"View\\\">\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onViewClick()\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/eye.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"d-table-cell pl-1\\\">\\n\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Edit\\\" (click)=\\\"onEditClick()\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"d-table-cell pl-1\\\">\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Delete\\\" (click)=\\\"onDeleteClick()\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<ng-template #deleteModal let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Delete</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      <span>Are you sure you wish to delete this entry?</span>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"onDeleteClick(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\n      <span>Delete Port Call</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\n      <span>Exit</span>\\n    </button>\\n  </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/action-buttons/action-buttons.component.html\n// module id = ./src/app/shared/components/action-buttons/action-buttons.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FORM_NAMES } from 'app/shared/constants/form-names';\nimport { ViewCell } from 'ng2-smart-table';\n\n@Component({\n  selector: 'app-action-buttons',\n  templateUrl: './action-buttons.component.html',\n  styleUrls: ['./action-buttons.component.css']\n})\nexport class ActionButtonsComponent implements OnInit, ViewCell {\n\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  @Output() view: EventEmitter<any> = new EventEmitter();\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n  @Output() delete: EventEmitter<any> = new EventEmitter();\n\n  selectedForm: string;\n  formNames: any;\n\n  constructor(\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n    this.formNames = FORM_NAMES;\n  }\n\n  openModal(content: any) {\n    this.modalService.open(content);\n  }\n\n  onViewClick() {\n    this.view.emit(this.rowData);\n  }\n\n  onEditClick() {\n    this.edit.emit(this.rowData);\n  }\n\n  onDeleteClick() {\n    this.delete.emit(this.rowData);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/action-buttons/action-buttons.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.css\n// module id = ./src/app/shared/components/confirmation-modal/confirmation-modal.component.css\n// module chunks = main","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">{{ headerText }}</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  {{ bodyText }}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"activeModal.close('Close click')\\\">Close</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.html\n// module id = ./src/app/shared/components/confirmation-modal/confirmation-modal.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-confirmation-modal',\n  templateUrl: './confirmation-modal.component.html',\n  styleUrls: ['./confirmation-modal.component.css']\n})\nexport class ConfirmationModalComponent implements OnInit {\n  static TYPE_SUCCESS = 'SUCCESS';\n  static TYPE_WARNING = 'WARNING';\n  static TYPE_FAILURE = 'FAILURE';\n\n  @Input() headerText: string;\n\n  @Input() bodyText: string;\n\n  @Input() modalType: string;\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  ngOnInit() {\n    this.headerText = this.modalType;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-table-card header=\\\"Cargo Summary\\\" icon=\\\"cargo.png\\\" collapsible=true>\\n      <tbody *ngIf=\\\"numberOfConsignments > 0\\\">\\n        <tr>\\n          <td class=\\\"no-wrap\\\">\\n            <tr>\\n              <small>No. of Consignments</small>\\n            </tr>\\n            <tr>\\n              {{ numberOfConsignments }}\\n            </tr>\\n          </td>\\n          <td class=\\\"no-wrap\\\">\\n            <tr>\\n              <small>Total no. of Cargo Items</small>\\n            </tr>\\n            <tr>\\n              {{ numberOfCargoItems }}\\n            </tr>\\n          </td>\\n          <td class=\\\"no-wrap\\\">\\n            <tr>\\n              <small>Total no. of Packages</small>\\n            </tr>\\n            <tr>\\n              {{ numberOfPackages }}\\n            </tr>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <div *ngIf=\\\"numberOfConsignments === 0\\\" class=\\\"text-center my-3\\\">\\n          <img *ngIf=\\\"iconPath\\\" src=\\\"{{iconPath}}warning.png\\\" height=\\\"24px\\\" />\\n          <span class=\\\"no-wrap\\\">Cargo information</span>\\n          <span class=\\\"no-wrap\\\">is marked for delivery,</span>\\n          <span class=\\\"no-wrap\\\">but no information is provided.</span>\\n        </div>\\n    </app-table-card>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FalCargoService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-cargo-info-table',\n  templateUrl: './cargo-info-table.component.html',\n  styleUrls: ['./cargo-info-table.component.css']\n})\nexport class CargoInfoTableComponent implements OnInit, OnDestroy {\n  @Input() iconPath: string;\n  @Input() portCallId: number;\n\n  cargoDataSubscription: Subscription;\n  numberOfConsignments = 0;\n  numberOfCargoItems = 0;\n  numberOfPackages = 0;\n\n  constructor(\n    private cargoService: FalCargoService\n  ) { }\n\n  ngOnInit() {\n    if (this.portCallId) {\n      this.cargoDataSubscription = this.cargoService.getConsignmentListForPortCall(this.portCallId).subscribe(\n        cargoData => {\n          if (cargoData) {\n            this.numberOfConsignments = cargoData.length;\n            this.numberOfCargoItems = 0;\n            this.numberOfPackages = 0;\n            cargoData.forEach(consignment => {\n              if (consignment.cargoItem && consignment.cargoItem.length > 0) {\n                this.numberOfCargoItems += consignment.cargoItem.length;\n                consignment.cargoItem.forEach(cargoItem => {\n                  if (cargoItem.numberOfPackages != null) {\n                    this.numberOfPackages += cargoItem.numberOfPackages;\n                  }\n                });\n              }\n            });\n          }\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.cargoDataSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ ng2-smart-table tbody {\\n    color: black;\\n    text-transform: uppercase;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/cargo-listing-table/cargo-listing-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/cargo-listing-table/cargo-listing-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-table-card header=\\\"{{headerText}}\\\" icon=\\\"cargo.png\\\" collapsible=true collapsed=true>\\n      <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"cargo\\\"></ng2-smart-table>\\n    </app-table-card>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/cargo-listing-table/cargo-listing-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/cargo-listing-table/cargo-listing-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FalCargoService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\n\n@Component({\n  selector: 'app-cargo-listing-table',\n  templateUrl: './cargo-listing-table.component.html',\n  styleUrls: ['./cargo-listing-table.component.css']\n})\nexport class CargoListingTableComponent implements OnInit, OnDestroy {\n\n  @Input() iconPath: string;\n  @Input() portCallId: number;\n\n  cargoDataSubscription: Subscription;\n\n  public cargo: any = [];\n  public headerText: string;\n\n  // Smart table\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'There is no cargo reported.',\n    columns: {\n      description: {\n        title: 'Description'\n      },\n      grossVolume: {\n        title: 'Gross Volume'\n      },\n      grossWeight: {\n        title: 'Gross Weight'\n      },\n      hsCode: {\n        title: 'hsCode'\n      },\n      numberOfPackages: {\n        title: '# Packages'\n      },\n      packageType: {\n        title: 'Package Types',\n        valuePrepareFunction: (value) => (value) ? value.name : ''\n      }\n    }\n  };\n\n  constructor(private cargoService: FalCargoService) { }\n\n  ngOnInit() {\n    if (this.portCallId) {\n      this.cargoDataSubscription = this.cargoService.getConsignmentListForPortCall(this.portCallId)\n      .finally(() => {\n        this.cargoDataSubscription = this.cargoService.getOverviewByPortCall(this.portCallId).subscribe(summary => {\n          this.headerText = 'Cargo Breakdown - No. Of Consignments: ' + summary.noOfConsignments + ' - Total No. of Cargo Items: ' + summary.noOfCargoItems + ' - Total No of Packages: ' + summary.noOfPackages;\n        });\n      })\n      .subscribe(\n        cargoData => {\n          if (cargoData) {\n            cargoData.forEach((item, idx, arr) => {\n              this.cargo = this.cargo.concat(item.cargoItem);\n            });\n          }\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.cargoDataSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/cargo-listing-table/cargo-listing-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.css\n// module id = ./src/app/shared/components/confirmation-view/clearances/clearances.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Clearances\\\" icon=\\\"stamp.png\\\">\\n  <thead>\\n    <tr>\\n      <th>Type</th>\\n      <th>Status</th>\\n      <th>Given by</th>\\n      <th>Remark</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let clearance of clearanceList\\\">\\n      <td>{{ clearance.organization.name }}</td>\\n      <td>\\n        <div *ngIf=\\\"clearance.cleared\\\" class=\\\"badge badge-success mb-0\\\">\\n          <span>{{ clearance.organization.clearanceIsTrueString }}</span>\\n        </div>\\n        <div *ngIf=\\\"clearance.cleared == null\\\" class=\\\"badge badge-warning mb-0\\\">\\n          <span>{{ clearance.organization.clearanceIsNullString }}</span>\\n        </div>\\n        <div *ngIf=\\\"clearance.cleared == false\\\" class=\\\"badge badge-danger mb-0\\\">\\n          <span>{{ clearance.organization.clearanceIsFalseString }}</span>\\n        </div>\\n      </td>\\n      <td>\\n        <div *ngIf=\\\"clearance.clearedByUser\\\">{{ clearance.clearedByUser.email }}</div>\\n      </td>\\n      <td>{{ clearance.remark }}</td>\\n    </tr>\\n  </tbody>\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.html\n// module id = ./src/app/shared/components/confirmation-view/clearances/clearances.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PortCallService } from 'app/shared/services/port-call.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-clearances',\n  templateUrl: './clearances.component.html',\n  styleUrls: ['./clearances.component.css']\n})\nexport class ClearancesComponent implements OnInit, OnDestroy {\n  clearanceList: any[] = [];\n\n  clearanceListDataSubscription: Subscription;\n\n  constructor(private portCallService: PortCallService) { }\n\n  ngOnInit() {\n    this.clearanceListDataSubscription = this.portCallService.clearanceListData$.subscribe(clearanceListData => {\n      if (clearanceListData) {\n        this.clearanceList = clearanceListData;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.clearanceListDataSubscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.ts","module.exports = \":host ::ng-deep tr > ::ng-deep td {\\n    border-width: 0;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.css\n// module id = ./src/app/shared/components/confirmation-view/confirmation-view.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-prev-and-next-poc-table></app-prev-and-next-poc-table>\\n  </div>\\n</div>\\n\\n<!-- Port Call Details -->\\n<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-port-call-details></app-port-call-details>\\n  </div>\\n</div>\\n\\n\\n<!-- FAL forms -->\\n<div *ngFor=\\\"let entry of falForms\\\">\\n  <div *ngIf=\\\"entry.checked\\\" [ngSwitch]=\\\"entry.name\\\" class=\\\"row mb-3\\\">\\n    <div *ngSwitchCase=\\\"'DPG'\\\" class=\\\"col\\\">\\n      <app-dpg-listing-table [iconPath]=\\\"iconPath\\\" [portCallId]=\\\"portCallId\\\"></app-dpg-listing-table>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Cargo'\\\" class=\\\"col\\\">\\n      <app-cargo-listing-table [iconPath]=\\\"iconPath\\\" [portCallId]=\\\"portCallId\\\"></app-cargo-listing-table>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Ship Stores'\\\" class=\\\"col\\\">\\n      <app-ship-stores-listing-table [iconPath]=\\\"iconPath\\\" [portCallId]=\\\"portCallId\\\"></app-ship-stores-listing-table>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Crew'\\\" class=\\\"col\\\">\\n      <app-crew-listing-table [iconPath]=\\\"iconPath\\\" [portCallId]=\\\"portCallId\\\"></app-crew-listing-table>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Pax'\\\" class=\\\"col\\\">\\n      <app-passenger-listing-table [iconPath]=\\\"iconPath\\\" [portCallId]=\\\"portCallId\\\"></app-passenger-listing-table>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Security'\\\" class=\\\"col\\\">\\n      <app-table-card header=\\\"{{entry.name}}\\\" icon=\\\"{{entry.icon}}\\\" collapsible=true>\\n        <div class=\\\"text-center my-3\\\">\\n          <span class=\\\"no-wrap\\\">Security/ISPS information has been provided.</span>\\n        </div>\\n      </app-table-card>\\n    </div>\\n    <div *ngSwitchDefault class=\\\"col\\\">\\n      <app-table-card header=\\\"{{entry.name}}\\\" icon=\\\"{{entry.icon}}\\\" collapsible=true>\\n        <div class=\\\"text-center my-3\\\">\\n          <img src=\\\"{{iconPath}}warning.png\\\" height=\\\"24px\\\" />\\n          <span class=\\\"no-wrap\\\">{{ entry.name }} information</span>\\n          <span class=\\\"no-wrap\\\">is marked for delivery,</span>\\n          <span class=\\\"no-wrap\\\">but no information is provided.</span>\\n        </div>\\n      </app-table-card>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-user-info-table header=\\\"Created By\\\"></app-user-info-table>\\n  </div>\\n</div>\\n\\n<!-- Clearance information -->\\n<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-clearances></app-clearances>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.html\n// module id = ./src/app/shared/components/confirmation-view/confirmation-view.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit  } from '@angular/core';\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-confirmation-view',\n  templateUrl: './confirmation-view.component.html',\n  styleUrls: ['./confirmation-view.component.css']\n})\nexport class ConfirmationViewComponent implements OnInit, OnDestroy {\n  iconPath = 'assets/images/icons/128x128/white/';\n  falForms: any;\n  reportingCargo = false;\n  portCallId: number;\n\n  reportingForThisPortCallDataSubcription: Subscription;\n\n  constructor(\n    private portCallDetailsService: PortCallDetailsService\n  ) { }\n\n  ngOnInit() {\n    this.reportingForThisPortCallDataSubcription = this.portCallDetailsService.reportingForThisPortCallData$.subscribe(\n      reportingData => {\n        if (reportingData != null) {\n          this.portCallId = reportingData.portCallId;\n          this.reportingCargo = reportingData.reportingCargo || false;\n          this.falForms = [\n            {\n              name: 'DPG',\n              icon: 'hazard.png',\n              checked: reportingData.reportingDpg || false\n            },\n            {\n              name: 'Cargo',\n              icon: 'cargo.png',\n              checked: reportingData.reportingCargo || false\n            },\n            {\n              name: 'Ship Stores',\n              icon: 'alcohol.png',\n              checked: reportingData.reportingShipStores || false\n            },\n            {\n              name: 'Crew',\n              icon: 'crew.png',\n              checked: reportingData.reportingCrew || false\n            },\n            {\n              name: 'Pax',\n              icon: 'pax.png',\n              checked: reportingData.reportingPax || false\n            },\n            {\n              name: 'Security',\n              icon: 'security.png',\n              checked: reportingData.reportingSecurity || false\n            }\n          ];\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.reportingForThisPortCallDataSubcription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.ts","module.exports = \":host ::ng-deep td {\\n    margin: auto;\\n}\\n\\n:host ::ng-deep td > ::ng-deep tbody {\\n    text-align: center;\\n    display: inline-block;\\n    margin: 0 auto;\\n}\\n\\n:host ::ng-deep tr > ::ng-deep td {\\n    text-align: center;\\n    display: inline-block;\\n    margin: 0 auto;\\n    border-width: 0;\\n}\\n\\n:host ::ng-deep tbody > ::ng-deep tr {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/crew-info-table/crew-info-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/crew-info-table/crew-info-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n    <div class=\\\"col\\\">\\n      <app-table-card header=\\\"Crew\\\" icon=\\\"crew.png\\\" collapsible=true>\\n        <tbody *ngIf=\\\"numberOfCrew > 0\\\">\\n          <tr>\\n            <td class=\\\"no-wrap\\\">\\n              <tr>\\n                <small>No. of Crew</small>\\n              </tr>\\n              <tr>\\n                {{ numberOfCrew }}\\n              </tr>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <div *ngIf=\\\"numberOfCrew === 0\\\" class=\\\"text-center my-3\\\">\\n            <img *ngIf=\\\"iconPath\\\" src=\\\"{{iconPath}}warning.png\\\" height=\\\"24px\\\" />\\n            <span class=\\\"no-wrap\\\">Crew information</span>\\n            <span class=\\\"no-wrap\\\">is marked for delivery,</span>\\n            <span class=\\\"no-wrap\\\">but no information is provided.</span>\\n          </div>\\n      </app-table-card>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/crew-info-table/crew-info-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/crew-info-table/crew-info-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { PortCallFalPersonOnBoardService } from 'app/shared/services/port-call-fal-person-on-board.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-crew-info-table',\n  templateUrl: './crew-info-table.component.html',\n  styleUrls: ['./crew-info-table.component.css']\n})\nexport class CrewInfoTableComponent implements OnInit, OnDestroy {\n  @Input() iconPath: string;\n  @Input() portCallId: number;\n\n  crewDataSubscription: Subscription;\n  numberOfCrew = 0;\n\n  constructor(\n    private personOnBoardService: PortCallFalPersonOnBoardService\n  ) { }\n\n  ngOnInit() {\n    if (this.portCallId) {\n      this.crewDataSubscription = this.personOnBoardService.getCrewListByPortCallId(this.portCallId).subscribe(\n        crewList => {\n          if (crewList) {\n            this.numberOfCrew = crewList.length;\n          }\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.crewDataSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/crew-info-table/crew-info-table.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ ng2-smart-table tbody {\\n    color: black;\\n    text-transform: uppercase;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/crew-listing-table/crew-listing-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/crew-listing-table/crew-listing-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-table-card header=\\\"{{headerText}}\\\" icon=\\\"crew.png\\\" collapsible=true collapsed=true>\\n      <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"crew\\\"></ng2-smart-table>\\n    </app-table-card>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/crew-listing-table/crew-listing-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/crew-listing-table/crew-listing-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { PERSON_ON_BOARD_TYPES } from 'app/shared/constants/enumValues';\nimport { PortCallFalPersonOnBoardService } from 'app/shared/services/port-call-fal-person-on-board.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n\n@Component({\n  selector: 'app-crew-listing-table',\n  templateUrl: './crew-listing-table.component.html',\n  styleUrls: ['./crew-listing-table.component.css']\n})\nexport class CrewListingTableComponent implements OnInit, OnDestroy {\n\n  @Input() iconPath: string;\n  @Input() portCallId: number;\n\n  crewDataSubscription: Subscription;\n\n  public crew: any = [];\n  public headerText: string;\n\n  // Smart table\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'There are no crew members reported.',\n    columns: {\n      familyName: {\n        title: 'Family Name'\n      },\n      givenName: {\n        title: 'Given Name'\n      },\n      rankName: {\n        title: 'Rank or Rating'\n      },\n      nationality: {\n        title: 'Nationality',\n        valuePrepareFunction: (value) => (value) ? value.name : 'N/A'\n      },\n      dateOfBirth: {\n        title: 'Date of Birth',\n        valuePrepareFunction: (value) => (value) ? new Date(value).toDateString() : ''\n      },\n      placeOfBirth: {\n        title: 'Place of Birth'\n      },\n      identityDocument: {\n        title: 'ID Type and Number',\n        valuePrepareFunction: (value) => {\n          if (value[0] == null || value[0] === undefined || value.length === 0) {\n            return 'N/A';\n          }\n          let returnVal = '';\n          if (value[0].identityDocumentType != null && value[0].identityDocumentType !== undefined) {\n            returnVal += value[0].identityDocumentType.description;\n          }\n          if (value[0].identityDocumentNumber != null && value[0].identityDocumentNumber !== undefined) {\n            returnVal += ' : ' + value[0].identityDocumentNumber;\n          }\n          if (returnVal.trim().length === 0) {\n            returnVal = 'N/A';\n          }\n          return returnVal;\n        }\n      },\n    }\n  };\n\n  constructor(private personOnBoardService: PortCallFalPersonOnBoardService) { }\n\n  ngOnInit() {\n\n    if (this.portCallId) {\n      this.crewDataSubscription = this.personOnBoardService.getCrewListByPortCallId(this.portCallId)\n      .finally(() => {\n        this.crewDataSubscription = this.personOnBoardService.getOverviewByPortCall(this.portCallId, PERSON_ON_BOARD_TYPES.CREW)\n        .subscribe(summary => {\n          this.headerText = 'Crew Info - No. of Crew: ' + summary.numberOfPobs;\n        }, error => {\n          this.headerText = 'Crew Info';\n        });\n      })\n      .subscribe(\n        crewList => {\n          if (crewList) {\n            this.crew = crewList;\n          }\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.crewDataSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/crew-listing-table/crew-listing-table.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ ng2-smart-table tbody {\\n    color: black;\\n    text-transform: uppercase;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/dpg-listing-table/dpg-listing-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/dpg-listing-table/dpg-listing-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-table-card header=\\\"{{headerText}}\\\" icon=\\\"hazard.png\\\" collapsible=true collapsed=true>\\n      <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dpg\\\"></ng2-smart-table>\\n    </app-table-card>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/dpg-listing-table/dpg-listing-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/dpg-listing-table/dpg-listing-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DpgService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n@Component({\n  selector: 'app-dpg-listing-table',\n  templateUrl: './dpg-listing-table.component.html',\n  styleUrls: ['./dpg-listing-table.component.css']\n})\nexport class DpgListingTableComponent implements OnInit, OnDestroy {\n\n  @Input() iconPath: string;\n  @Input() portCallId: number;\n\n  dpgDataSubscription: Subscription;\n\n  public dpg: any = [];\n  public headerText: string;\n\n    // Smart table\n    tableSettings = {\n      mode: 'external',\n      actions: false,\n      attr: {\n        class: 'table table-bordered'\n      },\n      noDataMessage: 'There are no DPGs reported.',\n      columns: {\n        classification: {\n          title: 'Classification'\n        },\n        unNoName: {\n          title: 'UN No/Name'\n        },\n        name: {\n          title: 'Name'\n        },\n        grossWeightVolume: {\n          title: 'Gross Weight/Volume',\n          valuePrepareFunction: (value) => {\n            let returnVal = '';\n            if (value.grossWeight != null && value.grossWeight !== undefined) {\n              returnVal += value.grossWeight;\n            }\n            if (value.name != null && value.name !== undefined) {\n              returnVal += ' ' + value.name;\n            }\n            if (returnVal.trim().length === 0) {\n              returnVal = 'N/A';\n            }\n            return returnVal;\n          }\n        },\n        netWeightVolume: {\n          title: 'Net Weight/Volume',\n          valuePrepareFunction: (value) => {\n            let returnVal = '';\n            if (value.netWeight != null && value.netWeight !== undefined) {\n              returnVal += value.netWeight;\n            }\n            if (value.name != null && value.name !== undefined) {\n              returnVal += ' ' + value.name;\n            }\n            if (returnVal.trim().length === 0) {\n              returnVal = 'N/A';\n            }\n            return returnVal;\n          }\n        },\n        locationOnBoard: {\n          title: 'Location on Board'\n        },\n        transportUnitIdentification: {\n          title: 'Tranportation Unit ID'\n        },\n        placedInContainer: {\n          title: 'Placed in Container'\n        }\n      }\n    };\n\n  constructor(private dpgService: DpgService) { }\n\n  ngOnInit() {\n    if (this.portCallId) {\n      this.dpgDataSubscription = this.dpgService.getDpgOnBoardOverviewByPortCall(this.portCallId).subscribe(res => {\n        this.dpg = res;\n        this.headerText = 'DPG Info - Total DPG\\'s reported: ' + res.length;\n      }, error => {\n        this.headerText = 'DPG Info';\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.dpgDataSubscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/dpg-listing-table/dpg-listing-table.component.ts","module.exports = \":host ::ng-deep td {\\n    margin: auto;\\n}\\n\\n:host ::ng-deep td > ::ng-deep tbody {\\n    text-align: center;\\n    display: inline-block;\\n    margin: 0 auto;\\n}\\n\\n:host ::ng-deep tr > ::ng-deep td {\\n    text-align: center;\\n    display: inline-block;\\n    margin: 0 auto;\\n    border-width: 0;\\n}\\n\\n:host ::ng-deep tbody > ::ng-deep tr {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/passenger-info-table/passenger-info-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/passenger-info-table/passenger-info-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n    <div class=\\\"col\\\">\\n      <app-table-card header=\\\"Pax\\\" icon=\\\"pax.png\\\" collapsible=true>\\n        <tbody *ngIf=\\\"numberOfPassengers > 0\\\">\\n          <tr>\\n            <td class=\\\"no-wrap\\\">\\n              <tr>\\n                <small>No. of Passengers</small>\\n              </tr>\\n              <tr>\\n                {{ numberOfPassengers }}\\n              </tr>\\n            </td>\\n            <td class=\\\"no-wrap\\\">\\n              <tr>\\n                <small>No. of Passengers in Transit</small>\\n              </tr>\\n              <tr>\\n                {{ passengersInTransit }}\\n              </tr>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <div *ngIf=\\\"numberOfPassengers === 0\\\" class=\\\"text-center my-3\\\">\\n          <img *ngIf=\\\"iconPath\\\" src=\\\"{{iconPath}}warning.png\\\" height=\\\"24px\\\" />\\n          <span class=\\\"no-wrap\\\">Passenger information</span>\\n          <span class=\\\"no-wrap\\\">is marked for delivery,</span>\\n          <span class=\\\"no-wrap\\\">but no information is provided.</span>\\n        </div>\\n  \\n      </app-table-card>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/passenger-info-table/passenger-info-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/passenger-info-table/passenger-info-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { PortCallFalPersonOnBoardService } from 'app/shared/services/port-call-fal-person-on-board.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-passenger-info-table',\n  templateUrl: './passenger-info-table.component.html',\n  styleUrls: ['./passenger-info-table.component.css']\n})\nexport class PassengerInfoTableComponent implements OnInit, OnDestroy {\n  @Input() iconPath: string;\n  @Input() portCallId: number;\n\n  passengerDataSubscription: Subscription;\n  numberOfPassengers = 0;\n  passengersInTransit = 0;\n\n  constructor(\n    private personOnBoardService: PortCallFalPersonOnBoardService\n  ) { }\n\n  ngOnInit() {\n    if (this.portCallId) {\n      this.passengerDataSubscription = this.personOnBoardService.getPassengerListByPortCallId(this.portCallId).subscribe(\n        passengerList => {\n          if (passengerList) {\n            this.numberOfPassengers = passengerList.length;\n            passengerList.forEach(passenger => {\n              if (passenger.inTransit === true) {\n                this.passengersInTransit += 1;\n              }\n            });\n          }\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.passengerDataSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/passenger-info-table/passenger-info-table.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ ng2-smart-table tbody {\\n    color: black;\\n    text-transform: uppercase;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/passenger-listing-table/passenger-listing-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/passenger-listing-table/passenger-listing-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-table-card header=\\\"{{headerText}}\\\" icon=\\\"pax.png\\\" collapsible=true collapsed=true>\\n      <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"passengers\\\"></ng2-smart-table>\\n    </app-table-card>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/passenger-listing-table/passenger-listing-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/passenger-listing-table/passenger-listing-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { PERSON_ON_BOARD_TYPES } from 'app/shared/constants/enumValues';\nimport { PortCallFalPersonOnBoardService } from 'app/shared/services/port-call-fal-person-on-board.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n\n@Component({\n  selector: 'app-passenger-listing-table',\n  templateUrl: './passenger-listing-table.component.html',\n  styleUrls: ['./passenger-listing-table.component.css']\n})\nexport class PassengerListingTableComponent implements OnInit, OnDestroy {\n\n  @Input() iconPath: string;\n  @Input() portCallId: number;\n\n  passengerDataSubscription: Subscription;\n\n  public passengers: any = [];\n  public headerText: string;\n\n  // Smart table\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'There are no passengers reported.',\n    columns: {\n      familyName: {\n        title: 'Family Name'\n      },\n      givenName: {\n        title: 'Given Name'\n      },\n      nationality: {\n        title: 'Nationality',\n        valuePrepareFunction: (value) => (value) ? value.name : ''\n      },\n      dateOfBirth: {\n        title: 'Date of Birth',\n        valuePrepareFunction: (value) => (value) ? new Date(value).toDateString() : ''\n      },\n      placeOfBirth: {\n        title: 'Place of Birth'\n      },\n      identityDocument: {\n        title: 'ID Type and Number',\n        valuePrepareFunction: (value) => {\n          if (value[0] == null || value[0] === undefined || value.length === 0) {\n            return 'N/A';\n          }\n          let returnVal = '';\n          if (value[0].identityDocumentType != null && value[0].identityDocumentType !== undefined) {\n            returnVal += value[0].identityDocumentType.description;\n          }\n          if (value[0].identityDocumentNumber != null && value[0].identityDocumentNumber !== undefined) {\n            returnVal += ' : ' + value[0].identityDocumentNumber;\n          }\n          if (returnVal.trim().length === 0) {\n            returnVal = 'N/A';\n          }\n          return returnVal;\n        }\n      },\n    }\n  };\n\n  constructor(private personOnBoardService: PortCallFalPersonOnBoardService) { }\n\n  ngOnInit() {\n\n    if (this.portCallId) {\n      this.passengerDataSubscription = this.personOnBoardService.getPassengerListByPortCallId(this.portCallId)\n      .finally(() => {\n        this.passengerDataSubscription = this.personOnBoardService.getOverviewByPortCall(this.portCallId, PERSON_ON_BOARD_TYPES.PAX)\n        .subscribe(summary => {\n          this.headerText = 'Passenger Info - No. of Passengers: ' + summary.numberOfPobs + ' - No. of Passengers in Transit : ' + summary.numberInTransit;\n        }, error => {\n          this.headerText = 'Passenger Info';\n        });\n      })\n      .subscribe(\n        passengerList => {\n          if (passengerList) {\n            this.passengers = passengerList;\n          }\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.passengerDataSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/passenger-listing-table/passenger-listing-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-table-card header=\\\"Crew, Passengers and Dimensions\\\" icon=\\\"crew.png\\\" collapsible=true>\\n      <tbody>\\n        <tr>\\n          <td *ngFor=\\\"let entry of portCallDetailsInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\n            <tr>\\n              <small>{{entry.description}}</small>\\n            </tr>\\n            <tr>\\n              <div *ngIf=\\\"entry.data != null\\\">{{ entry.data }}</div>\\n              <div *ngIf=\\\"entry.data == null\\\" class=\\\"font-italic\\\">Not provided.</div>\\n            </tr>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </app-table-card>\\n    <br/>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-selected-purposes></app-selected-purposes>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst NO_OF_CREW = 'No. of Crew';\nconst NO_OF_PASSENGERS = 'No. of Passengers';\nconst ACTUAL_DRAUGHT = 'Actual Draught';\nconst AIR_DRAUGHT = 'Air Draught';\n\n@Component({\n  selector: 'app-port-call-details',\n  templateUrl: './port-call-details.component.html',\n  styleUrls: ['./port-call-details.component.css']\n})\nexport class PortCallDetailsComponent implements OnInit, OnDestroy {\n  portCallDetailsInfo: any[] = [\n    { description: NO_OF_CREW, data: null },\n    { description: NO_OF_PASSENGERS, data: null },\n    { description: ACTUAL_DRAUGHT, data: null },\n    { description: AIR_DRAUGHT, data: null }\n  ];\n\n  portCallId: number;\n\n  crewPassengersAndDimensionsDataSubscription: Subscription;\n\n  constructor(private portCallDetailsService: PortCallDetailsService) {}\n\n  ngOnInit() {\n    this.crewPassengersAndDimensionsDataSubscription = this.portCallDetailsService.crewPassengersAndDimensionsData$.subscribe(data => {\n      if (data != null) {\n        this.portCallDetailsInfo.find(p => p.description === NO_OF_CREW).data =\n          data.numberOfCrew;\n        this.portCallDetailsInfo.find(\n          p => p.description === NO_OF_PASSENGERS\n        ).data =\n          data.numberOfPassengers;\n        this.portCallDetailsInfo.find(\n          p => p.description === ACTUAL_DRAUGHT\n        ).data =\n          data.actualDraught;\n        this.portCallDetailsInfo.find(p => p.description === AIR_DRAUGHT).data =\n          data.airDraught;\n      }\n    });\n\n    // get reporting data to gather portCallId of selected port call.\n    this.portCallDetailsService.reportingForThisPortCallData$.subscribe(reportingData => {\n\n      if (reportingData != null) {\n        this.portCallId = reportingData.portCallId;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.crewPassengersAndDimensionsDataSubscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Selected Purposes\\\" icon=\\\"target.png\\\" collapsible=true>\\n  <tbody class=\\\"border-top-0\\\">\\n    <tr>\\n      <td *ngFor=\\\"let purpose of selectedPurposes; let isFirst=first\\\" [ngClass]=\\\"{'border-left': !isFirst}\\\"> {{ getPurposeName(purpose.portCallPurposeId) }} </td>\\n    </tr>\\n  </tbody>\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PortCallDetailsService, PurposeService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst OTHER_PURPOSE_ID = '100249';\n\n@Component({\n  selector: 'app-selected-purposes',\n  templateUrl: './selected-purposes.component.html',\n  styleUrls: ['./selected-purposes.component.css'],\n  providers: [PurposeService]\n})\nexport class SelectedPurposesComponent implements OnInit, OnDestroy {\n  selectedPurposes: any;\n  purposeList: any[];\n\n  otherPurposeName = '';\n\n  getPurposesSubscription: Subscription;\n  portCallPurposeDataSubscription: Subscription;\n  otherPurposeNameSubscription: Subscription;\n\n  constructor(\n    private purposeService: PurposeService,\n    private portCallDetailsService: PortCallDetailsService\n  ) {}\n\n  ngOnInit() {\n    this.getPurposesSubscription = this.purposeService.getPurposes().subscribe(data => {\n      this.purposeList = data;\n    });\n    this.portCallPurposeDataSubscription = this.portCallDetailsService.portCallPurposeData$.subscribe(data => {\n      if (data != null) {\n        this.selectedPurposes = data;\n      }\n    });\n    this.otherPurposeNameSubscription = this.portCallDetailsService.otherPurposeName$.subscribe(data => {\n      this.otherPurposeName = data;\n    });\n  }\n\n  ngOnDestroy() {\n    this.getPurposesSubscription.unsubscribe();\n    this.portCallPurposeDataSubscription.unsubscribe();\n    this.otherPurposeNameSubscription.unsubscribe();\n  }\n\n  getPurposeName(id) {\n    if (this.purposeList != null) {\n      const purpose = this.purposeList.find(p => p.portCallPurposeId === id);\n      if (purpose.portCallPurposeId !== OTHER_PURPOSE_ID) {\n        return purpose != null ? purpose.name : null;\n      } else {\n        return this.otherPurposeName === ''\n          ? 'Other purpose is undefined'\n          : 'Other: \"' + this.otherPurposeName + '\"';\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/ship-stores-info-table/ship-stores-info-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/ship-stores-info-table/ship-stores-info-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-table-card header=\\\"Ship Stores\\\" icon=\\\"alcohol.png\\\" collapsible=true>\\n      <tbody *ngIf=\\\"numberOfShipStores > 0\\\">\\n        <tr>\\n          <td class=\\\"no-wrap\\\">\\n            <tr>\\n              <small>No. of Ship Stores</small>\\n            </tr>\\n            <tr>\\n              {{ numberOfShipStores }}\\n            </tr>\\n          </td>\\n          <td class=\\\"no-wrap\\\">\\n            <tr>\\n              <small>Total Registered Weight</small>\\n            </tr>\\n            <tr>\\n              {{ totalWeight }} kg\\n            </tr>\\n          </td>\\n          <td class=\\\"no-wrap\\\">\\n            <tr>\\n              <small>Total Registered Volume</small>\\n            </tr>\\n            <tr>\\n              {{ totalVolume }} liter\\n            </tr>\\n          </td>\\n          <td class=\\\"no-wrap\\\">\\n            <tr>\\n              <small>Total Registered Units</small>\\n            </tr>\\n            <tr>\\n              {{ totalUnits }} u\\n            </tr>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <div *ngIf=\\\"numberOfShipStores === 0\\\" class=\\\"text-center my-3\\\">\\n        <img *ngIf=\\\"iconPath\\\" src=\\\"{{iconPath}}warning.png\\\" height=\\\"24px\\\" />\\n        <span class=\\\"no-wrap\\\">Ship stores information</span>\\n        <span class=\\\"no-wrap\\\">is marked for delivery,</span>\\n        <span class=\\\"no-wrap\\\">but no information is provided.</span>\\n      </div>\\n\\n    </app-table-card>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/ship-stores-info-table/ship-stores-info-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/ship-stores-info-table/ship-stores-info-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-ship-stores-info-table',\n  templateUrl: './ship-stores-info-table.component.html',\n  styleUrls: ['./ship-stores-info-table.component.css']\n})\nexport class ShipStoresInfoTableComponent implements OnInit, OnDestroy {\n  @Input() iconPath: string;\n  @Input() portCallId: number;\n\n  shipStoresDataSubscription: Subscription;\n  numberOfShipStores = 0;\n  totalWeight = 0; // In kg\n  totalVolume = 0; // In liter\n  totalUnits = 0;\n\n  constructor(\n    private shipStoresService: FalShipStoresService\n  ) { }\n\n  ngOnInit() {\n    if (this.portCallId) {\n      this.shipStoresDataSubscription = this.shipStoresService.getShipStoresByPortCallId(this.portCallId).subscribe(\n        shipStores => {\n          if (shipStores) {\n            this.numberOfShipStores = shipStores.length;\n            shipStores.forEach(item => {\n              if (item.measurementType) {\n                if (item.measurementType.name === 'Kilograms (kg)' && item.quantity) {\n                  this.totalWeight += item.quantity;\n                } else if (item.measurementType.name === 'Tonne (t)' && item.quantity) {\n                  this.totalWeight += item.quantity * 1000;\n                } else if (item.measurementType.name === 'Liter (l)' && item.quantity) {\n                  this.totalVolume += item.quantity;\n                } else if (item.measurementType.name === 'Cubic Meters (m3)' && item.quantity) {\n                  this.totalVolume += item.quantity * 1000;\n                } else if (item.measurementType.name === 'Units (u)' && item.quantity) {\n                  this.totalUnits += item.quantity;\n                }\n              }\n            });\n          }\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.shipStoresDataSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/ship-stores-info-table/ship-stores-info-table.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ ng2-smart-table tbody {\\n    color: black;\\n    text-transform: uppercase;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/ship-stores-listing-table/ship-stores-listing-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/ship-stores-listing-table/ship-stores-listing-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\n  <div class=\\\"col\\\">\\n    <app-table-card header=\\\"{{headerText}}\\\" icon=\\\"alcohol.png\\\" collapsible=true collapsed=true>\\n      <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"shipStores\\\"></ng2-smart-table>\\n    </app-table-card>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/ship-stores-listing-table/ship-stores-listing-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/ship-stores-listing-table/ship-stores-listing-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FalShipStoresService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\n\n@Component({\n  selector: 'app-ship-stores-listing-table',\n  templateUrl: './ship-stores-listing-table.component.html',\n  styleUrls: ['./ship-stores-listing-table.component.css']\n})\nexport class ShipStoresListingTableComponent implements OnInit, OnDestroy {\n\n  @Input() iconPath: string;\n  @Input() portCallId: number;\n\n  shipStoreDataSubscription: Subscription;\n\n  public shipStores: any = [];\n  public headerText: string;\n\n  constructor(\n    private shipStoreService: FalShipStoresService\n  ) { }\n\n  // Smart table\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'There are no Ship Stores reported.',\n    columns: {\n      articleName: {\n        title: 'Article Name',\n        valuePrepareFunction: (value) => {\n          return (value) ? value : 'N/A';\n        }\n      },\n      quantity: {\n        title: 'Quantity',\n        valuePrepareFunction: (value) => {\n          return (value) ? value : 'N/A';\n        }\n      },\n      measurementType: {\n        title: 'Measurement Type',\n        valuePrepareFunction: (value) => {\n          return (value) ? value : 'N/A';\n        }\n      },\n      locationOnBoardAndCode: {\n        title: 'Location on Board',\n        valuePrepareFunction: (value) => {\n          let returnVal = '';\n          if (value.name != null && value.name !== undefined) {\n            returnVal += value.name;\n          }\n          if (value.code != null && value.code !== undefined) {\n            returnVal += ' (' + value.code + ')';\n          }\n          if (returnVal.trim().length === 0) {\n            returnVal = 'N/A';\n          }\n\n          return returnVal;\n        }\n      }\n    }\n  };\n\n  ngOnInit() {\n    if (this.portCallId) {\n      this.shipStoreDataSubscription = this.shipStoreService.getSummaryByPortCall(this.portCallId)\n        .finally(() => {\n          this.shipStoreDataSubscription = this.shipStoreService.getOverviewByPortCall(this.portCallId).subscribe(res => {\n            this.headerText = 'Ship Stores Info - Total Entries Reported: ' + res.amount\n              + ' - Total weight : ' + res.totalWeight + ' - Total Volume: ' + res.totalVolume + ' - Total Units: ' + res.totalRegisteredUnits;\n          }, error => {\n            this.headerText = 'Ship Stores Info';\n          });\n        })\n        .subscribe(summary => {\n          this.shipStores = summary;\n        }\n        );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.shipStoreDataSubscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/ship-stores-listing-table/ship-stores-listing-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header={{header}} collapsible=true icon=\\\"user-info.png\\\">\\n  <tbody>\\n    <tr>\\n      <td *ngFor=\\\"let entry of createdByUserProperties\\\" class=\\\"no-wrap px-1 mx-1\\\">\\n        <tr>\\n          <small>{{ entry.description }}:</small>\\n        </tr>\\n        <tr>\\n          <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\n          <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\n        </tr>\\n      </td>\\n    </tr>\\n  </tbody>\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { UserProperties } from 'app/shared/constants/user-properties';\nimport { PortCallService } from 'app/shared/services/port-call.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-user-info-table',\n  templateUrl: './user-info-table.component.html',\n  styleUrls: ['./user-info-table.component.css']\n})\nexport class UserInfoTableComponent implements OnInit, OnDestroy {\n  @Input() header: string;\n\n  createdByUserData: any;\n  createdByUserProperties = new UserProperties().getPropertyList();\n  createdByUserDataSubscription: Subscription;\n\n  constructor(\n    private portCallService: PortCallService\n  ) { }\n\n  ngOnInit() {\n    this.createdByUserDataSubscription = this.portCallService.createdByUserData$.subscribe(\n      data => {\n        if (data) {\n          this.createdByUserData = data;\n          UserProperties.setUserData(this.createdByUserProperties, this.createdByUserData);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.createdByUserDataSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/contact-select/contact-select.component.css\n// module id = ./src/app/shared/components/contact-select/contact-select.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Contact information\\\" icon=\\\"contact.png\\\">\\n  <div class=\\\"text-center\\\">\\n    <label for=\\\"contact_info\\\">Select contact information</label>\\n  </div>\\n  <ng-select id=\\\"contact_info\\\" [items]=\\\"contactList\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"contactMedium.contactMediumType\\\"\\n    placeholder=\\\"Select contact mediums\\\" [(ngModel)]=\\\"selectedContactModels\\\" (change)=\\\"contactMediumSelected()\\\">\\n  </ng-select>\\n\\n  <div *ngFor=\\\"let contactMedium of selectedContactModels; let i = index\\\" class=\\\"form-group row mt-3\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"input-group input-group-sm\\\">\\n\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text bg-ssn text-white\\\">{{ contactMedium.contactMedium.contactMediumType }}</span>\\n        </div>\\n\\n        <input id=\\\"contact_value\\\" name=\\\"contactValue\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter {{ contactMedium.contactMedium.contactMediumType }}\\\"\\n          [(ngModel)]=\\\"selectedContactModels[i].contactValue\\\" (ngModelChange)=\\\"contactInfoChanged(contactMedium)\\\" />\\n\\n        <div class=\\\"input-group-append\\\">\\n          <div class=\\\"input-group-text bg-ssn text-white\\\">\\n            <input type=\\\"radio\\\" id=\\\"{{i}}\\\" name=\\\"preferredRadios\\\" [value]=\\\"true\\\" [(ngModel)]=\\\"selectedContactModels[i].isPreferred\\\" (ngModelChange)=\\\"preferredSet(selectedContactModels[i])\\\"\\n              [checked]=\\\"selectedContactModels[i].isPreferred\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"{{i}}\\\">Preferred</label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/contact-select/contact-select.component.html\n// module id = ./src/app/shared/components/contact-select/contact-select.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ContactModel } from 'app/shared/models/contact-model';\nimport { ConstantsService } from 'app/shared/services/constants.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-contact-select',\n  templateUrl: './contact-select.component.html',\n  styleUrls: ['./contact-select.component.css'],\n  providers: [ConstantsService]\n})\nexport class ContactSelectComponent implements OnInit, OnDestroy {\n  contactList: ContactModel[];\n  selectedContactModels: ContactModel[];\n\n  getContactMediumListSubscription: Subscription;\n\n  constructor(\n    private constantsService: ConstantsService\n  ) {}\n\n  ngOnInit() {\n    this.getContactMediumListSubscription = this.constantsService.getContactMediumList().subscribe(data => {\n      if (data) {\n        this.contactList = data.map(d => {\n          const contactModel = new ContactModel();\n          contactModel.contactMedium = d;\n          return contactModel;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.getContactMediumListSubscription.unsubscribe();\n  }\n\n  preferredSet(selectedContactModel: ContactModel) {\n    const newUpdatedContactMediums = this.selectedContactModels.map(\n      oldContactModel => {\n        if (\n          oldContactModel.contactMedium.contactMediumId ===\n          selectedContactModel.contactMedium.contactMediumId\n        ) {\n          return selectedContactModel;\n        }\n        const updatedContactModel = oldContactModel;\n        updatedContactModel.isPreferred = false;\n        return updatedContactModel;\n      }\n    );\n  }\n\n  contactMediumSelected() {\n    // Outdated\n    // this.contactService.setContactData(this.selectedContactModels);\n  }\n\n  contactInfoChanged(contactMedium: ContactModel) {\n    // Outdated\n    // this.contactService.setContactData(this.selectedContactModels);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/contact-select/contact-select.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/country-select/country-select.component.css\n// module id = ./src/app/shared/components/country-select/country-select.component.css\n// module chunks = main","module.exports = \"<ng-select [(ngModel)]=\\\"countryModel\\\" id=\\\"country_select\\\" name=\\\"country_select\\\" [items]=\\\"countryList\\\" [multiple]=\\\"false\\\"\\n  [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select country...\\\" (change)=\\\"countryChanged($event)\\\"></ng-select>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/country-select/country-select.component.html\n// module id = ./src/app/shared/components/country-select/country-select.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Subscription } from '../../../../../node_modules/rxjs';\nimport { CountryModel } from '../../models/country-model';\nimport { CountryService } from '../../services/country.service';\n\n@Component({\n  selector: 'app-country-select',\n  templateUrl: './country-select.component.html',\n  styleUrls: ['./country-select.component.css']\n})\nexport class CountrySelectComponent implements OnInit {\n\n  @Input() countryModel: CountryModel;\n  @Output() countryResult = new EventEmitter<CountryModel>();\n\n  countryList: CountryModel[] = [];\n\n  countryListSubscription: Subscription;\n\n  constructor(\n    private countryService: CountryService\n  ) { }\n\n  ngOnInit() {\n    this.countryListSubscription = this.countryService.getCountries().subscribe(\n      result => {\n        this.countryList = result;\n      }\n    );\n  }\n\n  countryChanged(country) {\n    this.countryResult.emit(this.countryModel);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/country-select/country-select.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/date-picker/date-picker.component.css\n// module id = ./src/app/shared/components/date-picker/date-picker.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\n  <div class=\\\"d-table-row\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"date_input\\\">{{ header }}</label>\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"dp.toggle()\\\" type=\\\"button\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/calendar.png\\\" height=\\\"20px\\\" />\\n          </button>\\n        </div>\\n        <input id=\\\"date_input\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\" [showWeekNumbers]=\\\"true\\\" [(ngModel)]=\\\"dateInput\\\"\\n          ngbDatepicker #dp=\\\"ngbDatepicker\\\" (ngModelChange)=\\\"dateChanged($event)\\\"  [minDate]=\\\"{year: 1890, month: 1, day: 1}\\\" [maxDate]=\\\"{year: 2150, month: 12, day: 31}\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"d-table-row\\\">\\n    <div *ngIf=\\\"!validDateFormat\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n      <span>Invalid date format.</span>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/date-picker/date-picker.component.html\n// module id = ./src/app/shared/components/date-picker/date-picker.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\n\n@Component({\n  selector: 'app-date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.css'],\n})\nexport class DatePickerComponent implements OnInit {\n\n  @Input() header: string;\n\n  @Input() dateInput: NgbDate;\n\n  @Output() dateResult = new EventEmitter<NgbDate>();\n  @Output() dateFormatError = new EventEmitter<boolean>();\n\n  dateModel: NgbDate = new NgbDate(null, null, null);\n\n  validDateFormat = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (this.dateInput != null) {\n      this.dateModel = this.dateInput;\n    }\n   }\n\n  /** Runs every time the user changes the date in the input field. */\n  dateChanged(dateResult) {\n    this.validDateFormat = this.hasValidDateFormat(dateResult);\n    this.dateModel = dateResult;\n    this.persistData();\n  }\n\n  persistData() {\n    this.dateFormatError.emit(!this.validDateFormat);\n    if (/* this.dateInput &&  */this.validDateFormat) {\n      this.dateResult.emit(this.dateModel);\n    } else {\n      this.dateResult.emit(null);\n    }\n  }\n\n  private hasValidDateFormat(model): boolean {\n    return typeof model !== 'string';\n  }\n\n  getNgbDateFormat(date) {\n    if (date) {\n      return new NgbDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\n    } else {\n      return '';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/date-picker/date-picker.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/date-time-picker/date-time-picker.component.css\n// module id = ./src/app/shared/components/date-time-picker/date-time-picker.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table mx-auto\\\">\\n  <div class=\\\"d-table-row\\\">\\n    <div class=\\\"d-table-cell p-1\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"date_input\\\">{{ header }}</label>\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"dp.toggle()\\\" type=\\\"button\\\">\\n              <img src=\\\"assets/images/icons/128x128/white/calendar.png\\\" height=\\\"24px\\\" />\\n            </button>\\n          </div>\\n          <input id=\\\"date_input\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\" [showWeekNumbers]=\\\"true\\\" [(ngModel)]=\\\"dateTimeModel.date\\\"\\n            ngbDatepicker #dp=\\\"ngbDatepicker\\\" (ngModelChange)=\\\"dateChanged($event)\\\" [minDate]=\\\"{year: 1890, month: 1, day: 1}\\\" [maxDate]=\\\"{year: 2150, month: 12, day: 31}\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"d-table-cell p-1\\\">\\n      <ngb-timepicker [(ngModel)]=\\\"dateTimeModel.time\\\" (ngModelChange)=\\\"timeChanged($event)\\\" [minuteStep]=15></ngb-timepicker>\\n    </div>\\n  </div>\\n  <div class=\\\"d-table-row\\\">\\n    <div *ngIf=\\\"!validDateFormat\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n      <span>Invalid date format.</span>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/date-time-picker/date-time-picker.component.html\n// module id = ./src/app/shared/components/date-time-picker/date-time-picker.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\nimport { DateTime } from '../../interfaces/dateTime.interface';\n\n@Component({\n  selector: 'app-date-time-picker',\n  templateUrl: './date-time-picker.component.html',\n  styleUrls: ['./date-time-picker.component.css'],\n  providers: []\n})\nexport class DateTimePickerComponent implements OnInit {\n  @Input() header: string;\n\n  @Input() dateTimeInput: DateTime;\n\n  @Output() dateTimeResult = new EventEmitter<DateTime>();\n  @Output() dateFormatError = new EventEmitter<boolean>();\n\n  @Input() dateTimeModel: DateTime;\n\n  validDateFormat = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (this.dateTimeInput != null) {\n      this.dateTimeModel = JSON.parse(JSON.stringify(this.dateTimeInput));\n    } else if (this.dateTimeModel == null) {\n      this.dateTimeModel = {\n        date: null,\n        time: new NgbTime(0, 0, 0)\n      };\n    }\n  }\n\n  dateChanged(dateResult) {\n    this.validDateFormat = this.hasValidDateFormat(dateResult);\n    this.persistData();\n  }\n\n  timeChanged() {\n    this.persistData();\n  }\n\n  persistData() {\n    this.dateFormatError.emit(!this.validDateFormat);\n    if (this.dateTimeModel.date && this.validDateFormat) {\n      if (this.dateTimeModel.time == null) {\n        this.dateTimeModel.time = new NgbTime(0, 0, 0);\n      }\n      this.dateTimeResult.emit(this.dateTimeModel);\n    } else {\n      this.dateTimeResult.emit(null);\n    }\n  }\n\n  private hasValidDateFormat(model): boolean {\n    return typeof model !== 'string';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/date-time-picker/date-time-picker.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/delete-button/delete-button.component.css\n// module id = ./src/app/shared/components/delete-button/delete-button.component.css\n// module chunks = main","module.exports = \"<div [ngSwitch]=\\\"selectedForm\\\">\\n  <button *ngSwitchCase=\\\"formNames.SHIP_STORES\\\" class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Delete Ship Store\\\" (click)=\\\"deleteItem();\\\">\\n    <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n  </button>\\n\\n  <button *ngSwitchCase=\\\"formNames.CARGO\\\" class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Delete Cargo Item\\\" (click)=\\\"onDeleteClick(deleteModal)\\\">\\n    <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n  </button>\\n\\n  <button *ngSwitchCase=\\\"formNames.SECURITY\\\" class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Delete entry\\\" (click)=\\\"onDeleteClick(deleteModal)\\\">\\n    <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n  </button>\\n</div>\\n\\n<ng-template #deleteModal let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Confirm Deletion</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div [ngSwitch]=\\\"selectedForm\\\">\\n      <span *ngSwitchCase=\\\"formNames.SHIP_STORES\\\">Delete ship store?</span>\\n      <span *ngSwitchCase=\\\"formNames.CARGO\\\">Delete cargo item?</span>\\n      <span *ngSwitchCase=\\\"formNames.SECURITY\\\">Delete entry?</span>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\" [ngSwitch]=\\\"selectedForm\\\">\\n    <button *ngSwitchCase=\\\"formNames.SHIP_STORES\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteItem(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\n      <span>Delete Ship Store</span>\\n    </button>\\n    <button *ngSwitchCase=\\\"formNames.CARGO\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteItem(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/trash.png\\\" height=\\\"24px\\\">\\n      <span> Delete</span>\\n    </button>\\n    <button *ngSwitchCase=\\\"formNames.SECURITY\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteItem(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/trash.png\\\" height=\\\"24px\\\">\\n      <span> Delete</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\n      <span>Exit</span>\\n    </button>\\n  </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/delete-button/delete-button.component.html\n// module id = ./src/app/shared/components/delete-button/delete-button.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FORM_NAMES } from 'app/shared/constants/form-names';\nimport { ConstantsService, ContentService } from 'app/shared/services/';\nimport { ViewCell } from 'ng2-smart-table';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-delete-button',\n  templateUrl: './delete-button.component.html',\n  styleUrls: ['./delete-button.component.css'],\n  providers: [ConstantsService]\n})\nexport class DeleteButtonComponent implements OnInit, OnDestroy, ViewCell {\n\n  @Input() value: string | number;\n  @Input() rowData: any;\n  @Output() delete = new EventEmitter<any>();\n\n  selectedForm: string;\n  formNames: any;\n\n  portCallFormNameSubscription: Subscription;\n\n  constructor(\n    private modalService: NgbModal,\n    private contentService: ContentService\n  ) { }\n\n  ngOnInit() {\n    this.formNames = FORM_NAMES;\n\n    this.portCallFormNameSubscription = this.contentService.portCallFormName$.subscribe(name => {\n      this.selectedForm = name;\n    });\n  }\n\n  ngOnDestroy() {\n    this.portCallFormNameSubscription.unsubscribe();\n  }\n\n  onDeleteClick(content: any) {\n    this.modalService.open(content);\n  }\n\n  deleteItem() {\n    this.delete.emit(this.rowData);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/delete-button/delete-button.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/feedback/feedback.component.css\n// module id = ./src/app/shared/components/feedback/feedback.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"started\\\">\\n  <div *ngIf=\\\"actionSucceeded\\\" class=\\\"alert-success\\\" role=\\\"alert\\\">\\n    <h5>Success</h5>\\n    <span>{{successMessage}}</span>\\n  </div>\\n  <div *ngIf=\\\"!actionSucceeded\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n    <h5>Error</h5>\\n    <p>{{errors}}</p>\\n    <p>{{errorDescription}}</p>\\n  </div>\\n</div>\\n\\n<!-- <div *ngIf=\\\"props.started\\\">\\n  <div *ngIf=\\\"props.actionSucceeded\\\" class=\\\"alert-success\\\" role=\\\"alert\\\">\\n    <h5>Success</h5>\\n    <span>{{props.successMessage}}</span>\\n  </div>\\n  <div *ngIf=\\\"!actionSucceeded\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n    <h5>Error</h5>\\n    <p>{{props.errors}}</p>\\n    <p>{{props.errorDescription}}</p>\\n  </div>\\n</div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/feedback/feedback.component.html\n// module id = ./src/app/shared/components/feedback/feedback.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { FeedbackProps } from '../../interfaces/feedback-props.interface';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n\n  @Input() props: FeedbackProps;\n\n  @Input() started: boolean;\n  @Input() actionSucceeded: boolean;\n  @Input() errors: any;\n  @Input() errorDescription: string;\n  @Input() successMessage: string;\n\n  constructor() {\n   }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/feedback/feedback.component.ts","module.exports = \"  \\n   :host /deep/ ng2-st-tbody-edit-delete > a,\\n   :host /deep/ ng2-st-tbody-create-cancel > a {\\n     color: var(--color-primary);\\n   }\\n  \\n  .ng-select-placeholder-size {\\n    font-size: 0.875rem;\\n  }\\n  \\n  :host /deep/ .ng-placeholder, ::-webkit-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n  \\n  :host /deep/ .ng-placeholder, :-ms-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n  \\n  :host /deep/ .ng-placeholder, ::-ms-input-placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n  \\n  :host /deep/ .ng-placeholder, ::placeholder  {\\n      color: gray !important;\\n      font-style: italic;\\n  }\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/identity-document/identity-document.component.css\n// module id = ./src/app/shared/components/identity-document/identity-document.component.css\n// module chunks = main","module.exports = \"<form>\\n  <app-ssn-card header=\\\"Identity Document Information\\\" icon=\\\"user-info.png\\\" [collapsible]=\\\"true\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6\\\">\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col my-auto\\\">\\n            <label for=\\\"natureOfIdentityDoc\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Nature of Identity Document</label>\\n            <ng-select class=\\\"ng-select-placeholder-size\\\" [items]=\\\"identityDocTypeList\\\" [(ngModel)]=\\\"identityDocumentModel.identityDocumentType\\\"\\n              name=\\\"natureOfIdentityDoc\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"description\\\" placeholder=\\\"Nature of Identity Document\\\"\\n              (change)=\\\"setIdentityDocumentType($event)\\\">\\n            </ng-select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col my-auto\\\">\\n            <label for=\\\"numberOfIdentityDoc\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Number of Identity Document</label>\\n            <input #numberOfIdentityDoc=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"identityDocumentModel.identityDocumentNumber\\\" placeholder=\\\"Number of Identity Document\\\"\\n              class=\\\"form-control form-control-sm\\\" name=\\\"numberOfIdentityDoc\\\" (ngModelChange)=\\\"setNumberOfIdentityDoc($event)\\\">\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col my-auto\\\">\\n            <label for=\\\"app-search-country\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Issuing Nation</label>\\n            <app-search-country *ngIf=\\\"!identityDocumentModel.issuingNation\\\" (selectCountry)=\\\"setIssuingNation($event)\\\" (deselectCountry)=\\\"resetIssuingNation()\\\"></app-search-country>\\n            <div *ngIf=\\\"identityDocumentModel.issuingNation\\\" class=\\\"input-group input-group-sm\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <img src=\\\"assets/images/flags/128x128/{{ identityDocumentModel.issuingNation.twoCharCode | lowercase}}.png\\\" height=\\\"20px\\\">\\n                </span>\\n              </div>\\n              <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly=\\\"readonly\\\" [ngModel]=\\\"identityDocumentModel.issuingNation.name\\\"\\n                name=\\\"issuingNation\\\" />\\n              <div>\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove issuing nation\\\" (click)=\\\"resetIssuingNation()\\\">\\n                    <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"col-lg-6\\\">\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col my-auto\\\">\\n            <label for=\\\"app-date-picker\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Identity Document Issue Date</label>\\n            <app-date-picker #selectIssueDate (dateResult)=\\\"setIdentityDocumentIssueDate($event)\\\" [dateInput]=\\\"getNgbDateFormat(identityDocumentModel.identityDocumentIssueDate)\\\"></app-date-picker>\\n            <div *ngIf=\\\"issueDateAfterExpiryDateError && expiryDateValid && issueDateValid\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n              <li>\\n                <small>Identity document issue date must be before the expiry date.</small>\\n              </li>\\n            </div>\\n            <div *ngIf=\\\"identityDatesRequired && !identityIssueDateSet\\\" class=\\\"alert alert-danger form-control-sm\\\" role=\\\"alert\\\">\\n              <li>\\n                <small>This field is required when identity document is supplied.</small>\\n              </li>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col my-auto\\\">\\n            <label for=\\\"app-date-picker\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Identity Document Expiry Date</label>\\n            <app-date-picker #selectExpiryDate (dateResult)=\\\"setIdentityDocumentExpiryDate($event)\\\" [dateInput]=\\\"getNgbDateFormat(identityDocumentModel.identityDocumentExpiryDate)\\\"></app-date-picker>\\n            <div *ngIf=\\\"expiryDateBeforeIssueDateError && expiryDateValid && issueDateValid\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n              <li>\\n                <small>Identity document expiry date must be after the issue date.</small>\\n              </li>\\n            </div>\\n            <div *ngIf=\\\"identityDatesRequired && !identityExpiryDateSet\\\" class=\\\"alert alert-danger form-control-sm\\\" role=\\\"alert\\\">\\n              <li>\\n                <small>This field is required when identity document is supplied.</small>\\n              </li>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"showVisaOrResidenceNumber == true\\\">\\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"col my-auto\\\">\\n              <label for=\\\"visaOrResidenceNumber\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Visa or Residence Permit Number</label>\\n              <input #visaOrResidencePermitNumber=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"identityDocumentModel.visaOrResidencePermitNumber\\\"\\n                placeholder=\\\"Visa or Residence Permit Number\\\" class=\\\"form-control form-control-sm\\\" name=\\\"visaOrResidenceNumber\\\"\\n                (ngModelChange)=\\\"setVisaOrPermitNumber($event)\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </app-ssn-card>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/identity-document/identity-document.component.html\n// module id = ./src/app/shared/components/identity-document/identity-document.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { IdentityDocumentModel } from 'app/shared/models/';\nimport { IdentityDocumentService, ValidateDateTimeService} from 'app/shared/services/';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-identity-document',\n  templateUrl: './identity-document.component.html',\n  styleUrls: ['./identity-document.component.css']\n})\nexport class IdentityDocumentComponent implements OnInit {\n\n  @Input() showVisaOrResidenceNumber = true;\n\n  @Output() changeIdentityDocumentModel: EventEmitter<any> = new EventEmitter();\n\n  identityDocumentModel: IdentityDocumentModel;\n\n  identityDocTypeList: Observable<any>;\n\n  @ViewChild(NgForm) form: NgForm;\n  @ViewChild('selectIssueDate') selectIssueDateComponent;\n  @ViewChild('selectExpiryDate') selectExpiryDateComponent;\n  formValid = false;\n\n  issueDateAfterExpiryDateError = false;\n  expiryDateBeforeIssueDateError = false;\n  issueDateRequiredError = false;\n  expiryDateRequiredError = false;\n\n  issueDateValid = true;\n  expiryDateValid = true;\n  identityDatesRequired = false;\n  identityExpiryDateSet = false;\n  identityIssueDateSet = false;\n\n  constructor(\n    private identityDocumentService: IdentityDocumentService,\n    private validateDateTimeService: ValidateDateTimeService\n  ) { }\n\n  ngOnInit() {\n    this.identityDocumentModel = new IdentityDocumentModel();\n\n    // Get identity document types list\n    this.identityDocumentService.getIdentityDocumentTypes().subscribe(results => {\n      this.identityDocTypeList = results;\n    });\n  }\n\n  identityDocumentModelChanged() {\n    this.identityIssueDateSet = (this.identityDocumentModel.identityDocumentIssueDate != null\n      && this.identityDocumentModel.identityDocumentIssueDate !== undefined);\n    this.identityExpiryDateSet = (this.identityDocumentModel.identityDocumentExpiryDate != null\n      && this.identityDocumentModel.identityDocumentExpiryDate !== undefined);\n\n    this.changeIdentityDocumentModel.emit(\n      {\n        identityDocumentModel: this.identityDocumentModel,\n        validDocumentDates: {\n          issueDateAfterExpiryDateError: this.issueDateAfterExpiryDateError,\n          expiryDateBeforeExpiryDateError: this.expiryDateBeforeIssueDateError,\n          expiryDateRequiredError : this.identityExpiryDateSet && this.identityDatesRequired,\n          issueDateRequiredError : this.identityIssueDateSet && this.identityDatesRequired,\n        }\n      });\n  }\n\n  setNumberOfIdentityDoc($event) {\n    this.identityDocumentModel.identityDocumentNumber = $event;\n    this.identityDocumentModelChanged();\n  }\n\n  setVisaOrPermitNumber($event) {\n    this.identityDocumentModel.visaOrResidencePermitNumber = $event;\n    this.identityDocumentModelChanged();\n  }\n\n  setIssuingNation($event) {\n    this.identityDocumentModel.issuingNationId = $event.item.countryId;\n    this.identityDocumentModel.issuingNation = $event.item;\n    this.identityDocumentModelChanged();\n  }\n\n  setIdentityDocumentType($event) {\n    this.identityDatesRequired = ($event != null && $event !== undefined);\n    $event ? this.identityDocumentModel.identityDocumentType = $event : this.identityDocumentModel.identityDocumentType = null;\n    $event ? this.identityDocumentModel.identityDocumentTypeId = $event.id : this.identityDocumentModel.identityDocumentTypeId = null;\n    this.identityDocumentModelChanged();\n  }\n\n  setIdentityDocumentIssueDate($event) {\n    let date: Date = new Date();\n    if ($event) {\n      date = new Date($event.year, $event.month - 1, $event.day);\n    } else {\n      date = null;\n    }\n    this.identityDocumentModel.identityDocumentIssueDate = date;\n    if ($event && this.validateDateTimeService.checkDocumentDatesError(this.identityDocumentModel.identityDocumentIssueDate, this.identityDocumentModel.identityDocumentExpiryDate)) {\n      this.issueDateAfterExpiryDateError = true;\n    } else {\n      this.expiryDateBeforeIssueDateError = false;\n      this.issueDateAfterExpiryDateError = false;\n    }\n    // this.issueDateValid = $event.validDate;\n    this.identityDocumentModelChanged();\n  }\n\n  setIdentityDocumentExpiryDate($event) {\n    let date: Date = new Date();\n    if ($event) {\n      date = new Date($event.year, $event.month - 1, $event.day);\n    } else {\n      date = null;\n    }\n    this.identityDocumentModel.identityDocumentExpiryDate = date;\n    if ($event && this.validateDateTimeService.checkDocumentDatesError(this.identityDocumentModel.identityDocumentIssueDate, this.identityDocumentModel.identityDocumentExpiryDate)) {\n      this.expiryDateBeforeIssueDateError = true;\n    } else {\n      this.expiryDateBeforeIssueDateError = false;\n      this.issueDateAfterExpiryDateError = false;\n    }\n    // this.expiryDateValid = $event.validDate;\n    this.identityDocumentModelChanged();\n  }\n\n  resetIssuingNation() {\n    this.identityDocumentModel.issuingNation = null;\n    this.identityDocumentModel.issuingNationId = null;\n    this.identityDocumentModelChanged();\n  }\n\n  resetForm() {\n    this.identityDocumentModel = new IdentityDocumentModel();\n    this.resetIdentityDocumentIssueDate();\n    this.resetIdentityDocumentExpiryDate();\n  }\n\n  resetIdentityDocumentIssueDate() {\n    this.identityDocumentModel.identityDocumentIssueDate = null;\n    this.selectIssueDateComponent.dateChanged(null);\n  }\n\n  resetIdentityDocumentExpiryDate() {\n    this.identityDocumentModel.identityDocumentExpiryDate = null;\n    this.selectExpiryDateComponent.dateChanged(null);\n  }\n\n  getDateFormat(date) {\n    if (date.year && date.month && date.day) {\n      const dateString = date.year + '-' + ('0' + date.month).slice(-2) + '-' + ('0' + date.day).slice(-2) + 'T00:00:00';\n      return dateString;\n    } else {\n      return null;\n    }\n  }\n\n  getDisplayDateFormat(date) {\n    return date.split('T')[0];\n  }\n\n  getNgbDateFormat(date) {\n    if (date != null) {\n      const newDate = new Date(date);\n      return {\n        year: newDate.getFullYear(),\n        month: newDate.getMonth() + 1,\n        day: newDate.getDate()\n      };\n    } else {\n      return null;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/identity-document/identity-document.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/issc/issc.component.css\n// module id = ./src/app/shared/components/issc/issc.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"'International Ship Security Certificate'\\\" class=\\\"mb-3\\\">\\n  <form #form=\\\"ngForm\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <label class=\\\"no-wrap mb-0 mt-2\\\" for=\\\"certificate_number\\\">Certificate Number</label>\\n        <input [(ngModel)]=\\\"isscModel.certificateNumber\\\" class=\\\"form-control form-control-sm\\\" id=\\\"certificate_number\\\" name=\\\"certificate_number\\\"\\n          placeholder=\\\"Enter certificate number...\\\" (change)=\\\"touchData()\\\">\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <app-date-picker header=\\\"Expiry Date\\\" [dateInput]=\\\"expiryDateModel\\\" (dateResult)=\\\"onExpiryDateSelection($event)\\\"></app-date-picker>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <label class=\\\"no-wrap mb-0\\\" for=\\\"issuer_type_select\\\">Issuer Type</label>\\n        <ng-select [(ngModel)]=\\\"isscModel.issuedByGovernment\\\" name=\\\"issuer_type_select\\\" [items]=\\\"issuerTypeList\\\" bindLabel=\\\"name\\\"\\n          bindValue=\\\"isGovernmentType\\\" placeholder=\\\"Select issuer type...\\\" [searchable]=\\\"false\\\" (change)=\\\"onIssuerTypeSelection($event)\\\"></ng-select>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <label class=\\\"no-wrap mb-0\\\" for=\\\"issc_issuer\\\">Issued By</label>\\n        <div *ngIf=\\\"isscModel.issuedByGovernment == null\\\">\\n          <select class=\\\"custom-select\\\" placeholder=\\\"Select issuer type first\\\" disabled></select>\\n        </div>\\n        <div *ngIf=\\\"isscModel.issuedByGovernment\\\">\\n          <app-country-select [countryModel]=\\\"governmentIssuer\\\" (countryResult)=\\\"onCountrySelection($event)\\\"></app-country-select>\\n        </div>\\n        <div *ngIf=\\\"isscModel.issuedByGovernment == false\\\">\\n          <app-rso-select [organizationModel]=\\\"rsoIssuer\\\" (organizationResult)=\\\"onOrganizationSelection($event)\\\"></app-rso-select>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </form>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/issc/issc.component.html\n// module id = ./src/app/shared/components/issc/issc.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbDate } from '../../../../../node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\nimport { CountryModel } from '../../models/country-model';\nimport { InternationalShipSecurityCertificateModel } from '../../models/international-ship-security-certificate-model';\nimport { OrganizationModel } from '../../models/organization-model';\nimport { ShipService } from '../../services/ship.service';\n\n@Component({\n  selector: 'app-issc',\n  templateUrl: './issc.component.html',\n  styleUrls: ['./issc.component.css']\n})\nexport class IsscComponent implements OnInit {\n  @Input() isscModel: InternationalShipSecurityCertificateModel;\n  expiryDateModel: NgbDate;\n  rsoIssuer: OrganizationModel = null;\n  governmentIssuer: CountryModel = null;\n  issuerTypeList = [\n    {\n      name: 'Government',\n      isGovernmentType: true\n    },\n    {\n      name: 'Recognized Security Organization (RSO)',\n      isGovernmentType: false\n    }\n  ];\n\n  constructor(\n    private shipService: ShipService\n  ) { }\n\n  ngOnInit() {\n    this.validateData();\n    if (this.isscModel.expiryDate) {\n      this.setNgbDate();\n    }\n    if (this.isscModel.issuedByGovernment && this.isscModel.governmentIssuer) {\n      this.governmentIssuer = this.isscModel.governmentIssuer;\n    } else if (this.isscModel.rsoIssuer) {\n      this.rsoIssuer = this.isscModel.rsoIssuer;\n    }\n  }\n\n  setNgbDate() {\n    const expiryDate = new Date(this.isscModel.expiryDate);\n    this.expiryDateModel = new NgbDate(expiryDate.getFullYear(), expiryDate.getMonth() + 1, expiryDate.getDate());\n  }\n\n  onExpiryDateSelection(date: NgbDate) {\n    this.isscModel.expiryDate = (date != null) ? new Date(Date.UTC(date.year, date.month - 1, date.day)) : null;\n    this.touchData();\n  }\n\n  onIssuerTypeSelection(issuerType) {\n    if (this.isscModel.issuedByGovernment) {\n      this.isscModel.rsoIssuerId = null;\n    } else {\n      this.isscModel.governmentIssuerId = null;\n    }\n    this.touchData();\n  }\n\n  onCountrySelection(country: CountryModel) {\n    this.isscModel.governmentIssuerId = country.countryId;\n    this.touchData();\n  }\n\n  onOrganizationSelection(organization: OrganizationModel) {\n    this.isscModel.rsoIssuerId = organization.organizationId;\n    this.touchData();\n  }\n\n  touchData() {\n    this.shipService.setIsscPristineData(false);\n    this.validateData();\n  }\n\n  private validateData() {\n    this.shipService.setValidIsscData(this.dataIsValid());\n  }\n\n  private dataIsValid() {\n    return this.isscModel != null\n      && this.isscModel.certificateNumber != null && this.isscModel.certificateNumber.length > 0\n      && this.isscModel.expiryDate != null\n      && this.isscModel.issuedByGovernment != null\n      && (this.isscModel.governmentIssuerId != null || this.isscModel.rsoIssuerId != null);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/issc/issc.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/issc/rso-select/rso-select.component.css\n// module id = ./src/app/shared/components/issc/rso-select/rso-select.component.css\n// module chunks = main","module.exports = \"<ng-select [(ngModel)]=\\\"organizationModel\\\" id=\\\"rso_select\\\" name=\\\"rso_select\\\" [items]=\\\"rsoList\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\n  bindLabel=\\\"name\\\" placeholder=\\\"Select organization...\\\" (change)=\\\"organizationChanged($event)\\\"></ng-select>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/issc/rso-select/rso-select.component.html\n// module id = ./src/app/shared/components/issc/rso-select/rso-select.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { OrganizationModel } from '../../../models/organization-model';\nimport { OrganizationService } from '../../../services/organization.service';\n\n@Component({\n  selector: 'app-rso-select',\n  templateUrl: './rso-select.component.html',\n  styleUrls: ['./rso-select.component.css']\n})\nexport class RsoSelectComponent implements OnInit {\n\n  @Input() organizationModel: OrganizationModel;\n  @Output() organizationResult = new EventEmitter<OrganizationModel>();\n\n  rsoList: OrganizationModel[] = [];\n\n  rsoListSubscription: Subscription;\n\n  constructor(\n    private organizationService: OrganizationService\n  ) { }\n\n  ngOnInit() {\n    this.rsoListSubscription = this.organizationService.getRecognizedSecurityOrganizations().subscribe(\n      result => {\n        this.rsoList = result;\n      }\n    );\n  }\n\n  organizationChanged(organization) {\n    this.organizationResult.emit(this.organizationModel);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/issc/rso-select/rso-select.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-info-table/location-info-table.component.css\n// module id = ./src/app/shared/components/location-info-table/location-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Location Information\\\" icon=\\\"location.png\\\">\\n  <tbody>\\n    <tr>\\n      <td>\\n        <img *ngIf=\\\"locationFlag\\\" src=\\\"assets/images/flags/128x128/{{locationFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\n      </td>\\n      <td *ngFor=\\\"let entry of locationInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\n        <tr>\\n          <small>{{ entry.description }}:</small>\\n        </tr>\\n        <tr>\\n          <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\n          <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\n        </tr>\\n      </td>\\n    </tr>\\n  </tbody>\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-info-table/location-info-table.component.html\n// module id = ./src/app/shared/components/location-info-table/location-info-table.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { LocationProperties } from 'app/shared/constants/location-properties';\nimport { LocationService } from 'app/shared/services/location.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-location-info-table',\n  templateUrl: './location-info-table.component.html',\n  styleUrls: ['./location-info-table.component.css']\n})\nexport class LocationInfoTableComponent implements OnInit, OnDestroy {\n\n  locationFlag: string;\n  locationProperties = LocationProperties.PROPERTIES;\n  locationInfo: any[] = [];\n\n  locationDataSubscription: Subscription;\n\n  constructor(private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.locationProperties = LocationProperties.PROPERTIES;\n    this.locationDataSubscription = this.locationService.locationData$.subscribe(\n      locationResult => {\n        if (locationResult) {\n          this.locationFlag = (locationResult.country) ? locationResult.country.twoCharCode.toLowerCase() : null;\n          this.locationProperties.COUNTRY.data = (locationResult.country) ? locationResult.country.name : null;\n          this.locationProperties.LOCATION_TYPE.data = locationResult.locationType.name;\n          this.locationProperties.LOCATION_NAME.data = locationResult.name;\n          this.locationProperties.LOCATION_CODE.data = locationResult.locationCode;\n        }\n        this.locationInfo = Object.values(this.locationProperties);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.locationDataSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/location-info-table/location-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.css\n// module id = ./src/app/shared/components/location-time-info-table/location-time-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Location Information\\\" icon=\\\"location.png\\\">\\n  <tbody>\\n    <tr>\\n      <td>\\n        <img *ngIf=\\\"locationFlag\\\" src=\\\"assets/images/flags/128x128/{{locationFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\n      </td>\\n      <td *ngFor=\\\"let entry of locationTimeProperties\\\" class=\\\"no-wrap px-1 mx-1\\\">\\n        <tr *ngIf=\\\"entry.data\\\">\\n          <small>{{ entry.description }}:</small>\\n        </tr>\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\n      </td>\\n    </tr>\\n  </tbody>\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.html\n// module id = ./src/app/shared/components/location-time-info-table/location-time-info-table.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { LocationTimeProperties } from 'app/shared/constants/location-time-properties';\nimport { PortCallService } from 'app/shared/services/port-call.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DateTime } from '../../interfaces/dateTime.interface';\n\n@Component({\n  selector: 'app-location-time-info-table',\n  templateUrl: './location-time-info-table.component.html',\n  styleUrls: ['./location-time-info-table.component.css']\n})\nexport class LocationTimeInfoTableComponent implements OnInit, OnDestroy {\n  locationFlag: string;\n  locationTimeProperties = new LocationTimeProperties().getPropertyList();\n\n  locationDataSubscription: Subscription;\n  etaDataSubscription: Subscription;\n  etdDataSubscription: Subscription;\n\n  constructor(private portCallService: PortCallService) { }\n\n  ngOnInit() {\n    this.locationDataSubscription = this.portCallService.locationData$.subscribe(locationResult => {\n      if (locationResult) {\n        this.locationFlag = locationResult.country\n          ? locationResult.country.twoCharCode.toLowerCase()\n          : null;\n        LocationTimeProperties.setLocationData(this.locationTimeProperties, locationResult);\n      }\n    });\n    this.etaDataSubscription = this.portCallService.etaData$.subscribe(\n      etaData => {\n        LocationTimeProperties.setEta(this.locationTimeProperties, this.dateTimeFormat(etaData));\n      }\n    );\n    this.etdDataSubscription = this.portCallService.etdData$.subscribe(\n      etdData => {\n        LocationTimeProperties.setEtd(this.locationTimeProperties, this.dateTimeFormat(etdData));\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.locationDataSubscription.unsubscribe();\n    this.etaDataSubscription.unsubscribe();\n    this.etdDataSubscription.unsubscribe();\n  }\n\n  private dateTimeFormat(dateTime: DateTime) {\n    return (\n      dateTime.date.year +\n      '-' +\n      this.twoDigitFormat(dateTime.date.month) +\n      '-' +\n      this.twoDigitFormat(dateTime.date.day) +\n      ' ' +\n      this.twoDigitFormat(dateTime.time.hour) +\n      ':' +\n      this.twoDigitFormat(dateTime.time.minute)\n    );\n  }\n\n  private twoDigitFormat(number: number) {\n    if (number <= 9) {\n      return '0' + number;\n    } else {\n      return number;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-info-table/organization-info-table.component.css\n// module id = ./src/app/shared/components/organization-info-table/organization-info-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"text-center\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <app-ssn-table [entryData]=organizationProperties></app-ssn-table>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-info-table/organization-info-table.component.html\n// module id = ./src/app/shared/components/organization-info-table/organization-info-table.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { OrganizationProperties } from 'app/shared/constants/organization-properties';\nimport { OrganizationModel } from 'app/shared/models/organization-model';\n\n@Component({\n  selector: 'app-organization-info-table',\n  templateUrl: './organization-info-table.component.html',\n  styleUrls: ['./organization-info-table.component.css']\n})\nexport class OrganizationInfoTableComponent implements OnInit {\n\n  @Input() organizationModel: OrganizationModel;\n  organizationProperties = new OrganizationProperties().getPropertyList();\n\n  constructor() { }\n\n  ngOnInit() {\n    OrganizationProperties.setOrganizationData(\n      this.organizationProperties,\n      this.organizationModel\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/organization-info-table/organization-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.css\n// module id = ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\n  <div class=\\\"d-table-row\\\">\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Edit organization\\\">\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.html\n// module id = ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { ConstantsService, ContentService, OrganizationService } from 'app/shared/services/';\nimport { ViewCell } from 'ng2-smart-table';\n\n@Component({\n  selector: 'app-organization-button-row',\n  templateUrl: './organization-button-row.component.html',\n  styleUrls: ['./organization-button-row.component.css'],\n  providers: [ConstantsService]\n})\nexport class OrganizationButtonRowComponent implements ViewCell, OnInit {\n\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n\n  organizationData: any[];\n\n  constructor(\n    private organizationService: OrganizationService,\n    private contentService: ContentService\n  ) { }\n\n  ngOnInit() {\n    this.organizationService.organizationData$.subscribe(\n      results => {\n        if (results) {\n          this.organizationData = results;\n        }\n      }\n    );\n  }\n\n  onEditClick() {\n    this.setContent(CONTENT_NAMES.REGISTER_ORGANIZATION);\n  }\n\n  private setContent(content: string) {\n    this.setOrganization(content);\n  }\n\n  setOrganization(content) {\n    this.contentService.setLoadingScreen(true, 'pax.gif', 'Loading');\n    this.organizationService.setOrganizationData(this.rowData.organizationModel);\n    this.contentService.setContent(content);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-smart-table.component.css\n// module id = ./src/app/shared/components/organization-smart-table/organization-smart-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\n  <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n    <thead class=\\\"bg-ssn text-white\\\">\\n      <tr>\\n        <th class=\\\"py-1\\\">\\n          <h5 class=\\\"mb-0\\\">Organization search results</h5>\\n        </th>\\n      </tr>\\n    </thead>\\n  </table>\\n  <div class=\\\"table-responsive\\\">\\n    <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dataSource\\\"></ng2-smart-table>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-smart-table.component.html\n// module id = ./src/app/shared/components/organization-smart-table/organization-smart-table.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Subscription } from 'rxjs/Subscription';\nimport { OrganizationService } from '../../services/organization.service';\nimport { OrganizationButtonRowComponent } from './organization-button-row/organization-button-row.component';\n\n@Component({\n  selector: 'app-organization-smart-table',\n  templateUrl: './organization-smart-table.component.html',\n  styleUrls: ['./organization-smart-table.component.css']\n})\nexport class OrganizationSmartTableComponent implements OnInit, OnDestroy {\n\n  tableData = [];\n  dataSource: LocalDataSource = new LocalDataSource();\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'There are no organizations in this list.',\n\n    columns: {\n      name: {\n        title: 'Name',\n        type: 'html'\n      },\n      type: {\n        title: 'Type',\n        type: 'html'\n      },\n      organizationNumber: {\n        title: 'Organization Number',\n        type: 'html'\n      },\n      description: {\n        title: 'Description',\n        type: 'html'\n      },\n      actions: {\n        title: 'Actions',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: OrganizationButtonRowComponent\n      }\n    }\n  };\n\n  organizationSearchDataSubscription: Subscription;\n\n  constructor(\n    private organizationService: OrganizationService\n  ) { }\n\n  ngOnInit() {\n    this.organizationSearchDataSubscription = this.organizationService.organizationSearchData$.subscribe(data => {\n      if (data) {\n        if (data.length !== 0) {\n          const rowList = [];\n          data.forEach(organization => {\n            const row = this.dataRow(organization);\n            rowList.push(row);\n          });\n          this.tableData = rowList;\n        }\n      }\n      this.dataSource.load(this.tableData);\n    });\n  }\n\n  ngOnDestroy() {\n    this.organizationSearchDataSubscription.unsubscribe();\n  }\n\n  dataRow(organization) {\n    const row = {\n      organizationModel: organization,\n      name: organization.name,\n      type: organization.organizationType ?  organization.organizationType.name : `<div class=\"font-italic\">Not available.</div>`,\n      organizationNumber: organization.organizationNo || `<div class=\"font-italic\">Not provided.</div>`,\n      description: organization.description || `<div class=\"font-italic\">Not provided.</div>`,\n      actions: 'btn'\n    };\n    return row;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/organization-smart-table/organization-smart-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.css\n// module id = ./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Previous Port of Call Information\\\" icon=\\\"location.png\\\">\\n  <tbody>\\n    <tr>\\n      <td *ngFor=\\\"let entry of prevLocationTimeInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\n        <tr *ngIf=\\\"entry.data\\\">\\n          <small>{{ entry.description }}:</small>\\n        </tr>\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\n      </td>\\n    </tr>\\n  </tbody>\\n</app-table-card>\\n\\n<app-table-card header=\\\"Next Port of Call Information\\\" icon=\\\"location.png\\\">\\n  <tbody>\\n    <tr>\\n      <td *ngFor=\\\"let entry of nextLocationTimeInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\n        <tr *ngIf=\\\"entry.data\\\">\\n          <small>{{ entry.description }}:</small>\\n        </tr>\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\n      </td>\\n    </tr>\\n  </tbody>\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.html\n// module id = ./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NextLocationTimeProperties } from 'app/shared/constants/next-location-time-properties';\nimport { PrevLocationTimeProperties } from 'app/shared/constants/prev-location-time-properties';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DateTime } from '../../interfaces/dateTime.interface';\nimport { PortCallService } from '../../services/port-call.service';\n\n@Component({\n  selector: 'app-prev-and-next-poc-table',\n  templateUrl: './prev-and-next-poc-table.component.html',\n  styleUrls: ['./prev-and-next-poc-table.component.css']\n})\nexport class PrevAndNextPocTableComponent implements OnInit, OnDestroy {\n\n  prevLocationFlag: string;\n  nextLocationFlag: string;\n  PrevLocationTimeProperties = new PrevLocationTimeProperties();\n  NextLocationTimeProperties = new NextLocationTimeProperties();\n  prevLocationTimeProperties: any;\n  nextLocationTimeProperties: any;\n  prevLocationTimeInfo: any[] = [];\n  nextLocationTimeInfo: any[] = [];\n\n  prevPortOfCallDataSubscription: Subscription;\n  nextPortOfCallDataSubscription: Subscription;\n\n  constructor(private portCallService: PortCallService) { }\n\n  ngOnInit() {\n    this.prevLocationTimeProperties = this.PrevLocationTimeProperties.getProperties();\n    this.nextLocationTimeProperties = this.NextLocationTimeProperties.getProperties();\n\n    this.prevPortOfCallDataSubscription = this.portCallService.prevLocationData$.subscribe(prevPocResult => {\n      if (prevPocResult) {\n        this.prevLocationTimeProperties.LOCATION_NAME.data = prevPocResult.name;\n        this.prevLocationTimeProperties.LOCATION_CODE.data = prevPocResult.locationCode;\n        this.portCallService.prevEtdData$.subscribe(dateTimeResult => {\n          if (dateTimeResult) {\n            this.prevLocationTimeProperties.ETD.data = this.dateTimeFormat(dateTimeResult);\n          }\n        });\n      } else {\n        this.prevLocationTimeProperties = this.PrevLocationTimeProperties.getProperties();\n      }\n      this.prevLocationTimeInfo = Object.values(this.prevLocationTimeProperties);\n    });\n\n    this.nextPortOfCallDataSubscription = this.portCallService.nextLocationData$.subscribe(nextPocResult => {\n      if (nextPocResult) {\n        this.nextLocationTimeProperties.LOCATION_NAME.data = nextPocResult.name;\n        this.nextLocationTimeProperties.LOCATION_CODE.data = nextPocResult.locationCode;\n        this.portCallService.nextEtaData$.subscribe(dateTimeResult => {\n          if (dateTimeResult) {\n            this.nextLocationTimeProperties.ETA.data = this.dateTimeFormat(dateTimeResult);\n          }\n        });\n      } else {\n        this.nextLocationTimeProperties = this.NextLocationTimeProperties.getProperties();\n      }\n      this.nextLocationTimeInfo = Object.values(this.nextLocationTimeProperties);\n    });\n  }\n\n  ngOnDestroy() {\n    this.prevPortOfCallDataSubscription.unsubscribe();\n    this.nextPortOfCallDataSubscription.unsubscribe();\n  }\n\n  private dateTimeFormat(dateTime: DateTime) {\n    return (\n      dateTime.date.year +\n      '-' +\n      this.twoDigitFormat(dateTime.date.month) +\n      '-' +\n      this.twoDigitFormat(dateTime.date.day) +\n      ' ' +\n      this.twoDigitFormat(dateTime.time.hour) +\n      ':' +\n      this.twoDigitFormat(dateTime.time.minute)\n    );\n  }\n\n  private twoDigitFormat(number: number) {\n    if (number <= 9) {\n      return '0' + number;\n    } else {\n      return number;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.ts","module.exports = \"p {\\n    margin-bottom: 0;\\n    font-size: 0.875rem;\\n    line-height: 0px;\\n}\\n\\n.input-group-append {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-country/search-country.component.css\n// module id = ./src/app/shared/components/search-country/search-country.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\n  <img src=\\\"assets/images/flags/128x128/{{r.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\n  <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\n</ng-template>\\n\\n<div *ngIf=\\\"!locationSelected\\\" class=\\\"input-group\\\">\\n  <div class=\\\"input-group-prepend\\\">\\n    <button disabled class=\\\"btn btn-sm btn-ssn\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/search.png\\\" height=\\\"20px\\\">\\n    </button>\\n  </div>\\n  <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"locationModel\\\" [ngbTypeahead]=\\\"search\\\"\\n    [resultTemplate]=\\\"rt\\\" (selectItem)=\\\"selectLocation($event)\\\" placeholder=\\\"Enter search here...\\\" (focus)=\\\"onFocus($event)\\\"\\n  />\\n\\n  <div class=\\\"input-group-append\\\" *ngIf=\\\"searching\\\">\\n    <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/location.gif\\\" height=\\\"20px\\\">\\n    <p>Searching</p>\\n  </div>\\n  <div class=\\\"input-group-append\\\" *ngIf=\\\"searchFailed\\\">\\n    <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"20px\\\">\\n    <p>No results</p>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"locationSelected\\\" class=\\\"input-group\\\">\\n  <div class=\\\"input-group-prepend flag\\\">\\n    <img src=\\\"assets/images/flags/128x128/{{locationFlag | lowercase}}.png\\\" height=\\\"30px\\\">\\n  </div>\\n  <input id=\\\"search-country\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"locationModel.name\\\"\\n  />\\n  <div>\\n    <button class=\\\"btn btn-sm btn-ssn input-group-append\\\" ngbTooltip=\\\"Remove port\\\" (click)=\\\"deselectLocation()\\\">\\n      <img height=\\\"20px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\n    </button>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-country/search-country.component.html\n// module id = ./src/app/shared/components/search-country/search-country.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { LocationProperties } from 'app/shared/constants/location-properties';\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\nimport { CountryService } from 'app/shared/services/country.service';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\nimport { LocationModel } from '../../models/location-model';\n\n@Component({\n  selector: 'app-search-country',\n  templateUrl: './search-country.component.html',\n  styleUrls: ['./search-country.component.css']\n})\nexport class SearchCountryComponent implements OnInit {\n\n  @Input() showDropDown = true;\n\n  @Output() selectCountry: EventEmitter<any> = new EventEmitter();\n  @Output() deselectCountry: EventEmitter<any> = new EventEmitter();\n\n  locationFlag: string;\n  locationProperties = LocationProperties.PROPERTIES;\n  locationInfo: any[];\n\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN_2;\n  locationModel: any;\n  locationSelected = false;\n\n  searching = false;\n  searchFailed = false;\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\n    (this.searching = false)\n  );\n\n  constructor(\n    private countryService: CountryService\n  ) { }\n\n  search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(150),\n      distinctUntilChanged(),\n      tap(term => {\n        this.searchFailed = false;\n        this.searching = (term.length >= 2);\n      }),\n      switchMap(term => (this.showDropDown) ?\n        this.countryService.search(term).pipe(\n          tap(() => {\n            this.searchFailed = false;\n          }),\n          catchError(() => {\n            this.searchFailed = true;\n            return of([]);\n          })\n        ) : of([])\n      ),\n      tap(res => {\n        if (this.showDropDown) {\n          this.searching = false;\n          this.searchFailed = this.locationModel.length >= 2 && res.length === 0;\n        } else {\n          this.countryService.search(this.locationModel).subscribe(\n            data => {\n              this.searchFailed = this.locationModel.length >= 2 && data.length === 0;\n              // this.countryService.setCountrySearchData(data);\n              this.searching = false;\n            });\n        }\n      }),\n      merge(this.hideSearchingWhenUnsubscribed)\n    )\n\n    formatter = (x: { locationId: string }) => x.locationId;\n\n  selectLocation($event) {\n    this.locationSelected = true;\n    this.locationModel = $event.item;\n    this.locationFlag = ($event.item.twoCharCode) ? $event.item.twoCharCode.toLowerCase() : null;\n    this.selectCountry.emit($event);\n    // this.countryService.setCountryData(this.locationModel);\n  }\n\n  deselectLocation() {\n    this.locationSelected = false;\n    this.locationModel = null;\n    this.locationFlag = null;\n    this.deselectCountry.emit();\n  }\n\n  onFocus(e: Event): void {\n    e.stopPropagation();\n    setTimeout(() => {\n      const inputEvent: Event = new Event('input');\n      e.target.dispatchEvent(inputEvent);\n    }, 0);\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-country/search-country.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-location/search-location.component.css\n// module id = ./src/app/shared/components/search-location/search-location.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\n  <img src=\\\"assets/images/flags/128x128/{{r.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\n  <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\n  <strong *ngIf=\\\"r.locationCode\\\">Code: </strong> {{ r.locationCode }}\\n</ng-template>\\n\\n<div class=\\\"row justify-content-end\\\">\\n  <div class=\\\"col-lg-10 col-md-8\\\">\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <button disabled class=\\\"btn btn-sm btn-ssn\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/search.png\\\" height=\\\"20px\\\">\\n        </button>\\n      </div>\\n      <input id=\\\"search-location\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"locationModel\\\" [ngbTypeahead]=\\\"search\\\"\\n        [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectLocation($event)\\\" placeholder=\\\"Enter search here...\\\"\\n        (focus)=\\\"onFocus($event)\\\" />\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-2\\\">\\n    <div *ngIf=\\\"searching\\\" class=\\\"input-group-append\\\">\\n      <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/location.gif\\\" height=\\\"32px\\\">\\n      <p>Searching</p>\\n    </div>\\n    <div *ngIf=\\\"searchFailed\\\" class=\\\"input-group-append\\\">\\n      <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"32px\\\">\\n      <p>No results</p>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-location/search-location.component.html\n// module id = ./src/app/shared/components/search-location/search-location.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, debounceTime, distinctUntilChanged, filter, merge, switchMap, tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs/Subject';\nimport { LocationModel } from '../../models/';\nimport { SearchLocationService } from './search-location.service';\n\n@Component({\n  selector: 'app-search-location',\n  templateUrl: './search-location.component.html',\n  styleUrls: ['./search-location.component.css'],\n  providers: [SearchLocationService]\n})\nexport class SearchLocationComponent implements OnInit {\n\n  @Input() showDropdown = true;\n  @Input() restrictTypeHarbour = false;\n\n  @Output() locationResult = new EventEmitter<LocationModel>();\n  @Output() locationSearchResult = new EventEmitter<any>();\n\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN_2;\n\n  locationModel: any;\n  locationSelected: boolean;\n\n  searching = false;\n  searchFailed = false;\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\n    (this.searching = false)\n  );\n\n  constructor(private locationSearchService: SearchLocationService) {\n    this.locationSelected = false;\n  }\n\n  ngOnInit() {\n    this.locationSearchService.getPlaceHolderData().subscribe(res => {\n      this.locationSearchResult.emit(res);\n    });\n   }\n\n  formatter = (x: { locationId: string }) => '';\n\n  search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(150),\n      distinctUntilChanged(),\n      tap(term => {\n        this.searchFailed = false;\n        this.searching = (term.length >= 2);\n      }),\n      switchMap(term => (this.showDropdown) ?\n        this.locationSearchService.search(term, this.restrictTypeHarbour, this.resultsDropdown).pipe(\n          tap(() => {\n            this.searchFailed = false;\n          }),\n          catchError(() => {\n            this.searchFailed = true;\n            return of([]);\n          })\n        ) : of([])\n      ),\n      tap(res => {\n        if (this.showDropdown) {\n          this.searching = false;\n          this.searchFailed = this.locationModel.length >= 2 && res.length === 0;\n        } else {\n          this.locationSearchService.search(this.locationModel, this.restrictTypeHarbour, this.resultsWithoutDropdown).subscribe(\n            data => {\n              this.searchFailed = this.locationModel.length >= 2 && data.length === 0;\n              this.locationSearchResult.emit(data);\n              this.searching = false;\n            });\n        }\n      }),\n      merge(this.hideSearchingWhenUnsubscribed)\n    )\n\n\n  selectLocation($event) {\n    this.locationModel = $event.item;\n    this.locationSelected = true;\n    this.locationResult.emit(this.locationModel);\n  }\n\n\n  onFocus(e: Event): void {\n    e.stopPropagation();\n    setTimeout(() => {\n      const inputEvent: Event = new Event('input');\n      e.target.dispatchEvent(inputEvent);\n    }, 0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-location/search-location.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SearchService } from 'app/shared/services/search.service';\nimport 'rxjs/add/observable/of';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class SearchLocationService {\n  private searchService: SearchService;\n  private searchUrl: string;\n  private searchHarbourUrl: string;\n  private placeholderLocationDataUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.searchService = new SearchService(this.http);\n    this.searchUrl = 'api/location/search';\n    this.searchHarbourUrl = 'api/location/harbour/search';\n    this.placeholderLocationDataUrl = '/api/location/placeholder';\n  }\n\n  public search(term: string, restrictTypeHarbour: boolean, amount = 10) {\n    if (term.length < 2) {\n      return Observable.of([]);\n    }\n    const uri = (restrictTypeHarbour) ? this.searchHarbourUrl : this.searchUrl;\n    return this.searchService.search(uri, term, amount)/* .map(response => response.json().items) */;\n  }\n\n  getPlaceHolderData() {\n    return this.http.get(this.placeholderLocationDataUrl);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-location/search-location.service.ts","module.exports = \"::-webkit-input-placeholder { \\n    font-style: italic; \\n } \\n :-moz-placeholder { \\n    font-style: italic;   \\n } \\n ::-moz-placeholder { \\n    font-style: italic;   \\n } \\n :-ms-input-placeholder {   \\n    font-style: italic;  \\n } \\n .btn-add-org {\\n\\tmargin-left: 1em;\\n} \\n @media only screen and (max-width : 425px) {\\n\\n\\t.btn-add-org {\\n\\t\\tmargin-top: 1em !important;\\n\\t}\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-organization/search-organization.component.css\n// module id = ./src/app/shared/components/search-organization/search-organization.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card-body\\\">\\n  <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\n    <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\n    <strong *ngIf=\\\"r.organizationNo\\\">Org.no.: </strong> {{ r.organizationNo }}\\n  </ng-template>\\n\\n  <div class=\\\"text-center\\\">\\n    <label for=\\\"search-organization\\\">{{ header }}</label>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-2\\\"></div>\\n      <div class=\\\"col-8\\\">\\n        <div *ngIf=\\\"showDropdown\\\" class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <button disabled class=\\\"btn btn-sm btn-ssn\\\">\\n              <img src=\\\"assets/images/icons/128x128/white/search.png\\\" height=\\\"20px\\\">\\n            </button>\\n          </div>\\n          <input id=\\\"search-organization\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"organizationModel\\\"\\n            [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectOrganization($event)\\\"\\n            placeholder=\\\"Enter search here...\\\" (focus)=\\\"onFocus($event)\\\" />\\n            <button (click)=\\\"addOrg()\\\" class=\\\"btn btn-sm btn-ssn btn-add-org\\\">\\n              <img src=\\\"assets/images/icons/128x128/white/pax.png\\\" height=\\\"20px\\\" />\\n              Add Organization\\n            </button>\\n        </div>\\n        <div *ngIf=\\\"!showDropdown\\\" class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <button disabled class=\\\"btn btn-sm btn-ssn\\\">\\n              <img src=\\\"assets/images/icons/128x128/white/search.png\\\" height=\\\"20px\\\">\\n            </button>\\n          </div>\\n          <input id=\\\"search-organization-no-dropdown\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"organizationModel\\\"\\n            [ngbTypeahead]=\\\"search\\\" placeholder=\\\"Enter search here...\\\" (focus)=\\\"onFocus($event)\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"col-2\\\">\\n        <div *ngIf=\\\"searching\\\">\\n          <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/pax.gif\\\" height=\\\"32px\\\">\\n          <p>Searching</p>\\n        </div>\\n        <div *ngIf=\\\"searchFailed\\\">\\n          <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"32px\\\">\\n          <p>No results</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"organizationSelected\\\" class=\\\"text-center\\\">\\n    <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/pax.gif\\\" height=\\\"32px\\\">\\n    <p>Loading organization...</p>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-organization/search-organization.component.html\n// module id = ./src/app/shared/components/search-organization/search-organization.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ORGANIZATION_TYPES } from 'app/shared/constants/enumValues';\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\nimport { RegisterOrganizationComponent } from '../../../main-content/content-container/basis-data/organization/register-organization/register-organization.component';\nimport { OrganizationModel } from '../../models/organization-model';\nimport { SearchOrganizationService } from './search-organization.service';\n\n\n@Component({\n  selector: 'app-search-organization',\n  templateUrl: './search-organization.component.html',\n  styleUrls: ['./search-organization.component.css'],\n  providers: [SearchOrganizationService]\n})\nexport class SearchOrganizationComponent implements OnInit {\n\n  @Input() showDropdown = true;\n  @Input() header = 'Search using organization name or organization number';\n  @Input() filter: ORGANIZATION_TYPES;\n\n  @Output() organizationResult = new EventEmitter<any>();\n  @Output() organizationSearchResult = new EventEmitter<any>();\n\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN;\n\n  organizationModel: any;\n  organizationSelected: boolean;\n\n  searching = false;\n  searchFailed = false;\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\n    (this.searching = false)\n  );\n\n  constructor(private searchOrganizationService: SearchOrganizationService,\n              private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.organizationSelected = false;\n    this.searchOrganizationService.getPlaceHolderData().subscribe(res => {\n      this.organizationSearchResult.emit(res);\n    });\n  }\n\n  search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(150),\n      distinctUntilChanged(),\n      tap(term => {\n        this.searchFailed = false;\n        this.searching = (term.length >= 2);\n      }),\n      switchMap(term => (this.showDropdown) ?\n        this.searchOrganizationService.search(this.filter, term, this.resultsDropdown).pipe(\n          tap(() => {\n            this.searchFailed = false;\n          }),\n          catchError(() => {\n            this.searchFailed = true;\n            return of([]);\n          })\n        ) : of([])\n      ),\n      tap(res => {\n        if (this.showDropdown) {\n          this.searching = false;\n          this.searchFailed = this.organizationModel.length >= 2 && res.length === 0;\n        } else {\n          this.searchOrganizationService.search(this.filter, this.organizationModel, this.resultsWithoutDropdown).subscribe(\n            data => {\n              this.searchFailed = this.organizationModel.length >= 2 && data.length === 0;\n              this.organizationSearchResult.emit(data);\n              this.searching = false;\n            });\n        }\n      }),\n      merge(this.hideSearchingWhenUnsubscribed)\n    )\n  formatter = (x: { organizationId: string }) => x.organizationId;\n\n  selectOrganization($event) {\n    this.organizationSelected = true;\n    this.organizationModel = $event.item;\n    this.organizationResult.emit(this.organizationModel);\n  }\n\n  onFocus(e: Event): void {\n    e.stopPropagation();\n    setTimeout(() => {\n      const inputEvent: Event = new Event('input');\n      e.target.dispatchEvent(inputEvent);\n    }, 0);\n  }\n\n  addOrg(): void {\n    const modalRef = this.modalService.open(RegisterOrganizationComponent, {size: 'lg', windowClass: 'app-org-dialog'});\n\n    modalRef.componentInstance.registered = (result) => {\n      this.organizationSelected = true;\n      this.organizationModel = result;\n      this.organizationResult.emit(this.organizationModel);\n      modalRef.close();\n    };\n\n    modalRef.componentInstance.closed = () => {\n      modalRef.close();\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-organization/search-organization.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ORGANIZATION_TYPES } from 'app/shared/constants/enumValues';\nimport { SearchService } from 'app/shared/services/search.service';\nimport 'rxjs/add/observable/of';\nimport { Observable } from 'rxjs/Observable';\nimport { OrganizationModel } from '../../models/organization-model';\n\n@Injectable()\nexport class SearchOrganizationService {\n  private searchService: SearchService;\n  private searchUrl: string;\n  private organizationUrl: string;\n  private organizationPlaceholderDataUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.searchService = new SearchService(this.http);\n    this.searchUrl = 'api/organization/search';\n    this.organizationUrl = 'api/organization';\n    this.organizationPlaceholderDataUrl = 'api/organization/placeholder';\n  }\n\n  search(type: ORGANIZATION_TYPES = null, term: string, amount = 10) {\n    if (term.length < 2) {\n      return Observable.of([]);\n    }\n    if (type == null || type === undefined) {\n      return this.searchService.search(this.searchUrl, term, amount);\n    } else {\n        const uri = [this.searchUrl, term, amount, type].join('/');\n        return this.http.get(uri);\n    }\n  }\n\n\n  getorganization(id: number): Observable<OrganizationModel> {\n    const uri = [this.organizationUrl, id].join('/');\n    return this.http.get<OrganizationModel>(uri);\n  }\n\n  getPlaceHolderData() {\n    return this.http.get(this.organizationPlaceholderDataUrl);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-organization/search-organization.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.css\n// module id = ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\n  <img *ngIf=\\\"r.country.twoCharCode\\\" src=\\\"assets/images/flags/{{ r.country.twoCharCode | lowercase }}.png\\\" height=\\\"16px\\\" />\\n  <strong *ngIf=\\\"r.country.threeCharCode\\\">Code: </strong> {{ r.country.threeCharCode }}\\n  <strong *ngIf=\\\"r.country.name\\\">Country: </strong> {{ r.country.name }}\\n</ng-template>\\n\\n<div class=\\\"text-center\\\">\\n  <label for=\\\"search-shipFlagCode\\\">Search using flag code or name of country</label>\\n  <div class=\\\"row justify-content-end\\\">\\n    <div class=\\\"col-sm-10 col-md-8\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <button disabled class=\\\"btn btn-sm btn-ssn\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/search.png\\\" height=\\\"20px\\\">\\n          </button>\\n        </div>\\n        <input id=\\\"search-shipFlagCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipFlagCodeModel\\\"\\n          [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectShipFlagCode($event)\\\"\\n          placeholder=\\\"Enter search here...\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <div *ngIf=\\\"searching\\\">\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/flag.gif\\\" height=\\\"32px\\\">\\n        <p>Searching</p>\\n      </div>\\n      <div *ngIf=\\\"searchFailed\\\">\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"32px\\\">\\n        <p>No results</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.html\n// module id = ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\nimport { SearchShipFlagCodeService } from './search-ship-flag-code.service';\n\n@Component({\n  selector: 'app-search-ship-flag-code',\n  templateUrl: './search-ship-flag-code.component.html',\n  styleUrls: ['./search-ship-flag-code.component.css'],\n  providers: [SearchShipFlagCodeService]\n})\nexport class SearchShipFlagCodeComponent implements OnInit {\n\n  @Output() shipFlagCodeResult = new EventEmitter<any>();\n\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\n\n  shipFlagCodeModel: any;\n  shipFlagCodeSelected: boolean;\n\n  searching = false;\n  searchFailed = false;\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\n    (this.searching = false)\n  );\n\n  constructor(private searchShipFlagCodeService: SearchShipFlagCodeService) {\n    this.shipFlagCodeSelected = false;\n  }\n\n  ngOnInit() { }\n\n  search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(50),\n      distinctUntilChanged(),\n      tap((term) => {\n        this.searchFailed = false;\n        this.searching = (term.length >= 1);\n      }),\n      switchMap(term =>\n        this.searchShipFlagCodeService.search(term, this.resultsDropdown).pipe(\n          tap(() => this.searchFailed = false),\n          catchError(() => {\n            this.searchFailed = true;\n            return of([]);\n          }))\n      ),\n      tap((res) => {\n        this.searching = false;\n        this.searchFailed = (this.shipFlagCodeModel.length >= 1 && res.length === 0);\n      }),\n      merge(this.hideSearchingWhenUnsubscribed)\n    )\n\n  formatter = (x: { shipFlagCodeId: string }) => '';\n\n  selectShipFlagCode($event) {\n    this.shipFlagCodeModel = $event.item;\n    this.shipFlagCodeSelected = true;\n    this.shipFlagCodeResult.emit(this.shipFlagCodeModel);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SearchService } from 'app/shared/services/search.service';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class SearchShipFlagCodeService {\n\n    private searchService: SearchService;\n    private searchUrl: string;\n\n    constructor(private http: HttpClient) {\n        this.searchService = new SearchService(http);\n        this.searchUrl = 'api/shipflagcode/search';\n    }\n\n    search(term: string, amount = 10) {\n        if (term.length < 2) {\n            return Observable.of([]);\n        }\n        return this.searchService.search(this.searchUrl, term, amount);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship/search-ship.component.css\n// module id = ./src/app/shared/components/search-ship/search-ship.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\n  <img src=\\\"assets/images/flags/128x128/{{r.shipFlagCode.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\n  <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\n  <strong *ngIf=\\\"r.callSign\\\"> Call sign: </strong> {{ r.callSign }}\\n  <strong *ngIf=\\\"r.imoNo\\\"> IMO number: </strong> {{ r.imoNo }}\\n  <strong *ngIf=\\\"r.mmsiNo\\\"> MMSI number: </strong> {{ r.mmsiNo }}\\n</ng-template>\\n\\n<div class=\\\"text-center\\\">\\n  <label for=\\\"search-ship\\\">Search using ship name, call sign, IMO number or MMSI number</label>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\"></div>\\n    <div class=\\\"col-8\\\">\\n      <div *ngIf=\\\"showDropdown\\\" class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <button disabled class=\\\"btn btn-sm btn-ssn\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/search.png\\\" height=\\\"20px\\\">\\n          </button>\\n        </div>\\n        <input id=\\\"search-ship\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipModel\\\" [ngbTypeahead]=\\\"search\\\"\\n          [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectShip($event)\\\" placeholder=\\\"Enter search here...\\\"\\n        />\\n      </div>\\n      <div *ngIf=\\\"!showDropdown\\\" class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <button disabled class=\\\"btn btn-sm btn-ssn\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/search.png\\\" height=\\\"20px\\\">\\n          </button>\\n        </div>\\n        <input id=\\\"search-ship-no-dropdown\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipModel\\\" [ngbTypeahead]=\\\"search\\\"\\n          placeholder=\\\"Enter search here...\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <div *ngIf=\\\"searching\\\">\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/ship.gif\\\" height=\\\"32px\\\">\\n        <p>Searching</p>\\n      </div>\\n      <div *ngIf=\\\"searchFailed\\\">\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"32px\\\">\\n        <p>No results</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"shipSelected\\\" class=\\\"text-center\\\">\\n  <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/ship.gif\\\" height=\\\"32px\\\">\\n  <p>Loading ship...</p>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship/search-ship.component.html\n// module id = ./src/app/shared/components/search-ship/search-ship.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SHIP_STATUSES } from 'app/shared/constants/enumValues';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\nimport { SEARCH_AMOUNTS } from '../../constants/search-amounts';\nimport { SearchShipService } from './search-ship.service';\n\n@Component({\n  selector: 'app-search-ship',\n  templateUrl: './search-ship.component.html',\n  styleUrls: ['./search-ship.component.css'],\n  providers: [SearchShipService]\n})\nexport class SearchShipComponent implements OnInit {\n\n  @Input() showDropdown = true;\n  @Input() filter: SHIP_STATUSES;\n\n  @Output() shipResult = new EventEmitter<any>();\n  @Output() shipSearchResult = new EventEmitter<any>();\n\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN;\n\n  shipModel: any;\n  shipSelected: boolean;\n\n  searching = false;\n  searchFailed = false;\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\n    (this.searching = false)\n  );\n\n  constructor(private searchShipService: SearchShipService) { }\n\n  ngOnInit() {\n    this.shipSelected = false;\n    this.searchShipService.getPlaceHolderData().subscribe(res => {\n      this.shipSearchResult.emit(res);\n    });\n  }\n\n  search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(150),\n      distinctUntilChanged(),\n      tap(term => {\n        this.searchFailed = false;\n        this.searching = (term.length >= 2);\n      }),\n      switchMap(term => (this.showDropdown) ?\n        this.searchShipService.search(this.filter, term, this.resultsDropdown).pipe(\n          tap(() => {\n            this.searchFailed = false;\n          }),\n          catchError(() => {\n            this.searchFailed = true;\n            return of([]);\n          })\n        ) : of([])\n      ),\n      tap(res => {\n        if (this.showDropdown) {\n          this.searching = false;\n          this.searchFailed = this.shipModel.length >= 2 && res.length === 0;\n        } else {\n          this.searchShipService.search(this.filter, this.shipModel, this.resultsWithoutDropdown).subscribe(\n            data => {\n              this.searchFailed = this.shipModel.length >= 2 && data.length === 0;\n              this.shipSearchResult.emit(data);\n              this.searching = false;\n            });\n        }\n      }),\n      merge(this.hideSearchingWhenUnsubscribed)\n    )\n  formatter = (x: { shipId: string }) => '';\n\n  selectShip($event) {\n    this.shipSelected = true;\n    this.shipModel = $event.item;\n\n    this.searchShipService.getShip($event.item.shipId).subscribe(\n      result => {\n        if (result) {\n          this.shipResult.emit(result);\n        }\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-ship/search-ship.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SHIP_STATUSES } from 'app/shared/constants/enumValues';\nimport { SearchService } from 'app/shared/services/search.service';\nimport 'rxjs/add/observable/of';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class SearchShipService {\n  private searchService: SearchService;\n  private searchUrl: string;\n  private shipUrl: string;\n  private placeholderShipDataUrl: string;\n\n\n  constructor(private http: HttpClient) {\n    this.searchService = new SearchService(this.http);\n    this.searchUrl = 'api/ship/search';\n    this.shipUrl = 'api/ship';\n    this.placeholderShipDataUrl = '/api/ship/placeholder';\n  }\n\n  search(type: SHIP_STATUSES = null, term: string, amount = 10) {\n    if (term.length < 2) {\n      return Observable.of([]);\n    }\n    if (type == null || type === undefined) {\n      return this.searchService.search(this.searchUrl, term, amount);\n    } else {\n      const uri = [this.searchUrl, term, amount, type].join('/');\n      return this.http.get(uri);\n    }\n  }\n\n  getShip(id: number) {\n    const uri = [this.shipUrl, id].join('/');\n    return this.http.get(uri);\n  }\n\n  getPlaceHolderData() {\n    return this.http.get(this.placeholderShipDataUrl);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-ship/search-ship.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-user/search-user.component.css\n// module id = ./src/app/shared/components/search-user/search-user.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\n  <img src=\\\"assets/images/flags/128x128/{{r.shipFlagCode.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\n  <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\n  <strong *ngIf=\\\"r.callSign\\\"> Call sign: </strong> {{ r.callSign }}\\n  <strong *ngIf=\\\"r.imoNo\\\"> IMO number: </strong> {{ r.imoNo }}\\n  <strong *ngIf=\\\"r.mmsiNo\\\"> MMSI number: </strong> {{ r.mmsiNo }}\\n</ng-template>\\n\\n<div class=\\\"text-center\\\">\\n  <label for=\\\"search-ship\\\">Search using username or full name</label>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\"></div>\\n    <div class=\\\"col-8\\\">\\n      <div *ngIf=\\\"showDropdown\\\" class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <button disabled class=\\\"btn btn-sm btn-ssn\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/search.png\\\" height=\\\"20px\\\">\\n          </button>\\n        </div>\\n        <input id=\\\"search-ship\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"userModel\\\" [ngbTypeahead]=\\\"search\\\"\\n          [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectUser($event)\\\" placeholder=\\\"Enter search here...\\\"\\n        />\\n      </div>\\n      <div *ngIf=\\\"!showDropdown\\\" class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <button disabled class=\\\"btn btn-sm btn-ssn\\\">\\n            <img src=\\\"assets/images/icons/128x128/white/search.png\\\" height=\\\"20px\\\">\\n          </button>\\n        </div>\\n        <input id=\\\"search-ship-no-dropdown\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"userModel\\\" [ngbTypeahead]=\\\"search\\\"\\n          placeholder=\\\"Enter search here...\\\" />\\n      </div>\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <div *ngIf=\\\"searching\\\">\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/ship.gif\\\" height=\\\"32px\\\">\\n        <p>Searching</p>\\n      </div>\\n      <div *ngIf=\\\"searchFailed\\\">\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"32px\\\">\\n        <p>No results</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"userSelected\\\" class=\\\"text-center\\\">\\n  <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/ship.gif\\\" height=\\\"32px\\\">\\n  <p>Loading user...</p>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-user/search-user.component.html\n// module id = ./src/app/shared/components/search-user/search-user.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\nimport { SEARCH_AMOUNTS } from '../../constants/search-amounts';\nimport { SearchUserService } from './search-user.service';\n\n@Component({\n  selector: 'app-search-user',\n  templateUrl: './search-user.component.html',\n  styleUrls: ['./search-user.component.css'],\n  providers: [SearchUserService]\n})\nexport class SearchUserComponent implements OnInit {\n\n  @Input() showDropdown = true;\n\n  @Output() userResult = new EventEmitter<any>();\n  @Output() userSearchResult = new EventEmitter<any>();\n\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN;\n\n  userModel: any;\n  userSelected: boolean;\n\n  searching = false;\n  searchFailed = false;\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\n    (this.searching = false)\n  );\n\n  constructor(private searchUserService: SearchUserService) { }\n\n  ngOnInit() {\n    this.userSelected = false;\n    this.searchUserService.getPlaceHolderData().subscribe(res => {\n      this.userSearchResult.emit(res);\n    });\n  }\n\n  search = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(150),\n      distinctUntilChanged(),\n      tap(term => {\n        this.searchFailed = false;\n        this.searching = (term.length >= 2);\n      }),\n      switchMap(term => (this.showDropdown) ?\n        this.searchUserService.search(term, this.resultsDropdown).pipe(\n          tap(() => {\n            this.searchFailed = false;\n          }),\n          catchError(() => {\n            this.searchFailed = true;\n            return of([]);\n          })\n        ) : of([])\n      ),\n      tap(res => {\n        if (this.showDropdown) {\n          this.searching = false;\n          this.searchFailed = this.userModel.length >= 2 && res.length === 0;\n        } else {\n          this.searchUserService.search(this.userModel, this.resultsWithoutDropdown).subscribe(\n            data => {\n              this.searchFailed = this.userModel.length >= 2 && data.length === 0;\n              this.userSearchResult.emit(data);\n              this.searching = false;\n            });\n        }\n      }),\n      merge(this.hideSearchingWhenUnsubscribed)\n    )\n  formatter = (x: { shipId: string }) => '';\n\n  selectUser($event) {\n    this.userSelected = true;\n    this.userModel = $event.item;\n\n    this.searchUserService.getUser($event.item.email).subscribe(\n      result => {\n        if (result) {\n          this.userResult.emit(result);\n        }\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-user/search-user.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SearchService } from 'app/shared/services/search.service';\nimport 'rxjs/add/observable/of';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class SearchUserService {\n  private searchService: SearchService;\n  private searchUrl: string;\n  private userUrl: string;\n  private placeholderUserDataUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.searchService = new SearchService(this.http);\n    this.searchUrl = 'api/account/user/search';\n    this.userUrl = 'api/account/user';\n    this.placeholderUserDataUrl = 'api/account/placeholder';\n  }\n\n  search(term: string, amount = 25) {\n    if (term.length < 2) {\n      return Observable.of([]);\n    }\n\n    return this.searchService.search(this.searchUrl, term, amount);\n  }\n\n  getUser(email: string) {\n    const uri = [this.userUrl, email].join('/');\n    return this.http.get(uri);\n  }\n\n  getPlaceHolderData() {\n    return this.http.get(this.placeholderUserDataUrl);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-user/search-user.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/select-ship-contact/select-ship-contact.component.css\n// module id = ./src/app/shared/components/select-ship-contact/select-ship-contact.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Contact Information\\\" icon=\\\"contact.png\\\">\\n  <div class=\\\"text-center\\\">\\n    <label for=\\\"contact_info\\\">Select contact information</label>\\n  </div>\\n  <ng-select id=\\\"contact_info\\\" [items]=\\\"contactList\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"contactMedium.contactMediumType\\\"\\n    placeholder=\\\"Select contact mediums\\\" [ngModel]=\\\"selectedContactModelList\\\" (add)=\\\"onAdd($event)\\\" (remove)=\\\"onRemove($event)\\\" (clear)=\\\"onClear()\\\"></ng-select>\\n\\n  <div *ngFor=\\\"let contactModel of selectedContactModelList; let i = index\\\" class=\\\"form-group row mt-3\\\">\\n    <div class=\\\"col\\\">\\n\\n      <div class=\\\"input-group input-group-sm\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text bg-ssn text-white\\\">{{ contactModel.contactMedium.contactMediumType }}</span>\\n        </div>\\n\\n        <input id=\\\"contact_value\\\" name=\\\"contactValue\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter {{ contactModel.contactMedium.contactMediumType }}\\\"\\n          [(ngModel)]=\\\"selectedContactModelList[i].contactValue\\\" (ngModelChange)=\\\"contactInfoChanged()\\\" />\\n\\n        <div class=\\\"input-group-append\\\">\\n          <div class=\\\"input-group-text bg-ssn text-white\\\">\\n            <input type=\\\"radio\\\" id=\\\"{{ i }}\\\" name=\\\"preferredRadios\\\" [value]=\\\"true\\\" [(ngModel)]=\\\"selectedContactModelList[i].isPreferred\\\"\\n              (ngModelChange)=\\\"preferredSet(selectedContactModelList[i])\\\" [checked]=\\\"selectedContactModelList[i].isPreferred\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"{{ i }}\\\">Preferred</label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/select-ship-contact/select-ship-contact.component.html\n// module id = ./src/app/shared/components/select-ship-contact/select-ship-contact.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { ShipContactModel } from 'app/shared/models/ship-contact-model';\nimport { ConstantsService } from 'app/shared/services/constants.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-select-ship-contact',\n  templateUrl: './select-ship-contact.component.html',\n  styleUrls: ['./select-ship-contact.component.css']\n})\nexport class SelectShipContactComponent implements OnInit, OnDestroy {\n\n  @Input() selectedContactModelList: ShipContactModel[];\n\n  @Output() contactModelListResult = new EventEmitter<ShipContactModel[]>();\n\n  contactList: ShipContactModel[];\n\n  getContactMediumListSubscription: Subscription;\n\n  constructor(private constantsService: ConstantsService) { }\n\n  ngOnInit() {\n    this.getContactMediumListSubscription = this.constantsService.getContactMediumList().subscribe(\n      data => {\n        if (data) {\n          this.contactList = data.map(cm => {\n            const contact = new ShipContactModel();\n            contact.contactMediumId = cm.contactMediumId;\n            contact.contactMedium = cm;\n            return contact;\n          });\n        }\n      }\n    );\n\n    if (this.selectedContactModelList === undefined) {\n      this.selectedContactModelList = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.getContactMediumListSubscription.unsubscribe();\n  }\n\n  contactInfoChanged() {\n    this.contactModelListResult.emit(this.selectedContactModelList);\n  }\n\n  onAdd($event) {\n    this.selectedContactModelList.push($event);\n    this.contactModelListResult.emit(this.selectedContactModelList);\n  }\n\n  onRemove($event) {\n    const index = this.selectedContactModelList.findIndex((item, i) => item.contactMediumId === $event.value.contactMediumId);\n    if (index !== -1) {\n      this.selectedContactModelList.splice(index, 1);\n      this.contactModelListResult.emit(this.selectedContactModelList);\n    } else {\n      console.error('Selected contact medium could not be found.');\n    }\n  }\n\n  onClear() {\n    this.selectedContactModelList = [];\n    this.contactModelListResult.emit(this.selectedContactModelList);\n  }\n\n  preferredSet(selectedContactModel: ShipContactModel) {\n    const updatedContactModelList = this.selectedContactModelList.map(\n      contactModel => {\n        if (contactModel.contactMediumId === selectedContactModel.contactMediumId) {\n          return selectedContactModel;\n        }\n        const notPreferredContactModel = contactModel;\n        notPreferredContactModel.isPreferred = false;\n        return notPreferredContactModel;\n      }\n    );\n    this.contactModelListResult.emit(updatedContactModelList);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/select-ship-contact/select-ship-contact.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css\n// module id = ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table table-bordered\\\">\\n    <thead>\\n      <tr class=\\\"bg-ssn text-ssn\\\">\\n        <th colspan=3>Selected Contact Mediums</th>\\n      </tr>\\n    </thead>\\n    <tbody class=\\\"text-left\\\">\\n      <tr *ngFor=\\\"let contactModel of selectedContactModelList\\\">\\n        <td class=\\\"bg-ssn text-ssn\\\">{{ contactModel.contactMedium.contactMediumType }}</td>\\n        <td [attr.colspan]=\\\"!contactModel.isPreferred ? 2 : null\\\">{{ contactModel.contactValue ? contactModel.contactValue : 'Value not set' }}</td>\\n        <td *ngIf=\\\"contactModel.isPreferred\\\">Preferred</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html\n// module id = ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html\n// module chunks = main","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ShipContactModel } from '../../models/ship-contact-model';\n\n@Component({\n  selector: 'app-selected-contact-mediums',\n  templateUrl: './selected-contact-mediums.component.html',\n  styleUrls: ['./selected-contact-mediums.component.css']\n})\nexport class SelectedContactMediumsComponent implements OnInit {\n\n  @Input() selectedContactModelList: ShipContactModel[];\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.css\n// module id = ./src/app/shared/components/ship-info-table/ship-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Ship Information\\\" icon=\\\"ship.png\\\">\\n  <tbody>\\n    <tr>\\n      <td>\\n        <img *ngIf=\\\"shipFlag\\\" src=\\\"assets/images/flags/128x128/{{shipFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\n      </td>\\n      <td *ngFor=\\\"let entry of shipInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\n        <tr>\\n          <small>{{ entry.description }}:</small>\\n        </tr>\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\n        <tr *ngIf=\\\"!entry.data\\\">\\n          <div class=\\\"font-italic\\\">Not provided.</div>\\n        </tr>\\n      </td>\\n    </tr>\\n  </tbody>\\n</app-table-card>\\n<app-table-card header=\\\"Ship Contact Information\\\" icon=\\\"contact.png\\\" collapsible=true collapsed=true>\\n  <tbody *ngIf=\\\"shipHasContactInfo\\\">\\n    <tr>\\n      <td *ngFor=\\\"let entry of shipContactInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\n        <tr>\\n          <small>{{ entry.description }}:\\n            <span *ngIf=\\\"entry.isPreferred\\\"> (preferred)</span>\\n          </small>\\n        </tr>\\n        <tr>{{ entry.data }}</tr>\\n      </td>\\n    </tr>\\n  </tbody>\\n  <tbody class=\\\"text-center\\\" *ngIf=\\\"!shipHasContactInfo\\\">\\n    <div class=\\\"my-3\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/warning.png\\\" height=\\\"24px\\\">\\n      <span>No contact information for this ship has been provided.</span>\\n    </div>\\n  </tbody>\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.html\n// module id = ./src/app/shared/components/ship-info-table/ship-info-table.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ShipProperties } from 'app/shared/constants/ship-properties';\nimport { ConstantsService, ShipService } from 'app/shared/services/';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-ship-info-table',\n  templateUrl: './ship-info-table.component.html',\n  styleUrls: ['./ship-info-table.component.css']\n})\nexport class ShipInfoTableComponent implements OnInit, OnDestroy {\n  shipFlag: string;\n  contactMediumList: any;\n  shipHasContactInfo: boolean;\n  shipContactInfo: any[] = [];\n\n  shipProperties: any = ShipProperties.PROPERTIES;\n  shipInfo: any[];\n\n  shipDataSubscription: Subscription;\n\n  constructor(\n    private shipService: ShipService,\n    private constantsService: ConstantsService\n  ) { }\n\n  ngOnInit() {\n    this.shipHasContactInfo = false;\n    this.shipDataSubscription = this.shipService.shipData$.subscribe(shipResult => {\n      if (shipResult) {\n        if (shipResult.shipFlagCode.country) {\n          this.shipFlag = shipResult.shipFlagCode.country.twoCharCode.toLowerCase();\n        }\n        if (shipResult.shipType) {\n          this.shipProperties.SHIP_TYPE.data = shipResult.shipType.name;\n        }\n        if (shipResult.shipStatus) {\n          this.shipProperties.SHIP_STATUS.data = shipResult.shipStatus.name;\n        }\n        this.shipProperties.SHIP_NAME.data = shipResult.name;\n        this.shipProperties.CALL_SIGN.data = shipResult.callSign;\n        this.shipProperties.IMO_NO.data = shipResult.imoNo;\n        this.shipProperties.MMSI_NO.data = shipResult.mmsiNo;\n        this.shipProperties.GROSS_TONNAGE.data = shipResult.grossTonnage;\n        this.shipProperties.LENGTH.data = shipResult.length;\n\n        this.constantsService.getContactMediumList().subscribe(\n          contactResult => {\n            if (contactResult) {\n              this.contactMediumList = contactResult;\n              if (contactResult && shipResult.shipContact != null && shipResult.shipContact.length > 0) {\n                this.shipHasContactInfo = true;\n                this.contactMediumList.forEach(contactMedium => {\n                  const value = shipResult.shipContact.find(shipCM => shipCM.contactMediumId === contactMedium.contactMediumId);\n                  if (value && (this.shipContactInfo.find(sc => sc.description === (contactMedium.contactMediumType)) == null)) {\n                    this.shipContactInfo.push({\n                      description: contactMedium.contactMediumType,\n                      data: value.contactValue,\n                      isPreferred: value.isPreferred\n                    });\n                  }\n                });\n              }\n            }\n          });\n      } else {\n        this.shipFlag = null;\n        this.shipProperties = ShipProperties.PROPERTIES;\n      }\n      this.shipInfo = Object.values(this.shipProperties);\n    });\n  }\n\n  ngOnDestroy() {\n    this.shipDataSubscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.css\n// module id = ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\n  <div class=\\\"d-table-row\\\">\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Edit ship\\\">\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Deactivate ship\\\">\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"openModal(deactivateModal)\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #deactivateModal let-close=\\\"close()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Deactivate Ship</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      <span>Are you sure you wish to deactivate this ship?</span>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"onDeactivateClick(); close\\\">\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"20px\\\">\\n      <span>Deactivate Ship</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\n      <span>Exit</span>\\n    </button>\\n  </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.html\n// module id = ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { SHIP_STATUSES } from 'app/shared/constants/enumValues';\nimport { ContentService, ShipService } from 'app/shared/services/';\nimport { ViewCell } from 'ng2-smart-table';\n\nconst RESULT_SUCCESS = 'Ship status was successfully updated.';\nconst RESULT_FAILURE = 'There was a problem when trying to save the ship to the database. Please try again later.';\n\n@Component({\n  selector: 'app-ship-button-row',\n  templateUrl: './ship-button-row.component.html',\n  styleUrls: ['./ship-button-row.component.css']\n})\nexport class ShipButtonRowComponent implements ViewCell, OnInit {\n\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n\n\n\n  constructor(\n    private shipService: ShipService,\n    private contentService: ContentService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() { }\n\n  onEditClick() {\n    this.setContent(CONTENT_NAMES.REGISTER_SHIP);\n  }\n\n  onDeactivateClick() {\n    const shipModel = this.rowData.shipModel;\n    this.shipService.getShipStatusByEnum(SHIP_STATUSES.INACTIVE)\n    .finally(() => {\n      this.shipService.updateShip(shipModel).subscribe(res => {\n        this.openConfirmationModal(\n          ConfirmationModalComponent.TYPE_SUCCESS,\n          RESULT_SUCCESS\n        );      }, error => {\n        this.openConfirmationModal(\n          ConfirmationModalComponent.TYPE_FAILURE,\n          RESULT_FAILURE\n        );\n      });\n    })\n    .subscribe(res => {\n      shipModel.shipStatusId = res.shipStatusId;\n    });\n  }\n\n  private setContent(content: string) {\n    this.setShip(content);\n  }\n\n  setShip(content) {\n    this.contentService.setLoadingScreen(true, 'ship.gif', 'Loading');\n    this.shipService.getShip(this.rowData.shipModel.shipId).subscribe(data => {\n      if (data) {\n        this.shipService.setShipData(data);\n        this.contentService.setContent(content);\n      }\n    });\n  }\n\n  private goBack() {\n    this.contentService.setContent(CONTENT_NAMES.VIEW_SHIPS);\n  }\n\n  openModal(content: any) {\n    this.modalService.open(content);\n  }\n\n  private openConfirmationModal(modalType: string, bodyText: string) {\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\n    modalRef.componentInstance.modalType = modalType;\n    modalRef.componentInstance.bodyText = bodyText;\n    modalRef.result.then(\n      result => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\n          this.goBack();\n        }\n      },\n      reason => {\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\n          this.goBack();\n        }\n      }\n    );\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-smart-table.component.css\n// module id = ./src/app/shared/components/ship-smart-table/ship-smart-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\n  <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n    <thead class=\\\"bg-ssn text-white\\\">\\n      <tr>\\n        <th class=\\\"py-1\\\">\\n          <h5 class=\\\"mb-0\\\">Ship search results</h5>\\n        </th>\\n      </tr>\\n    </thead>\\n  </table>\\n  <div class=\\\"table-responsive\\\">\\n    <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dataSource\\\"></ng2-smart-table>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-smart-table.component.html\n// module id = ./src/app/shared/components/ship-smart-table/ship-smart-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ShipService } from 'app/shared/services/ship.service';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ShipButtonRowComponent } from './ship-button-row/ship-button-row.component';\n\n@Component({\n  selector: 'app-ship-smart-table',\n  templateUrl: './ship-smart-table.component.html',\n  styleUrls: ['./ship-smart-table.component.css']\n})\nexport class ShipSmartTableComponent implements OnInit, OnDestroy {\n\n  tableData = [];\n  dataSource: LocalDataSource = new LocalDataSource();\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'There are no ships in this list.',\n\n    columns: {\n      country: {\n        title: 'Country',\n        type: 'html'\n      },\n      name: {\n        title: 'Name',\n        type: 'html'\n      },\n      callSign: {\n        title: 'Call Sign',\n        type: 'html'\n      },\n      actions: {\n        title: 'Actions',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: ShipButtonRowComponent\n      }\n    }\n  };\n\n  shipSearchDataSubscription: Subscription;\n\n  constructor(\n    private shipService: ShipService\n  ) { }\n\n  ngOnInit() {\n    this.shipSearchDataSubscription = this.shipService.shipSearchData$.subscribe(data => {\n      if (data) {\n        if (data.length !== 0) {\n          const rowList = [];\n          data.forEach(ship => {\n            const row = this.dataRow(ship);\n            rowList.push(row);\n          });\n          this.tableData = rowList;\n        }\n      }\n      this.dataSource.load(this.tableData);\n    });\n  }\n\n  ngOnDestroy() {\n    this.shipSearchDataSubscription.unsubscribe();\n  }\n\n  dataRow(ship) {\n    const row = {\n      shipModel: ship,\n      country:\n        `<div class=\"no-wrap\"><div hidden>` +\n        ship.shipFlagCode.country.name + // ugly fix for alphabetical sorting but it works\n        `</div> <div> <img src='assets/images/flags/128x128/` +\n        ship.shipFlagCode.country.twoCharCode.toLowerCase() +\n        `.png' height='20px'/> ` +\n        ship.shipFlagCode.country.name +\n        `</div></div>`,\n      name: ship.name,\n      callSign: ship.callSign,\n      actions: 'btn'\n    };\n    return row;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ship-smart-table/ship-smart-table.component.ts","module.exports = \".as-dialog {\\n\\tmargin-bottom:0 !important;\\n}\\n.close {\\n\\tcolor: #fff;\\n\\tright: 0;\\n\\tposition: fixed;\\n\\tpadding: .3em 1em;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-bg/ssn-bg.component.css\n// module id = ./src/app/shared/components/ssn-bg/ssn-bg.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light p-3 {{shownAs}}\\\">\\n\\n  <div class=\\\"d-table-row\\\">\\n    <div class=\\\"d-table-cell\\\" *ngIf=\\\"icon\\\">\\n      <img src=\\\"{{iconPath}}{{icon}}\\\" class=\\\"mb-2\\\" height=\\\"32px\\\">\\n    </div>\\n    <div class=\\\"d-table-cell pl-2\\\">\\n      <h3 class=\\\"text-ssn mb-0\\\">{{ header }}</h3>\\n    </div>\\n    <button *ngIf=\\\"shownAs === 'as-dialog'\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <ng-content></ng-content>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-bg/ssn-bg.component.html\n// module id = ./src/app/shared/components/ssn-bg/ssn-bg.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-ssn-bg',\n  templateUrl: './ssn-bg.component.html',\n  styleUrls: ['./ssn-bg.component.css']\n})\nexport class SsnBgComponent implements OnInit {\n  iconPath = 'assets/images/icons/128x128/white/';\n\n  @Input() icon: string;\n\n  @Input() header: string;\n\n  @Input() shownAs: string;\n\n  @Output() closed = new EventEmitter<boolean>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  close(): void {\n     this.closed.emit(true);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ssn-bg/ssn-bg.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-card/ssn-card.component.css\n// module id = ./src/app/shared/components/ssn-card/ssn-card.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card ssn-card my-2\\\">\\n  <div class=\\\"card-header bg-ssn text-ssn text-left d-table py-1\\\">\\n    <div class=\\\"d-table-row text-white px-4\\\" [ngClass]=\\\"{clickable: collapsible}\\\" (click)=\\\"collapsible ? changeState() : null\\\">\\n\\n      <div class=\\\"d-table-cell pt-1\\\">\\n        <h5 class=\\\"mb-0 text-vertical-align\\\"><img *ngIf=\\\"icon\\\" src=\\\"{{iconPath}}{{icon}}\\\" height=\\\"24px\\\" /> {{ header }}</h5>\\n      </div>\\n      <div class=\\\"d-table-cell pb-0 text-right\\\">\\n        <button *ngIf=\\\"collapsible\\\" class=\\\"btn btn-sm btn-outline-light\\\" (mouseover)=\\\"collapsedIconColor=''\\\" (mouseout)=\\\"collapsedIconColor='white/'\\\">\\n          <img src=\\\"{{collapsedIconPath}}{{collapsedIconColor}}{{collapsedIcon}}\\\" height=\\\"16px\\\">\\n        </button>\\n      </div>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"card-body p-2\\\" *ngIf=\\\"!collapsed\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-card/ssn-card.component.html\n// module id = ./src/app/shared/components/ssn-card/ssn-card.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ssn-card',\n  templateUrl: './ssn-card.component.html',\n  styleUrls: ['./ssn-card.component.css']\n})\nexport class SsnCardComponent implements OnInit {\n  iconPath = 'assets/images/icons/128x128/white/';\n\n  @Input() icon: string;\n\n  @Input() header: string;\n\n  @Input() collapsible: boolean;\n\n  @Input() collapsed: boolean;\n\n  collapsedIconPath = 'assets/images/icons/128x128/';\n  collapsedIconColor = 'white/';\n  collapsedIcon: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (this.collapsed == null) {\n      this.collapsed = false;\n    }\n    this.collapsedIcon = this.collapsed\n      ? 'arrowhead-left.png'\n      : 'arrowhead-down.png';\n  }\n\n  changeState() {\n    this.collapsed = !this.collapsed;\n    this.collapsedIcon = this.collapsed\n      ? 'arrowhead-left.png'\n      : 'arrowhead-down.png';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ssn-card/ssn-card.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-table/ssn-table.component.css\n// module id = ./src/app/shared/components/ssn-table/ssn-table.component.css\n// module chunks = main","module.exports = \"<table class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr>\\n      <th *ngFor=\\\"let entry of entryData\\\" class=\\\"bg-ssn text-ssn no-wrap p-1\\\">\\n        <span>{{ entry.description }}</span>\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <td *ngFor=\\\"let entry of entryData\\\" class=\\\"p-1\\\">\\n        <img *ngIf=\\\"entry.imageUrl\\\" src=\\\"{{ entry.imageUrl }}\\\" height=\\\"24px\\\" />\\n        <span>{{ entry.data }}</span>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-table/ssn-table.component.html\n// module id = ./src/app/shared/components/ssn-table/ssn-table.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { DataProperty } from 'app/shared/interfaces/property.interface';\n\n@Component({\n  selector: 'app-ssn-table',\n  templateUrl: './ssn-table.component.html',\n  styleUrls: ['./ssn-table.component.css']\n})\nexport class SsnTableComponent implements OnInit {\n  @Input() entryData: DataProperty[];\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ssn-table/ssn-table.component.ts","module.exports = \".table-card-header-bg {\\n    background-color: #344d6e;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/table-card/table-card.component.css\n// module id = ./src/app/shared/components/table-card/table-card.component.css\n// module chunks = main","module.exports = \"<div class=\\\"border border-white table-card-header-bg p-1\\\">\\n  <div class=\\\"row text-center text-white px-4\\\" [ngClass]=\\\"{clickable: collapsible}\\\" (click)=\\\"collapsible ? changeState() : null\\\">\\n    <div class=\\\"d-table-cell mr-auto\\\">\\n      <img *ngIf=\\\"icon\\\" src=\\\"{{iconPath}}{{icon}}\\\" height=\\\"24px\\\" />\\n    </div>\\n    <div class=\\\"d-table-cell m-auto\\\">\\n      <span>{{ header }}</span>\\n    </div>\\n    <div class=\\\"d-table-cell ml-auto\\\">\\n      <button *ngIf=\\\"collapsible\\\" class=\\\"btn btn-sm btn-outline-light\\\" (mouseover)=\\\"collapsedIconColor=''\\\" (mouseout)=\\\"collapsedIconColor='white/'\\\">\\n        <img src=\\\"{{collapsedIconPath}}{{collapsedIconColor}}{{collapsedIcon}}\\\" height=\\\"16px\\\">\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n<div *ngIf=\\\"!collapsed\\\" class=\\\"table-responsive border-bottom border-left border-right border-white text-white\\\">\\n  <table class=\\\"table mb-0\\\">\\n    <ng-content></ng-content>\\n  </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/table-card/table-card.component.html\n// module id = ./src/app/shared/components/table-card/table-card.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table-card',\n  templateUrl: './table-card.component.html',\n  styleUrls: ['./table-card.component.css']\n})\nexport class TableCardComponent implements OnInit {\n  iconPath = 'assets/images/icons/128x128/white/';\n\n  @Input() icon: string;\n\n  @Input() header: string;\n\n  @Input() collapsible: boolean;\n\n  @Input() collapsed: boolean;\n\n  collapsedIconPath = 'assets/images/icons/128x128/';\n  collapsedIconColor = 'white/';\n  collapsedIcon: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (this.collapsed == null) {\n      this.collapsed = false;\n    }\n    this.collapsedIcon = this.collapsed\n      ? 'arrowhead-left.png'\n      : 'arrowhead-down.png';\n  }\n\n  changeState() {\n    this.collapsed = !this.collapsed;\n    this.collapsedIcon = this.collapsed\n      ? 'arrowhead-left.png'\n      : 'arrowhead-down.png';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/table-card/table-card.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/user-smart-table/user-button-row/user-button-row.component.css\n// module id = ./src/app/shared/components/user-smart-table/user-button-row/user-button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\n  <div class=\\\"d-table-row\\\">\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Edit user\\\">\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\">\\n        <div class=\\\"mx-auto\\\">\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\n        </div>\\n      </button>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/user-smart-table/user-button-row/user-button-row.component.html\n// module id = ./src/app/shared/components/user-smart-table/user-button-row/user-button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\nimport { AccountService, ContentService } from 'app/shared/services/';\nimport { ViewCell } from 'ng2-smart-table';\n\n@Component({\n  selector: 'app-user-button-row',\n  templateUrl: './user-button-row.component.html',\n  styleUrls: ['./user-button-row.component.css']\n})\nexport class UserButtonRowComponent implements ViewCell, OnInit {\n\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  @Output() edit: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private accountService: AccountService,\n    private contentService: ContentService\n  ) { }\n\n  ngOnInit() { }\n\n  onEditClick() {\n    this.setContent(CONTENT_NAMES.REGISTER_USER);\n  }\n\n  private setContent(content: string) {\n    this.setUser(content);\n  }\n\n  setUser(content) {\n    // this.contentService.setLoadingScreen(true, 'ship.gif', 'Loading');\n    this.accountService.setUserData(this.rowData.userModel);\n    this.contentService.setContent(content);\n    /*\n    this.accountService.getUserByEmail(this.rowData.userModel.email).subscribe(data => {\n      if (data) {\n        this.accountService.setUserData(this.rowData.userModel);\n        this.contentService.setContent(content);\n      }\n    });\n    */\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/user-smart-table/user-button-row/user-button-row.component.ts","module.exports = \"/* Smart table */\\n:root {\\n    --color-primary: #002d50;\\n    --color-primary-light: #37557c;\\n    --color-primary-dark: #000128;\\n    --color-primary-text: #ffffff;\\n}\\n:host /deep/ ng2-smart-table thead {\\n    background-color: var(--color-primary);\\n    color: white;\\n}\\n:host /deep/ .ng2-smart-filter input {\\n    color: black;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\n    content: '';\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-bottom: 4px solid white;\\n    border-top: 4px solid transparent;\\n    border-left: 4px solid transparent;\\n    border-right: 4px solid transparent;\\n    -webkit-transform: rotate(90deg);\\n            transform: rotate(90deg);\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n    margin-bottom: 2px;\\n}\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\n    border-bottom: 4px solid white;\\n    -webkit-transform: rotate(180deg);\\n            transform: rotate(180deg);\\n    margin-bottom: -2px;\\n}\\n:host /deep/ ng2-smart-table a { \\n    color:var(--color-primary-text); \\n}\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\n    color: var(--color-primary-dark);\\n    border-color: #dee2e6;\\n}\\n:host /deep/ span.ng2-smart-page-link.page-link { \\n    color: var(--color-primary-dark); \\n    background-color: #dee2e6;\\n    border-color: #dee2e6;        \\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/user-smart-table/user-smart-table.component.css\n// module id = ./src/app/shared/components/user-smart-table/user-smart-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\n  <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\n    <thead class=\\\"bg-ssn text-white\\\">\\n      <tr>\\n        <th class=\\\"py-1\\\">\\n          <h5 class=\\\"mb-0\\\">User search results</h5>\\n        </th>\\n      </tr>\\n    </thead>\\n  </table>\\n  <div class=\\\"table-responsive\\\">\\n    <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dataSource\\\"></ng2-smart-table>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/user-smart-table/user-smart-table.component.html\n// module id = ./src/app/shared/components/user-smart-table/user-smart-table.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { AccountService } from 'app/shared/services/account.service';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Subscription } from 'rxjs/Subscription';\nimport { UserButtonRowComponent } from './user-button-row/user-button-row.component';\n\n@Component({\n  selector: 'app-user-smart-table',\n  templateUrl: './user-smart-table.component.html',\n  styleUrls: ['./user-smart-table.component.css']\n})\nexport class UserSmartTableComponent implements OnInit, OnDestroy {\n\n  tableData = [];\n  dataSource: LocalDataSource = new LocalDataSource();\n  tableSettings = {\n    mode: 'external',\n    actions: false,\n    attr: {\n      class: 'table table-bordered'\n    },\n    noDataMessage: 'There are no users in this list.',\n\n    columns: {\n      fullname: {\n        title: 'Full Name',\n        type: 'html'\n      },\n      organization: {\n        title: 'Organization',\n        type: 'html'\n      },\n      role: {\n        title: 'Role',\n        type: 'html'\n      },\n      email: {\n        title: 'Email',\n        type: 'html'\n      },\n      actions: {\n        title: 'Actions',\n        type: 'custom',\n        filter: false,\n        sort: false,\n        renderComponent: UserButtonRowComponent\n      }\n    }\n  };\n\n  userSearchDataSubscription: Subscription;\n\n  constructor(\n    private accountService: AccountService\n  ) { }\n\n  ngOnInit() {\n    this.userSearchDataSubscription = this.accountService.userSearchData$.subscribe(data => {\n\n      if (data) {\n        if (data.length !== 0) {\n          const rowList = [];\n          data.forEach(user => {\n            const row = this.dataRow(user);\n            rowList.push(row);\n          });\n          this.tableData = rowList;\n        }\n      }\n      this.dataSource.load(this.tableData);\n    });\n  }\n\n  ngOnDestroy() {\n    this.userSearchDataSubscription.unsubscribe();\n  }\n\n  dataRow(user) {\n    const row = {\n      userModel: user,\n      fullname: ((user.givenName) ? user.givenName : '') + ' ' + ((user.surname) ? user.surname : ''),\n      organization: (user.organization) ? user.organization : 'N/A',\n      role: user.role,\n      email: user.email,\n      actions: 'btn'\n    };\n    return row;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/user-smart-table/user-smart-table.component.ts","const BLACKLISTED_ROUTES = [\n  // Page routes\n  'localhost:4200/auth',\n  'localhost:4200/auth/login',\n  // Api routes\n  'localhost:4200/api/account/user/password/forgotten',\n  'localhost:4200/api/account/user/password/reset'\n];\n\nexport { BLACKLISTED_ROUTES };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/blacklisted-routes.ts","// Users, ships, locations, organizations\nconst CONTENT_NAMES = {\n  // users\n  REGISTER_USER: 'Register User',\n  VIEW_USERS: 'USERS',\n  // ships\n  VIEW_SHIPS: 'SHIPS',\n  REGISTER_SHIP: 'Register Ship',\n  // locations\n  LOCATIONS: 'LOCATIONS',\n  REGISTER_LOCATION: 'Register Location',\n  // organizations\n  VIEW_ORGANIZATIONS: 'ORGANIZATIONS',\n  REGISTER_ORGANIZATION: 'Register Organization',\n  // Port calls\n  VIEW_PORT_CALLS: 'PORT CALL',\n  REGISTER_PORT_CALL: 'Register Port Call',\n  VIEW_PORT_CALL: 'View Port Call',\n  PORT_CALL_CLEARANCE: 'Port Call Clearance',\n  // Port call forms\n  VOYAGES: 'Voyages',\n  PORT_CALL_DETAILS: 'Port Call Details',\n  DPG: 'DPG',\n  CARGO: 'Cargo',\n  SHIP_STORES: 'Ship Stores',\n  CREW: 'Crew',\n  PASSENGER_LIST: 'Passenger List',\n  // Account\n  ACCOUNT_HOME: 'ACCOUNT_HOME',\n  WHATS_NEW: 'Whats new'\n};\n\nexport { CONTENT_NAMES };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/content-names.ts","\nenum PERSON_ON_BOARD_TYPES {\n    CREW,\n    PAX\n}\n\nenum ORGANIZATION_TYPES {\n    AUTHORITY,\n    RSO,\n    AGENT_COMPANY\n}\n\nenum LOCATION_SOURCES {\n    IMO_INTERNAL,\n    IMO_EXTERNAL\n}\n\nenum SHIP_STATUSES {\n    TO_BE_PROCESSED,\n    INACTIVE,\n    ACTIVE\n}\nexport { PERSON_ON_BOARD_TYPES, ORGANIZATION_TYPES, LOCATION_SOURCES, SHIP_STATUSES };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/enumValues.ts","const FORM_NAMES = {\n    VOYAGES: 'Voyages',\n    PORT_CALL_DETAILS: 'Port Call Details',\n    CONFIRM_PORT_CALL: 'Confirm and Activate',\n    DPG: 'DPG',\n    CARGO: 'Cargo',\n    SHIP_STORES: 'Ship Stores',\n    CREW: 'Crew',\n    PAX: 'Pax',\n    SECURITY: 'Security'\n};\n\nexport { FORM_NAMES };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/form-names.ts","import { DataProperty } from 'app/shared/interfaces/property.interface';\nimport { LocationModel } from '../models/location-model';\n\nexport class LocationProperties {\n  static PROPERTIES = {\n    COUNTRY: { description: 'Country', data: null },\n    LOCATION_NAME: { description: 'Name', data: null },\n    LOCATION_CODE: { description: 'Location Code', data: null },\n    LOCATION_TYPE: { description: 'Type', data: null }\n  };\n\n  static COUNTRY = 'Country';\n  static LOCATION_NAME = 'Location Name';\n  static LOCATION_CODE = 'Location Code';\n  static LOCATION_TYPE = 'Location Type';\n  static FLAGS_FOLDER = 'assets/images/flags/';\n\n  propertyList: DataProperty[] = [\n    { description: LocationProperties.COUNTRY, data: null, imageUrl: null },\n    { description: LocationProperties.LOCATION_NAME, data: null, imageUrl: null },\n    { description: LocationProperties.LOCATION_CODE, data: null, imageUrl: null },\n    { description: LocationProperties.LOCATION_TYPE, data: null, imageUrl: null },\n  ];\n\n  static setLocationData(propertyList, locationModel: LocationModel) {\n    if (locationModel.country) {\n      LocationProperties.setCountry(propertyList, locationModel.country.name);\n    }\n    LocationProperties.setLocationName(propertyList, locationModel.name);\n    LocationProperties.setLocationCode(propertyList, locationModel.locationCode);\n    if (locationModel.locationType) {\n      LocationProperties.setLocationType(propertyList, locationModel.locationType.name);\n    }\n  }\n\n  static setCountry(propertyList, data, image = null) {\n    propertyList.find(e => e.description === LocationProperties.COUNTRY).data = data;\n    if (image) {\n      propertyList.find(e => e.description === LocationProperties.COUNTRY).imageUrl = (LocationProperties.FLAGS_FOLDER + image);\n    }\n  }\n\n  static setLocationName(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === LocationProperties.LOCATION_NAME).data = data;\n  }\n\n  static setLocationCode(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === LocationProperties.LOCATION_CODE).data = data;\n  }\n\n  static setLocationType(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === LocationProperties.LOCATION_TYPE).data = data;\n  }\n\n  getPropertyList() {\n    return this.propertyList;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/location-properties.ts","import { DataProperty } from '../interfaces/property.interface';\nimport { LocationModel } from '../models/location-model';\n\nexport class LocationTimeProperties {\n  static LOCATION_NAME = 'Location Name';\n  static LOCATION_CODE = 'Location Code';\n  static LOCATION_TYPE = 'Location Type';\n  static ETA = 'ETA';\n  static ETD = 'ETD';\n\n  propertyList: DataProperty[] = [\n    { description: LocationTimeProperties.LOCATION_NAME, data: null, imageUrl: null },\n    { description: LocationTimeProperties.LOCATION_CODE, data: null, imageUrl: null },\n    { description: LocationTimeProperties.LOCATION_TYPE, data: null, imageUrl: null },\n    { description: LocationTimeProperties.ETA, data: null, imageUrl: null },\n    { description: LocationTimeProperties.ETD, data: null, imageUrl: null },\n  ];\n\n  static setLocationData(propertyList, locationModel: LocationModel) {\n    LocationTimeProperties.setLocationName(propertyList, locationModel.name);\n    LocationTimeProperties.setLocationCode(propertyList, locationModel.locationCode);\n    if (locationModel.locationType) {\n      LocationTimeProperties.setLocationType(propertyList, locationModel.locationType.name);\n    }\n  }\n\n  static setLocationName(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === LocationTimeProperties.LOCATION_NAME).data = data;\n  }\n\n  static setLocationCode(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === LocationTimeProperties.LOCATION_CODE).data = data;\n  }\n\n  static setLocationType(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === LocationTimeProperties.LOCATION_TYPE).data = data;\n  }\n\n  static setEta(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === LocationTimeProperties.ETA).data = data;\n  }\n\n  static setEtd(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === LocationTimeProperties.ETD).data = data;\n  }\n\n  getPropertyList() {\n    return this.propertyList;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/location-time-properties.ts","export class MenuClaims {\n  static TYPE = 'Menu';\n  static PERMISSIONS = {\n    'PORT CALL': false,\n    USERS: false,\n    SHIPS: false,\n    ORGANIZATIONS: false,\n    LOCATIONS: false\n  };\n  static PORT_CALL = 'PORT CALL';\n  static USERS = 'USERS';\n  static SHIPS = 'SHIPS';\n  static ORGANIZATIONS = 'ORGANIZATIONS';\n  static LOCATIONS = 'LOCATIONS';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/menu-claims.ts","export class NextLocationTimeProperties {\n    PROPERTIES = {\n        LOCATION_NAME: { description: 'Location Name', data: null },\n        LOCATION_CODE: { description: 'Location Code', data: null },\n        ETA: { description: 'ETA', data: null },\n    };\n\n    public getProperties() {\n        return this.PROPERTIES;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/next-location-time-properties.ts","import { DataProperty } from 'app/shared/interfaces/property.interface';\nimport { OrganizationModel } from '../models/organization-model';\n\nexport class OrganizationProperties {\n  static ORGANIZATION_NAME = 'Organization Name';\n  static ORGANIZATION_NO = 'Organization Number';\n  static ORGANIZATION_TYPE = 'Organization Type';\n  static ORGANIZATION_DESCRIPTION = 'Description';\n\n  propertyList: DataProperty[] = [\n    { description: OrganizationProperties.ORGANIZATION_NAME, data: null, imageUrl: null },\n    { description: OrganizationProperties.ORGANIZATION_NO, data: null, imageUrl: null },\n    { description: OrganizationProperties.ORGANIZATION_TYPE, data: null, imageUrl: null },\n    { description: OrganizationProperties.ORGANIZATION_DESCRIPTION, data: null, imageUrl: null }\n  ];\n\n  static setOrganizationData(propertyList, organizationModel: OrganizationModel) {\n    OrganizationProperties.setOrganizationName(propertyList, organizationModel.name);\n    OrganizationProperties.setOrganizationNo(propertyList, organizationModel.organizationNo);\n    if (organizationModel.organizationType) {\n      OrganizationProperties.setOrganizationType(propertyList, organizationModel.organizationType.name);\n    }\n    OrganizationProperties.setOrganizationDescription(propertyList, organizationModel.description);\n  }\n\n  static setOrganizationName(propertyList, data) {\n    propertyList.find(e => e.description === OrganizationProperties.ORGANIZATION_NAME).data = data;\n  }\n\n  static setOrganizationNo(propertyList, data) {\n    propertyList.find(e => e.description === OrganizationProperties.ORGANIZATION_NO).data = data;\n  }\n\n  static setOrganizationType(propertyList, data) {\n    propertyList.find(e => e.description === OrganizationProperties.ORGANIZATION_TYPE).data = data;\n  }\n\n  static setOrganizationDescription(propertyList, data) {\n    propertyList.find(e => e.description === OrganizationProperties.ORGANIZATION_DESCRIPTION).data = data;\n  }\n\n  getPropertyList() {\n    return this.propertyList;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/organization-properties.ts","export class OrganizationTypes {\n    static GOVERNMENT_AGENCY_STRING = 'Authority';\n    static COMPANY_STRING = 'Company';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/organization-types.ts","export class PortCallClaims {\n  static TYPE = 'Port Call';\n  static buttonRowPermissions = {\n    view: false,\n    edit: false,\n    clearance: false,\n    cancel: false,\n    delete: false\n  };\n  static portCallPermissions = {\n    register: false,\n    edit: false,\n    clearance: false\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/port-call-claims.ts","export class PortCallStatusTypes {\n  static AWAITING_CLEARANCE = 'Awaiting Clearance';\n  static DRAFT = 'Draft';\n  static CANCELLED = 'Cancelled';\n  static COMPLETED = 'Completed';\n  static CLEARED = 'Cleared';\n\n  static DRAFT_ID = 100235;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/port-call-status-types.ts","export class PrevLocationTimeProperties {\n    PROPERTIES = {\n        LOCATION_NAME: { description: 'Location Name', data: null },\n        LOCATION_CODE: { description: 'Location Code', data: null },\n        ETD: { description: 'ETD', data: null },\n    };\n\n    public getProperties() {\n        return this.PROPERTIES;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/prev-location-time-properties.ts","const SEARCH_AMOUNTS = {\n    DROPDOWN: 6,\n    WITHOUT_DROPDOWN: 100,\n    WITHOUT_DROPDOWN_2: 40\n};\n\nexport { SEARCH_AMOUNTS };\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/search-amounts.ts","import { DataProperty } from 'app/shared/interfaces/property.interface';\nimport { ShipFlagCodeModel } from '../models/ship-flag-code-model';\n\nexport class ShipFlagCodeProperties {\n  static SHIP_FLAG_CODE_NAME = 'Flag Code';\n  static SHIP_FLAG_CODE_DESCRIPTION = 'Desciption';\n  static COUNTRY = 'Country';\n  static FLAGS_FOLDER = 'assets/images/flags/';\n\n  propertyList: DataProperty[] = [\n    { description: ShipFlagCodeProperties.COUNTRY, data: null, imageUrl: null },\n    { description: ShipFlagCodeProperties.SHIP_FLAG_CODE_NAME, data: null, imageUrl: null }\n  ];\n\n  static setShipFlagCodeData(propertyList, shipFlagCodeModel: ShipFlagCodeModel) {\n    ShipFlagCodeProperties.setName(propertyList, shipFlagCodeModel.country.threeCharCode);\n    if (shipFlagCodeModel.country) {\n      ShipFlagCodeProperties.setCountry(propertyList, shipFlagCodeModel.country.name);\n    }\n  }\n\n  static setCountry(propertyList, data, image = null) {\n    propertyList.find(e => e.description === ShipFlagCodeProperties.COUNTRY).data = data;\n    if (image) {\n      propertyList.find(e => e.description === ShipFlagCodeProperties.COUNTRY).imageUrl = (ShipFlagCodeProperties.FLAGS_FOLDER + image);\n    }\n  }\n\n  static setName(propertyList, data) {\n    propertyList.find(e => e.description === ShipFlagCodeProperties.SHIP_FLAG_CODE_NAME).data = data;\n  }\n\n  getPropertyList() {\n    return this.propertyList;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/ship-flag-code-properties.ts","import { DataProperty } from 'app/shared/interfaces/property.interface';\nimport { ShipModel } from '../models/ship-model';\n\nexport class ShipProperties {\n  static PROPERTIES = {\n    SHIP_NAME: { description: 'Ship Name', data: null, imageUrl: null },\n    CALL_SIGN: { description: 'Call Sign', data: null },\n    IMO_NO: { description: 'IMO no.', data: null },\n    MMSI_NO: { description: 'MMSI no.', data: null },\n    GROSS_TONNAGE: { description: 'Gross Tonnage', data: null },\n    LENGTH: { description: 'Length', data: null },\n    SHIP_TYPE: { description: 'Ship Type', data: null },\n    SHIP_STATUS: { description: 'Ship Status', data: null }\n  };\n\n  static COUNTRY = 'Country';\n  static SHIP_NAME = 'Ship Name';\n  static CALL_SIGN = 'Call Sign';\n  static IMO_NO = 'IMO no.';\n  static MMSI_NO = 'MMSI no.';\n  static GROSS_TONNAGE = 'Gross Tonnage';\n  static NET_TONNAGE = 'Net Tonnage';\n  static LENGTH = 'Length';\n  static SHIP_TYPE = 'Ship Type';\n  static SHIP_STATUS = 'Ship Status';\n  static FLAGS_FOLDER = 'assets/images/flags/';\n\n  propertyList: DataProperty[] = [\n    { description: 'Country', data: null, imageUrl: null },\n    { description: 'Ship Name', data: null, imageUrl: null },\n    { description: 'Call Sign', data: null, imageUrl: null },\n    { description: 'IMO no.', data: null, imageUrl: null },\n    { description: 'MMSI no.', data: null, imageUrl: null },\n    { description: 'Gross Tonnage', data: null, imageUrl: null },\n    { description: 'Net Tonnage', data: null, imageUrl: null },\n    { description: 'Length', data: null, imageUrl: null },\n    { description: 'Ship Type', data: null, imageUrl: null },\n    { description: 'Ship Status', data: null, imageUrl: null }\n  ];\n\n  static setShipData(propertyList, shipModel: ShipModel) {\n    if (shipModel.shipFlagCode && shipModel.shipFlagCode.country) {\n      ShipProperties.setCountry(propertyList, shipModel.shipFlagCode.country.name);\n    }\n    ShipProperties.setShipName(propertyList, shipModel.name);\n    ShipProperties.setCallSign(propertyList, shipModel.callSign);\n    ShipProperties.setImoNo(propertyList, shipModel.imoNo);\n    ShipProperties.setMmsiNo(propertyList, shipModel.mmsiNo);\n    ShipProperties.setGrossTonnage(propertyList, shipModel.grossTonnage);\n    ShipProperties.setNetTonnage(propertyList, shipModel.netTonnage);\n    ShipProperties.setLength(propertyList, shipModel.length);\n    if (shipModel.shipType) {\n      ShipProperties.setShipType(propertyList, shipModel.shipType.name);\n    }\n    if (shipModel.shipStatus) {\n      ShipProperties.setShipStatus(propertyList, shipModel.shipStatus.name);\n    }\n  }\n\n  static setCountry(propertyList, data, image = null) {\n    propertyList.find(e => e.description === ShipProperties.COUNTRY).data = data;\n    if (image) {\n      propertyList.find(e => e.description === ShipProperties.COUNTRY).imageUrl = (ShipProperties.FLAGS_FOLDER + image);\n    }\n  }\n\n  static setShipName(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === ShipProperties.SHIP_NAME).data = data;\n  }\n\n  static setCallSign(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === ShipProperties.CALL_SIGN).data = data;\n  }\n\n  static setImoNo(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === ShipProperties.IMO_NO).data = data;\n  }\n\n  static setMmsiNo(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === ShipProperties.MMSI_NO).data = data;\n  }\n\n  static setGrossTonnage(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === ShipProperties.GROSS_TONNAGE).data = data;\n  }\n\n  static setNetTonnage(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === ShipProperties.NET_TONNAGE).data = data;\n  }\n\n  static setLength(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === ShipProperties.LENGTH).data = data;\n  }\n\n  static setShipType(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === ShipProperties.SHIP_TYPE).data = data;\n  }\n\n  static setShipStatus(propertyList, data, imageUrl = null) {\n    propertyList.find(e => e.description === ShipProperties.SHIP_STATUS).data = data;\n  }\n\n  getPropertyList() {\n    return this.propertyList;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/ship-properties.ts","import { DataProperty } from 'app/shared/interfaces/property.interface';\n\nexport class UserProperties {\n  static GIVEN_NAME = 'Given Name';\n  static SURNAME = 'Surname';\n  static EMAIL = 'Email';\n  static PHONE_NUMBER = 'Phone Number';\n  static ORGANIZATION = 'Organization';\n\n  propertyList: DataProperty[] = [\n    { description: UserProperties.GIVEN_NAME, data: null, imageUrl: null },\n    { description: UserProperties.SURNAME, data: null, imageUrl: null },\n    { description: UserProperties.EMAIL, data: null, imageUrl: null },\n    { description: UserProperties.PHONE_NUMBER, data: null, imageUrl: null },\n    { description: UserProperties.ORGANIZATION, data: null, imageUrl: null }\n  ];\n\n  static setUserData(propertyList, user) {\n    UserProperties.setEmail(propertyList, user.email);\n    UserProperties.setPhoneNumber(propertyList, user.phoneNumber);\n    if (user.person) {\n      UserProperties.setGivenName(propertyList, user.person.givenName);\n      UserProperties.setSurname(propertyList, user.person.surname);\n    }\n    if (user.organization) {\n      UserProperties.setOrganization(propertyList, user.organization.name);\n    }\n  }\n\n  static setGivenName(propertyList, data) {\n    propertyList.find(e => e.description === UserProperties.GIVEN_NAME).data = data;\n  }\n\n  static setSurname(propertyList, data) {\n    propertyList.find(e => e.description === UserProperties.SURNAME).data = data;\n  }\n\n  static setEmail(propertyList, data) {\n    propertyList.find(e => e.description === UserProperties.EMAIL).data = data;\n  }\n\n  static setPhoneNumber(propertyList, data) {\n    propertyList.find(e => e.description === UserProperties.PHONE_NUMBER).data = data;\n  }\n\n  static setOrganization(propertyList, data) {\n    propertyList.find(e => e.description === UserProperties.ORGANIZATION).data = data;\n  }\n\n  getPropertyList() {\n    return this.propertyList;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/user-properties.ts","export class FeedbackProps {\n    started: boolean;\n    actionSucceeded: boolean;\n    errors: any;\n    errorDescription: string;\n    successMessage: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/interfaces/feedback-props.interface.ts","import {ConsignmentModel, PackageTypeModel } from './';\n\nexport class CargoItemModel {\n    cargoItemId: number;\n    consignmentId: number;\n    shippingMarks: string;\n    containerIdentification: string;\n    numberOfPackages: number;\n    packageTypeId: number;\n    hsCode: string;\n    grossVolume: number;\n    grossWeight: number;\n    description: string;\n    // models\n    consignment: ConsignmentModel;\n    packageType: PackageTypeModel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/cargo-item-model.ts","import { LocationModel } from 'app/shared/models/location-model';\n\nexport class CertificateOfRegistryModel {\n    certificateOfRegistryId: number;\n    dateOfIssue: Date;\n    certificateNumber: string;\n    portLocationId: number;\n    ownerName: string;\n    // models\n    portLocation: LocationModel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/certificate-of-registry-model.ts","import { UserModel } from './user-model';\n\nexport class ClearanceModel {\n  organizationPortCallId: number;\n  organizationId: number;\n  portCallId: number;\n  remark: string;\n  cleared: boolean;\n  clearedByUserId: string;\n  // models\n  clearedByUser: any;\n  portCall: any;\n  organization: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/clearance-model.ts","import {FalSecurityModel, OrganizationModel  } from './';\n\n\nexport class CompanySecurityOfficerModel {\n  companySecurityOfficerId: number;\n  organizationId: number;\n  givenName: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  // Models\n  organization: OrganizationModel;\n  falSecurity: FalSecurityModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/company-security-officer-model.ts","import {CargoItemModel, LocationModel, PortCallModel } from './';\n\n\nexport class ConsignmentModel {\n    consignmentId: number;\n    portCallId: number;\n    portOfLoadingId: number;\n    portOfDischargeId: number;\n    name: string;\n    remark: string;\n    // models\n    portCall: PortCallModel;\n    portOfLoading: LocationModel;\n    portOfDischarge: LocationModel;\n    cargoItem: CargoItemModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/consignment-model.ts","export class ContactMediumModel {\n  contactMediumId: number;\n  contactMediumType: string;\n  description: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/contact-medium-model.ts","import { ContactMediumModel } from './contact-medium-model';\n\nexport class ContactModel {\n  // class properties\n  contactMediumId: number;\n  contactValue: string;\n  isPreferred: boolean;\n  comments: string;\n  // internal models\n  contactMedium: ContactMediumModel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/contact-model.ts","import {InternationalShipSecurityCertificateModel, LocationModel, ShipFlagCodeModel } from './';\n\n\nexport class CountryModel {\n  countryId: number;\n  name: string;\n  twoCharCode: string;\n  threeCharCode: string;\n  callCode: string;\n  isActive: boolean;\n  // List models\n  internationalShipSecurityCertificate: InternationalShipSecurityCertificateModel[];\n  location: LocationModel[];\n  shipFlagCode: ShipFlagCodeModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/country-model.ts","export class DpgModel {\n    dpgId: number;\n    dpgTypeId: number;\n    textualReference: string;\n    imoHazardClassId: number;\n    unNumber: string;\n    packingGroup: string;\n    flashPoint: number;\n    marpolCategoryId: number;\n    marpolOilType: string;\n    dpgType: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/dpg-model.ts","import { DpgModel } from './dpg-model';\n\nexport class DpgOnBoardModel {\n    sequenceNo: number;\n    dpgOnBoardId: number;\n    dpgId: number;\n    portCallId: number;\n    placedInContainer: boolean;\n    transportUnitIdentification: string;\n    locationOnBoard: string;\n    grossWeight: number;\n    netWeight: number;\n    dpg: DpgModel;\n    placedInContainerStr: string;\n    measurementTypeId: number;\n    measurementType: any;\n    measurementStr: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/dpg-on-board-model.ts","export class DpgTypeModel {\n    dpgTypeId: number;\n    name: string;\n    description: string;\n    shortName: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/dpg-type-model.ts","import {CompanySecurityOfficerModel, PortCallModel, SecurityLevelModel, SecurityPreviousPortOfCallModel, ShipToShipActivityModel } from './';\n\nexport class FalSecurityModel {\n  falSecurityId: number;\n  shipHasValidSspOnBoard: boolean;\n  otherRelatedInfo: string;\n  companySecurityOfficerId: number;\n  securityLevelId: number;\n  portCallId: number;\n  // models\n  companySecurityOfficer: CompanySecurityOfficerModel;\n  portCall: PortCallModel;\n  securityLevel: SecurityLevelModel;\n  // list models\n  shipToShipActivity: ShipToShipActivityModel[];\n  securityPreviousPortOfCall: SecurityPreviousPortOfCallModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/fal-security-model.ts","import { FeedbackProps } from '../interfaces/feedback-props.interface';\n\nexport class FeedBack {\n\n  // properties: FeedbackProps = new FeedbackProps();\n\n  actionSucceeded: boolean;\n  successMessage = '';\n  errorDescription: string;\n  errors: string;\n\n  started = false;\n\n  constructor() { }\n\n  reportSuccess(message: string) {\n    // this.properties.started = true;\n    // this.properties.actionSucceeded = true;\n    // this.properties.successMessage = message;\n\n    this.started = true;\n    this.actionSucceeded = true;\n    this.successMessage = message;\n  }\n\n  reportError(error: any, message: string) {\n    // this.properties.started = true;\n    // this.properties.actionSucceeded = false;\n    // this.properties.errors = error;\n    // this.properties.errorDescription = message;\n\n\n    this.started = true;\n    this.actionSucceeded = false;\n    this.errors = error;\n    this.errorDescription = message;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/feedback.ts","export class GenderModel {\n    genderId: number;\n    description: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/gender-model.ts","import {CountryModel, IdentityDocumentTypeModel } from './';\n\nexport class IdentityDocumentModel {\n    identityDocumentId: number;\n    identityDocumentTypeId: number;\n    issuingNationId: number;\n    visaOrResidencePermitNumber: string;\n    identityDocumentIssueDate: any;\n    identityDocumentExpiryDate: any;\n    identityDocumentNumber: string;\n    personOnBoardId: number;\n\n    identityDocumentType: IdentityDocumentTypeModel;\n    issuingNation: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/identity-document-model.ts","export class IdentityDocumentTypeModel {\n    id: number;\n    type: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/identity-document-type-model.ts","export * from './cargo-item-model';\nexport * from './certificate-of-registry-model';\nexport * from './clearance-model';\nexport * from './company-security-officer-model';\nexport * from './consignment-model';\nexport * from './contact-medium-model';\nexport * from './contact-model';\nexport * from './country-model';\nexport * from './fal-security-model';\nexport * from './feedback';\nexport * from './gender-model';\nexport * from './identity-document-model';\nexport * from './identity-document-type-model';\nexport * from './international-ship-security-certificate-model';\nexport * from './location-model';\nexport * from './measurement-type-model';\nexport * from './organization-model';\nexport * from './package-type-model';\nexport * from './password-change-model';\nexport * from './password-reset-model';\nexport * from './person-on-board-model';\nexport * from './person-on-board-type-model';\nexport * from './port-call-details-model';\nexport * from './port-call-has-port-call-purpose-model';\nexport * from './port-call-model';\nexport * from './port-call-purpose-model';\nexport * from './security-level-model';\nexport * from './security-previous-port-of-call-model';\nexport * from './ship-contact-model';\nexport * from './ship-flag-code-model';\nexport * from './ship-model';\nexport * from './ship-overview-model';\nexport * from './ship-stores-model';\nexport * from './ship-to-ship-activity-model';\nexport * from './token-query-model';\nexport * from './user-model';\nexport * from './dpg-model';\nexport * from './dpg-type-model';\nexport * from './dpg-on-board-model';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/index.ts","import {CountryModel, OrganizationModel, ShipModel } from './';\n\nexport class InternationalShipSecurityCertificateModel {\n  isscId: number;\n  expiryDate: Date;\n  rsoIssuerId: number;\n  governmentIssuerId: number;\n  certificateNumber: string;\n  issuedByGovernment: boolean;\n  // models\n  rsoIssuer: OrganizationModel;\n  governmentIssuer: CountryModel;\n  // list models\n  ship: ShipModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/international-ship-security-certificate-model.ts","export class LocationModel {\n  locationType: any;\n  locationId: number;\n  countryId: number;\n  locationTypeId: number;\n  locationSourceId: number;\n  municipalityId: number;\n  locationCode: string;\n  locationNo: number;\n  postCode: string;\n  name: string;\n  country: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/location-model.ts","export class MeasurementTypeModel {\n    measurementTypeId: number;\n    name: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/measurement-type-model.ts","export class OrganizationModel {\n  organizationType: any;\n  organizationId: number;\n  name: string;\n  invoiceReceiverNo: number;\n  organizationNo: string;\n  description: string;\n  isActive: boolean;\n  organizationTypeId: number;\n  imoCompanyNumber: string;\n  clearanceIsNullString: string;\n  clearanceIsTrueString: string;\n  clearanceIsFalseString: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/organization-model.ts","import { CargoItemModel } from './cargo-item-model';\n\nexport class PackageTypeModel {\n    packageTypeId: number;\n    name: string;\n    description: string;\n    // models\n    cargoItem: CargoItemModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/package-type-model.ts","export class PasswordChangeModel {\n  currentPassword: string;\n  newPassword: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/password-change-model.ts","export class PasswordResetModel {\n  userId: string;\n  newPassword: string;\n  passwordResetToken: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/password-reset-model.ts","import { GenderModel, IdentityDocumentModel, PersonOnBoardTypeModel, PortCallModel } from 'app/shared/models/';\n\nexport class PersonOnBoardModel {\n    personOnBoardId: number;\n    givenName: string;\n    familyName: string;\n    dateOfBirth: any;\n    placeOfBirth: string;\n    occupationName: string;\n    occupationCode: string;\n    roleCode: string;\n    inTransit: boolean; // true/false indicator of whether the referenced person is in transit to a foreign country\n    rankName: string;\n    rankCode: string;\n    sequenceNumber: number;\n\n    // ids\n    countryOfBirthId: number; // country id\n    nationalityId: number;  // country id\n    personOnBoardTypeId: number; // person on board type id\n    genderId: number; // gender id\n    portCallId: number; // port call id\n    portOfEmbarkationId: number;\n    portOfDisembarkationId: number;\n    // models\n    countryOfBirth: any;\n    nationality: any;\n    personOnBoardType: PersonOnBoardTypeModel;\n    gender: GenderModel;\n    portCall: PortCallModel;\n    portOfEmbarkation: any;\n    portOfDisembarkation: any;\n    identityDocument: IdentityDocumentModel[] = [];\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/person-on-board-model.ts","export class PersonOnBoardTypeModel {\n    personOnBoardTypeId: number;\n    name: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/person-on-board-type-model.ts","export class PortCallDetailsModel {\n  portCallDetailsId: number;\n  portCallId: number;\n  numberOfCrew: number;\n  numberOfPassengers: number;\n  actualDraught: number;\n  airDraught: number;\n  reportingDpg: boolean;\n  reportingCargo: boolean;\n  reportingShipStores: boolean;\n  reportingCrew: boolean;\n  reportingPax: boolean;\n  reportingSecurity: boolean;\n  cargoBriefDescription: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-details-model.ts","import {PortCallModel, PortCallPurposeModel} from './';\n\nexport class PortCallHasPortCallPurposeModel {\n  portCallHasPortCallPurposeId: number;\n  portCallId: number;\n  portCallPurposeId: number;\n  purposeIfUnknown: string;\n  // models\n  portCall: PortCallModel;\n  portCallPurpose: PortCallPurposeModel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-has-port-call-purpose-model.ts","import {ConsignmentModel, LocationModel} from './';\n\nexport class PortCallModel {\n  portCallId: number;\n  nextLocationId: number;\n  previousLocationId: number;\n  locationId: number;\n  shipId: number;\n  portCallStatusId: number;\n  remark: string;\n  previousLocation: LocationModel;\n  previousLocationEtd: Date;\n  previousLocationAtd: Date;\n  locationEtd: Date;\n  locationAtd: Date;\n  locationEta: Date;\n  locationAta: Date;\n  nextLocation: LocationModel;\n  nextLocationEta: Date;\n  nextLocationAta: Date;\n  userId: number;\n  portCallStatus: any;\n  consignment: ConsignmentModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-model.ts","import {PortCallHasPortCallPurposeModel, ShipToShipActivityModel} from './';\n\nexport class PortCallPurposeModel {\n  portCallPurposeId: number;\n  name: string;\n  // list models\n  portCallHasPortCallPurpose: PortCallHasPortCallPurposeModel[];\n  shipToShipActivity: ShipToShipActivityModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-purpose-model.ts","import {FalSecurityModel, SecurityPreviousPortOfCallModel} from './';\n\nexport class SecurityLevelModel {\n  securityLevelId: number;\n  name: string;\n  description: string;\n  // list models\n  falSecurity: FalSecurityModel[];\n  securityPreviousPortOfCall: SecurityPreviousPortOfCallModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/security-level-model.ts","import { FalSecurityModel, LocationModel, SecurityLevelModel } from './';\n\nexport class SecurityPreviousPortOfCallModel {\n  securityPreviousPortOfCallId: number;\n  locationId: number;\n  arrivalDateTime: Date;\n  departureDateTime: Date;\n  securityLevelId; number;\n  additionalSecurityMeasures: string;\n  sequenceNumber: number;\n  falSecurityId: number;\n  // models\n  location: LocationModel;\n  securityLevel: SecurityLevelModel;\n  falSecurity: FalSecurityModel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/security-previous-port-of-call-model.ts","import { ContactMediumModel } from './contact-medium-model';\n\nexport class ShipContactModel {\n    shipContactId: number;\n    contactMediumId: number;\n    shipId: number;\n    contactValue: string;\n    isPreferred: boolean;\n    comments: string;\n    // internal models:\n    contactMedium: ContactMediumModel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-contact-model.ts","export class ShipFlagCodeModel {\n    shipFlagCodeId: number;\n    name: string;\n    description: string;\n    country: any;\n    countryId: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-flag-code-model.ts","import {CertificateOfRegistryModel, InternationalShipSecurityCertificateModel, OrganizationModel, ShipFlagCodeModel } from './';\n\nexport class ShipModel {\n    shipId: number;\n    shipHullTypeId: number;\n    shipStatusId: number;\n    shipPowerTypeId: number;\n    shipBreadthTypeId: number;\n    shipLengthTypeId: number;\n    shipSourceId: number;\n    shipFlagCodeId: number;\n    organizationId: number;\n    shipTypeId: number;\n    imoNo: number;\n    yearOfBuild: number;\n    mmsiNo: number;\n    name: string;\n    callSign: string;\n    deadweightTonnage: number;\n    grossTonnage: number;\n    netTonnage: number;\n    length: number;\n    breadth: number;\n    power: number;\n    height: number;\n    draught: number;\n    hasSideThrusters: boolean;\n    hasSideThrustersFront: boolean;\n    hasSideThrustersBack: boolean;\n    remark: string;\n    certificateOfRegistryId: number;\n    dateOfKeelLaying: Date;\n    // connected models:\n    organization: OrganizationModel;\n    certificateOfRegistry: CertificateOfRegistryModel;\n    shipHullType: any;\n    shipStatus: any;\n    shipPowerType: any;\n    shipBreadthType: any;\n    shipLengthType: any;\n    shipSource: any;\n    shipFlagCode: ShipFlagCodeModel;\n    shipType: any;\n    shipContact: any[];\n    issc: InternationalShipSecurityCertificateModel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-model.ts","import { ShipModel } from './ship-model';\n\nexport class ShipOverviewModel {\n  ship: ShipModel;\n  country: any;\n  shipType: any;\n  shipStatus: any;\n  contactList: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-overview-model.ts","import {MeasurementTypeModel, PortCallModel } from './';\n\nexport class ShipStoresModel {\n    falShipStoresId: number;\n    sequenceNumber: number;\n    articleName: string;\n    quantity: number;\n    locationOnBoardCode: string;\n    locationOnBoard: string;\n    measurementTypeId: number;\n    portCallId: number;\n    // Connected tables\n    measurementType: MeasurementTypeModel;\n    portCall: PortCallModel; // Probably won't be necessary to use this one\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-stores-model.ts","import {FalSecurityModel, LocationModel, PortCallPurposeModel } from './';\n\nexport class ShipToShipActivityModel {\n  shipToShipActivityId: number;\n  fromDate: Date;\n  toDate: Date;\n  activityTypeId: number;\n  locationId: number;\n  latitude: number;\n  longitude: number;\n  falSecurityId: number;\n  securityMeasuresAppliedInLieu: number;\n  // models\n  activityType: PortCallPurposeModel;\n  falSecurity: FalSecurityModel;\n  location: LocationModel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-to-ship-activity-model.ts","\nexport class TokenQueryModel {\n  userId: string;\n  token: string;\n  constructor(userId: string, token: string, uriEncode = true) {\n    if (uriEncode) {\n      this.setUserId(userId);\n      this.setToken(token);\n    } else {\n      this.userId = userId;\n      this.token = token;\n    }\n  }\n  setUserId(userId: string): void {\n    this.userId = encodeURIComponent(userId);\n  }\n  setToken(token: string): void {\n    this.token = encodeURIComponent(token);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/token-query-model.ts","export class UserModel {\n  email: string;\n  phoneNumber: string;\n  givenName: string;\n  surname: string;\n  roleName: string;\n  organizationId: string;\n  companyPhoneNumber: string;\n  companyEmail: string;\n  id: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/user-model.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from 'app/shared/utils/config.service';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { PasswordChangeModel } from '../models/password-change-model';\nimport { PasswordResetModel } from '../models/password-reset-model';\nimport { TokenQueryModel } from '../models/token-query-model';\nimport { UserModel } from '../models/user-model';\nimport { BaseRequest } from '../utils/base.request';\n\n@Injectable()\nexport class AccountService extends BaseRequest {\n  // URLs\n  private accountBaseUrl = '/account';\n  private actionUrl: string;\n  private registerUserUrl: string;\n  private userUrl: string;\n  private rolesUrl: string;\n  private userClaimsUrl: string;\n  private userNameUrl: string;\n  private emailUrl: string;\n  private passwordUrl: string;\n  private emailTakenUrl: string;\n  private organizationForUserUrl: string;\n  private accountOverviewUrl: string;\n\n  // Subjects & observables\n  private userClaimsDataSource = new BehaviorSubject<any[]>(null);\n  userClaimsData$ = this.userClaimsDataSource.asObservable();\n\n  private userOrganizationDataSource = new BehaviorSubject<any>(null);\n  userOrganizationData$ = this.userOrganizationDataSource.asObservable();\n\n  private userSearchDataSource = new BehaviorSubject<any>(null);\n  userSearchData$ = this.userSearchDataSource.asObservable();\n\n  private userDataSource = new BehaviorSubject<any>(null);\n  userData$ = this.userDataSource.asObservable();\n\n  constructor(private http: HttpClient, configService: ConfigService) {\n    super(configService);\n    this.actionUrl = this.baseUrl + this.accountBaseUrl;  /* /api/account/account             */\n    this.userUrl = this.actionUrl + '/user';               /* /api/account/user                */\n    this.rolesUrl = this.actionUrl + '/roles';            /* /api/account/roles               */\n    this.userClaimsUrl = this.userUrl + '/claims';        /* /api/account/claims              */\n    this.userNameUrl = this.userUrl + '/displayName';     /* /api/account/user/displayName    */\n    this.emailUrl = this.userUrl + '/email';              /* /api/account/user/email          */\n    this.passwordUrl = this.userUrl + '/password';        /* /api/account/user/password       */\n    this.emailTakenUrl = this.actionUrl + '/emailTaken';  /* /api/account/emailTaken          */\n    this.accountOverviewUrl = [this.actionUrl, 'details', 'overview'].join('/');  // /api/account/details/overview\n  }\n\n  getAllRoles(): Observable<any> {\n    return this.http.get(this.rolesUrl);\n  }\n\n  setUserOrganization(data) {\n    this.userOrganizationDataSource.next(data);\n  }\n\n  getUserClaims(): Observable<any[]> {\n    return this.http.get<any[]>(this.userClaimsUrl);\n  }\n\n  setUserClaims(data: any[]) {\n    this.userClaimsDataSource.next(data);\n    localStorage.setItem('user_claims', JSON.stringify(data));\n  }\n\n  setUserSearchData(data) {\n    this.userSearchDataSource.next(data);\n  }\n\n  setUserData(data) {\n    this.userDataSource.next(data);\n  }\n\n  registerUser(newUser: UserModel): Observable<any> {\n    return this.http.post(this.userUrl, newUser);\n  }\n\n  updateUser(existingUser: UserModel): Observable<any> {\n    return this.http.put(this.userUrl + '/update', existingUser);\n  }\n\n  getDisplayName(): Observable<string> {\n    return this.http.get(this.userNameUrl,\n      { responseType: 'text' });\n  }\n\n  getUserByEmail(email: string): Observable<any> {\n    const uri = [this.userUrl, email].join('/');\n    return this.http.get(uri);\n  }\n\n  emailTaken(email: string): Observable<boolean> {\n    const uri = [this.emailTakenUrl, email].join('/');\n    return this.http.get<boolean>(uri);\n  }\n\n  changeRole(userName: string, roleName: string) {\n    /* Not yet implemented */\n  }\n\n  confirmEmail(queryModel: TokenQueryModel): Observable<TokenQueryModel> {\n    const uri = [this.emailUrl, 'confirm'].join('/');\n    return this.http\n      .post(uri, null, {\n        params: {\n          userId: queryModel.userId,\n          token: queryModel.token\n        },\n        responseType: 'text'\n      })\n      .map(token => {\n        return new TokenQueryModel(queryModel.userId, token);\n      })\n      .catch(this.handleError);\n  }\n\n  // Allow anonymous\n  requestPasswordReset(userName: string): Observable<any> {\n    const uri = [this.passwordUrl, 'forgotten'].join('/');\n    return this.http\n      .get(uri, {\n        params: {\n          userName: userName\n        }\n      })\n      .catch(this.handleError);\n  }\n\n  changePassword(model: PasswordChangeModel): Observable<any> {\n    const uri = [this.passwordUrl, 'change'].join('/');\n    return this.http\n      .put(uri, model)\n      .catch(this.handleError);\n  }\n\n  // Allow anonymous\n  resetPassword(model: PasswordResetModel): Observable<any> {\n    const uri = [this.passwordUrl, 'reset'].join('/');\n    return this.http\n      .put(uri, model)\n      .catch(this.handleError);\n  }\n\n  getAccountOverview(): Observable<any> {\n    return this.http\n      .get(this.accountOverviewUrl)\n      .catch(this.handleError);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/account.service.ts","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseRequest } from 'app/shared/utils/base.request';\nimport { ConfigService } from 'app/shared/utils/config.service';\nimport { Observable } from 'rxjs/Observable';\nimport { MenuClaims } from '../constants/menu-claims';\n\n@Injectable()\nexport class AuthService extends BaseRequest {\n  private authBaseUrl = '/auth';\n  private actionUrl;\n\n  constructor(\n    private http: HttpClient,\n    configService: ConfigService\n  ) {\n    super(configService);\n    this.actionUrl = this.baseUrl + this.authBaseUrl;\n  }\n\n  isAdmin(): Observable<boolean> {\n    return this.http\n      .get<boolean>(this.actionUrl + '/isAdmin');\n  }\n\n  hasToken(): boolean {\n    return localStorage.getItem('auth_token') != null;\n  }\n\n  // hasValidToken(): Observable<any> {\n  //   return this.http\n  //     .get(this.actionUrl + '/hasValidToken')\n  //     .catch(this.handleError);\n  // }\n\n  hasValidToken(relayError = true): Observable<any> {\n    if (relayError) {\n      return this.http\n      .get(this.actionUrl + '/hasValidToken');\n    }\n    return this.http\n      .get(this.actionUrl + '/hasValidToken')\n      .catch(this.handleError);\n  }\n\n  // hasValidTokenWithErrorResponse() {\n  //   return this.http\n  //     .get(this.actionUrl + '/hasValidToken',\n  //   { observe: 'response'});\n  // }\n\n  hasPortCallMenuClaim(claims: any[]): boolean {\n    return claims.filter(claim => claim.type === MenuClaims.TYPE)\n    .some(claim => claim.value === MenuClaims.PORT_CALL);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/auth-service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\n@Injectable()\nexport class AuthRequest {\n  constructor(private http: Http) { }\n\n  GetHeaders() {\n    const headers = new Headers();\n    headers.append(\n      'Authorization',\n      'Bearer ' + localStorage.getItem('auth_token')\n    );\n    return headers;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/auth.request.service.ts","// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/shared/services/base.service.ts\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nexport abstract class BaseService {\n  constructor() {}\n  protected handleModelOrAppError(error: any) {\n    const applicationError = error.headers.get('Application-Error');\n\n    // either applicationError in header or model error in body\n    if (applicationError) {\n      return Observable.throw(applicationError);\n    }\n\n    let modelStateErrors = '';\n    const serverError = error.json();\n\n    if (!serverError.type) {\n      for (const key in serverError) {\n        if (serverError[key]) { modelStateErrors += serverError[key] + '\\n'; }\n      }\n    }\n\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\n    return Observable.throw(modelStateErrors || 'Server error');\n  }\n\n  protected handleError(error: HttpErrorResponse | any) {\n    let errMsg: any;\n    console.log('an error occurred!');\n\n    if (error instanceof HttpErrorResponse) {\n      const ERROR = error as HttpErrorResponse;\n      if (ERROR.status >= 500) {\n        errMsg = `${ERROR.status} ${ERROR.statusText}`;\n      } else if (ERROR.status >= 400) {\n        errMsg = 'Action failed';\n      } else if (ERROR.error.error instanceof SyntaxError) {\n        errMsg = 'Application error';\n      } else {\n        errMsg = error.message ? error.message : error.toString();\n      }\n      return Observable.throw(errMsg);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/base.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class ConstantsService {\n  private contactMediumUrl: string;\n  private claimUrl: string;\n  private portCallClaimsUrl: string;\n  private getMenuClaimListUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.contactMediumUrl = 'api/contactmedium';\n    this.claimUrl = 'api/claim';\n    this.portCallClaimsUrl = 'api/claim/type/portcall';\n    this.getMenuClaimListUrl = 'api/claim/type/menu';\n  }\n\n  getContactMediumList(): Observable<any> {\n    return this.http.get(this.contactMediumUrl);\n  }\n\n  getClaimList(): Observable<any> {\n    return this.http.get(this.claimUrl);\n  }\n\n  GetPortCallClaimList(): Observable<any> {\n    return this.http.get(this.portCallClaimsUrl);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/constants.service.ts","import { Injectable } from '@angular/core';\nimport { FORM_NAMES } from 'app/shared/constants/form-names';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { CONTENT_NAMES } from '../constants/content-names';\nimport { LoadingScreen } from '../interfaces/loading-screen.interface';\nimport { BaseService } from './base.service';\n\n@Injectable()\nexport class ContentService extends BaseService {\n  private contentSource = new BehaviorSubject<string>(CONTENT_NAMES.VIEW_PORT_CALLS);\n  contentName$ = this.contentSource.asObservable();\n\n  private portCallFormSource = new BehaviorSubject<string>(FORM_NAMES.VOYAGES);\n  portCallFormName$ = this.portCallFormSource.asObservable();\n\n  private loadingScreenSource = new BehaviorSubject<LoadingScreen>(null);\n  loadingScreen$ = this.loadingScreenSource.asObservable();\n\n  constructor() {\n    super();\n  }\n\n  setContent(contentName: string) {\n    this.setLoadingScreen(false, null, null);\n    this.contentSource.next(contentName);\n  }\n\n  setPortCallForm(contentName: string) {\n    this.portCallFormSource.next(contentName);\n  }\n\n  setLoadingScreen(isLoading: boolean, loadingIcon: string, loadingText: string) {\n    this.loadingScreenSource.next({ isLoading, loadingIcon, loadingText });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/content.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CountryModel } from 'app/shared/models/country-model';\nimport 'rxjs/add/observable/of';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { SearchService } from './search.service';\n\n@Injectable()\nexport class CountryService {\n  private countryUrl: string;\n  private searchUrl: string;\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.searchUrl = 'api/country/search';\n    this.countryUrl = 'api/country';\n  }\n\n  private countryDataSource = new BehaviorSubject<any>(null);\n  countryData$ = this.countryDataSource.asObservable();\n\n  private countrySearchDataSource = new BehaviorSubject<any>(null);\n  countrySearchData$ = this.countrySearchDataSource.asObservable();\n\n  setCountryData(data) {\n    this.countryDataSource.next(data);\n  }\n\n  setCountrySearchData(data) {\n    this.countrySearchDataSource.next(data);\n  }\n\n  public search(term: string): Observable<any> {\n    if (term.length < 2) {\n      return Observable.of([]);\n    }\n    const encodedTerm: string = encodeURIComponent(term);\n    const uri: string = [this.searchUrl, encodedTerm].join('/');\n    return this.http.get(uri);\n  }\n\n  public getCountries(): Observable<CountryModel[]> {\n    return this.http.get<CountryModel[]>(this.countryUrl);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/country.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { BaseService } from './base.service';\n\n@Injectable()\nexport class DbConnectionService extends BaseService {\n  private connectionUrl: string;\n\n  private hasDbConnectionSource = new BehaviorSubject<boolean>(true);\n  hasDbConnection$ = this.hasDbConnectionSource.asObservable();\n\n  constructor(private http: HttpClient) {\n    super();\n    this.connectionUrl = 'api/connection/state';\n  }\n\n  getHasDbConnection(): Observable<any> {\n    return this.http.get(this.connectionUrl);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/db-connection.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { SearchService } from 'app/shared/services/search.service';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { DpgOnBoardModel } from '../models';\n\n\n@Injectable()\nexport class DpgService {\n    private dpgTypeUrl: string;\n    private dpgUrl: string;\n    private searchUrl: string;\n    private dpgOnBoardUrl: string;\n    private dpgOnBoardByPortCallUrl: string;\n    private measurementTypeFilterUrl: string;\n    private searchService: SearchService;\n    private overviewUrl: string;\n\n    constructor(\n        private http: Http, private httpClient: HttpClient\n    ) {\n        this.searchService = new SearchService(this.httpClient);\n        this.dpgTypeUrl = 'api/dpgType';\n        this.dpgUrl = 'api/dpg';\n        this.searchUrl = 'api/dpg/search';\n        this.dpgOnBoardUrl = 'api/dpgOnBoard';\n        this.dpgOnBoardByPortCallUrl = 'api/dpgOnBoard/portcall';\n        this.measurementTypeFilterUrl = 'api/measurementType/filter';\n        this.overviewUrl = 'overviewByPortCall';\n    }\n\n    private dpgOnBoardSource = new BehaviorSubject<DpgOnBoardModel[]>(null);\n    dpgOnBoardList$ = this.dpgOnBoardSource.asObservable();\n\n    private dataIsPristine = new BehaviorSubject<boolean>(true);\n    dataIsPristine$ = this.dataIsPristine.asObservable();\n\n    private dpgIsChecked = new BehaviorSubject<boolean>(false);\n    dpgIsChecked$ = this.dpgIsChecked.asObservable();\n\n    setDpgOnBoardList(data) {\n        this.dpgOnBoardSource.next(data);\n    }\n\n    setDataIsPristineTrue() {\n        this.dataIsPristine.next(true);\n    }\n\n    setDataIsPristineFalse() {\n        this.dataIsPristine.next(false);\n    }\n\n    setDpgCheckedInProgressBar(checked: boolean) {\n        this.dpgIsChecked.next(checked);\n    }\n    // Http\n    getDpgOnBoardOverviewByPortCall(portCallId: number) {\n        const uri = [this.dpgOnBoardUrl, this.overviewUrl, portCallId].join('/');\n        return this.http.get(uri).map(res => res.json());\n    }\n\n    getDpgTypes() {\n        const uri = this.dpgTypeUrl + '/all';\n        return this.http.get(uri).map(res => res.json());\n    }\n\n    getDpgById(DpgId: number) {\n        const uri = [this.dpgUrl, DpgId].join('/');\n        return this.http.get(uri).map(res => res.json());\n    }\n\n    getDpgOnBoardListByPortCallId(portCallId: number) {\n        const uri = [this.dpgOnBoardByPortCallUrl, portCallId].join('/');\n        return this.http.get(uri).map(res => res.json());\n    }\n\n    getMeasurementTypeList(filter: string) {\n        const uri = this.measurementTypeFilterUrl;\n        return this.http.get(uri).map(res => res.json());\n    }\n\n    search(dpgType: number, term: string, amount = 10) {\n        if (term.length < 2) {\n            return Observable.of([]);\n        }\n        return this.searchService.search(this.searchUrl, term, amount, dpgType);\n    }\n\n    saveDpgOnBoard(dpgOnBoardList: any[], portCallId: number) {\n        const uri = [this.dpgOnBoardUrl, portCallId, 'list'].join('/');\n        return this.http.put(uri, dpgOnBoardList);\n    }\n\n    formatDpgOnBoard(dpgOnBoardList: DpgOnBoardModel[], portCallId: number): DpgOnBoardModel[] {\n        let formattedList: DpgOnBoardModel[] = [];\n        if (dpgOnBoardList && dpgOnBoardList.length > 0) {\n            formattedList = dpgOnBoardList.map(\n                item => {\n                    const formattedDpg = new DpgOnBoardModel();\n                    formattedDpg.portCallId = portCallId;\n                    formattedDpg.dpgId = item.dpgId;\n                    formattedDpg.dpgOnBoardId = item.dpgOnBoardId;\n                    formattedDpg.grossWeight = item.grossWeight;\n                    formattedDpg.locationOnBoard = item.locationOnBoard;\n                    formattedDpg.netWeight = item.netWeight;\n                    formattedDpg.placedInContainer = item.placedInContainer;\n                    formattedDpg.transportUnitIdentification = item.transportUnitIdentification;\n                    formattedDpg.measurementTypeId = item.measurementTypeId;\n                    return formattedDpg;\n                }\n            );\n        }\n        return formattedList;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/dpg.service.ts","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/Rx';\n\n@Injectable()\nexport class ErrorService {\n\n  private errorReasonSource = new BehaviorSubject<string>('Error');\n  errorReason$ = this.errorReasonSource.asObservable();\n\n  private errorMessageSource = new BehaviorSubject<string>('Something went wrong');\n  errorMessage$ = this.errorMessageSource.asObservable();\n\n  constructor() { }\n\n  setErrorReason(reason: string) {\n    this.errorReasonSource.next(reason);\n  }\n\n  setErrorMessage(message: string) {\n    this.errorMessageSource.next(message);\n  }\n\n  setError(errorReason: string, errorMessage: string) {\n    this.setErrorReason(errorReason);\n    this.setErrorMessage(errorMessage);\n  }\n\n  setDefaultError() {\n    this.setErrorReason('Error');\n    this.setErrorMessage('Server error');\n  }\n\n  setDefaultHTTPError(error: HttpErrorResponse) {\n    this.setErrorReason(`${error.status} ${error.statusText}`);\n    this.setErrorMessage(error.statusText);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/error.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { CargoItemModel, ConsignmentModel, PackageTypeModel } from '../models/';\n\n@Injectable()\nexport class FalCargoService {\n\n    private portCallUrl: string;\n    private consignmentsString: string;\n    private packageTypeUrl: string;\n    private overviewUrl: string;\n\n    constructor(private http: HttpClient) {\n        this.portCallUrl = 'api/portCall';\n        this.consignmentsString = 'consignments';\n        this.packageTypeUrl = 'api/packageType';\n        this.overviewUrl = 'api/customsCargo/overviewByPortCall';\n    }\n\n    private consignmentListSource = new BehaviorSubject<ConsignmentModel[]>(null);\n    consignmentListData$ = this.consignmentListSource.asObservable();\n\n    private dataIsPristineSource = new BehaviorSubject<boolean>(true);\n    dataIsPristine$ = this.dataIsPristineSource.asObservable();\n\n    setDataIsPristine(data: boolean) {\n        this.dataIsPristineSource.next(data);\n    }\n\n    setConsignmentListData(data: ConsignmentModel[]) {\n        this.consignmentListSource.next(data);\n    }\n\n    getOverviewByPortCall(portCallId: number): Observable<any> {\n        const uri = [this.overviewUrl, portCallId].join('/');\n        return this.http.get<any>(uri);\n    }\n\n    getConsignmentListForPortCall(portCallId: number): Observable<ConsignmentModel[]> {\n        const uri = [this.portCallUrl, portCallId, this.consignmentsString].join('/');\n        return this.http.get<ConsignmentModel[]>(uri);\n    }\n\n    saveConsignmentListForPortCall(consignmentList: ConsignmentModel[], portCallId: number) {\n        const uri = [this.portCallUrl, portCallId, this.consignmentsString].join('/');\n        return this.http.put(uri, consignmentList);\n    }\n\n    getPackageTypeList(): Observable<PackageTypeModel[]> {\n        const uri = this.packageTypeUrl;\n        return this.http.get<PackageTypeModel[]>(uri);\n    }\n\n    formatConsignment(consignmentList: ConsignmentModel[]): ConsignmentModel[] {\n        let formattedList: ConsignmentModel[] = [];\n        if (consignmentList && consignmentList.length > 0) {\n            formattedList = consignmentList.map(entry => {\n                const formattedConsignment = new ConsignmentModel();\n                formattedConsignment.portCallId = entry.portCallId;\n                formattedConsignment.name = entry.name;\n                formattedConsignment.portOfLoadingId = entry.portOfLoadingId;\n                formattedConsignment.portOfDischargeId = entry.portOfDischargeId;\n                formattedConsignment.remark = entry.remark;\n                if (entry.cargoItem && entry.cargoItem.length > 0) {\n                    formattedConsignment.cargoItem = entry.cargoItem.map(item => {\n                        const formattedCargoItem = new CargoItemModel();\n                        formattedCargoItem.shippingMarks = item.shippingMarks;\n                        formattedCargoItem.containerIdentification = item.containerIdentification;\n                        formattedCargoItem.description = item.description;\n                        formattedCargoItem.grossVolume = item.grossVolume;\n                        formattedCargoItem.grossWeight = item.grossWeight;\n                        formattedCargoItem.hsCode = item.hsCode;\n                        formattedCargoItem.numberOfPackages = item.numberOfPackages;\n                        formattedCargoItem.packageTypeId = item.packageTypeId;\n                        return formattedCargoItem;\n                    });\n                }\n                return formattedConsignment;\n            });\n        }\n        return formattedList;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/fal-cargo.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from '../../../../node_modules/rxjs';\nimport { CompanySecurityOfficerModel, FalSecurityModel, InternationalShipSecurityCertificateModel, SecurityLevelModel, ShipModel  } from '../models/';\n\n@Injectable()\nexport class FalSecurityService {\n\n  private apiUrl = 'api';\n  private falSecurityUrl = 'falSecurity';\n  private portCallUrl = 'portCall';\n  private securityLevelUrl = 'securityLevel';\n  private companySecurityOfficerUrl = 'companySecurityOfficer';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  private securityDataSource = new BehaviorSubject<FalSecurityModel>(null);\n  securityData$ = this.securityDataSource.asObservable();\n\n  private securityIsCheckedDataSource = new BehaviorSubject<boolean>(false);\n  securityIsCheckedData$ = this.securityIsCheckedDataSource.asObservable();\n\n  private pristineDataSource = new BehaviorSubject<boolean>(true);\n  pristineData$ = this.pristineDataSource.asObservable();\n\n  private validSecurityDetailsDataSource = new BehaviorSubject<boolean>(true);\n  validSecurityDetailsData$ = this.validSecurityDetailsDataSource.asObservable();\n\n  private validCompanySecurityOfficerDataSource = new BehaviorSubject<boolean>(true);\n  validCompanySecurityOfficerData$ = this.validCompanySecurityOfficerDataSource.asObservable();\n\n  private validLast10PortCallsDataSource = new BehaviorSubject<boolean>(true);\n  validLast10PortCallsData$ = this.validLast10PortCallsDataSource.asObservable();\n\n  private validShipToShipActivityDataSource = new BehaviorSubject<boolean>(true);\n  validShipToShipActivityData$ = this.validShipToShipActivityDataSource.asObservable();\n\n  private saveSecurityModelDataSource = new BehaviorSubject<FalSecurityModel>(null);\n  saveSecurityModelData$ = this.saveSecurityModelDataSource.asObservable();\n\n  private saveIsscModelDataSource = new BehaviorSubject<InternationalShipSecurityCertificateModel>(null);\n  saveIsscModelData$ = this.saveIsscModelDataSource.asObservable();\n\n  private saveShipModelDataSource = new BehaviorSubject<ShipModel>(null);\n  saveShipModelData$ = this.saveShipModelDataSource.asObservable();\n\n  private allowSavingDataSource = new BehaviorSubject<boolean>(false);\n  allowSavingData$ = this.allowSavingDataSource.asObservable();\n\n\n  setSecurityData(data) {\n    this.securityDataSource.next(data);\n  }\n  setSecurityIsCheckedData(data: boolean) {\n    this.securityIsCheckedDataSource.next(data);\n  }\n  setPristineData(data: boolean) {\n    this.pristineDataSource.next(data);\n  }\n  setValidSecurityDetailsData(data: boolean) {\n    this.validSecurityDetailsDataSource.next(data);\n  }\n  setValidCompanySecurityOfficerData(data: boolean) {\n    this.validCompanySecurityOfficerDataSource.next(data);\n  }\n  setValidLast10PortCallsData(data: boolean) {\n    this.validLast10PortCallsDataSource.next(data);\n  }\n  setValidShipToShipActivityData(data: boolean) {\n    this.validShipToShipActivityDataSource.next(data);\n  }\n  setSaveSecurityModelData(data: FalSecurityModel) {\n    this.saveSecurityModelDataSource.next(data);\n  }\n  setSaveIsscModelData(data: InternationalShipSecurityCertificateModel) {\n    this.saveIsscModelDataSource.next(data);\n  }\n  setSaveShipModelData(data: ShipModel) {\n    this.saveShipModelDataSource.next(data);\n  }\n  setAllowSavingData(data: boolean) {\n    this.allowSavingDataSource.next(data);\n  }\n\n  saveCompanySecurityOfficer(cso: CompanySecurityOfficerModel): Observable<CompanySecurityOfficerModel> {\n    const uri = [this.apiUrl, this.companySecurityOfficerUrl].join('/');\n    return this.http.put<CompanySecurityOfficerModel>(uri, cso);\n  }\n\n  saveFalSecurity(falSecurity: FalSecurityModel) {\n    const uri = [this.apiUrl, this.falSecurityUrl].join('/');\n    return this.http.put(uri, falSecurity);\n  }\n\n  getCompanySecurityOfficerBySecurityId(securityId: number): Observable<CompanySecurityOfficerModel> {\n    const uri = [this.apiUrl, this.falSecurityUrl, securityId, this.companySecurityOfficerUrl].join('/');\n    return this.http.get<CompanySecurityOfficerModel>(uri);\n  }\n\n  getFalSecurityByPortCallId(portCallId: number): Observable<FalSecurityModel> {\n    const uri = [this.apiUrl, this.portCallUrl, portCallId, this.falSecurityUrl].join('/');\n    return this.http.get<FalSecurityModel>(uri);\n  }\n\n  getSecurityLevelList(): Observable<SecurityLevelModel[]> {\n    const uri = [this.apiUrl, this.securityLevelUrl].join('/');\n    return this.http.get<SecurityLevelModel[]>(uri);\n  }\n\n  resetServiceData() {\n    this.setPristineData(true);\n    this.setSecurityData(null);\n    this.setAllowSavingData(false);\n    this.setSecurityIsCheckedData(false);\n    this.setValidCompanySecurityOfficerData(true);\n    this.setValidLast10PortCallsData(true);\n    this.setValidSecurityDetailsData(true);\n    this.setValidShipToShipActivityData(true);\n    this.setSaveIsscModelData(null);\n    this.setSaveShipModelData(null);\n    this.setSaveSecurityModelData(null);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/fal-security.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ShipStoresModel } from '../models/ship-stores-model';\n\n@Injectable()\nexport class FalShipStoresService {\n\n  private shipStoresUrl = 'api/falShipStores';\n  private portCallUrl = 'api/portCall';\n  private shipStoresListString = 'list';\n  private shipStoresString = 'falShipStores';\n  private measurementTypeUrl = 'api/measurementType';\n  private shipStoreOverviewUrl = 'overviewByPortCall';\n  private shipStoreSummaryByPortCallUrl = 'summaryByPortCall';\n\n  constructor(private http: Http) { }\n\n  private shipStoresListSource = new BehaviorSubject<ShipStoresModel[]>(null);\n  shipStoresList$ = this.shipStoresListSource.asObservable();\n\n  private dataIsPristine = new BehaviorSubject<boolean>(true);\n  dataIsPristine$ = this.dataIsPristine.asObservable();\n\n  private sequenceNumberSource = new BehaviorSubject<number>(1);\n  sequenceNumber$ = this.sequenceNumberSource.asObservable();\n\n  private reportingShipStoresIsChecked = new BehaviorSubject<boolean>(false);\n  reportingShipStoresIsChecked$ = this.reportingShipStoresIsChecked.asObservable();\n\n  getSummaryByPortCall(portCallId: number) {\n    const uri = [this.shipStoresUrl, this.shipStoreSummaryByPortCallUrl, portCallId].join('/');\n    return this.http.get(uri).map(res => res.json());\n  }\n\n  getOverviewByPortCall(portCallId: number) {\n    const uri = [this.shipStoresUrl, this.shipStoreOverviewUrl, portCallId].join('/');\n    return this.http.get(uri).map(res => res.json());\n  }\n\n  // Get ship stores object by its primary key ID\n  getShipStoresById(shipStoresId: number) {\n    const uri = [this.shipStoresUrl, shipStoresId].join('/');\n    return this.http.get(uri).map(res => res.json());\n  }\n\n  // Save ship stores list to database\n  saveShipStores(shipStoresList: any[], portCallId: number) {\n    const uri = [this.shipStoresUrl, portCallId, this.shipStoresListString].join('/');\n    return this.http.put(uri, shipStoresList);\n  }\n\n  // Get all ship stores for a given port call\n  getShipStoresByPortCallId(portCallId: number) {\n    let uri = [this.portCallUrl, portCallId].join('/');\n    uri = [uri, this.shipStoresString].join('/');\n\n    return this.http.get(uri).map(res => res.json());\n  }\n  // Get list of all measurement types\n  getMeasurementTypeList() {\n    const uri = this.measurementTypeUrl;\n    return this.http.get(uri).map(res => res.json());\n  }\n\n  // Update shipStoresInformationData\n  setShipStoresList(data) {\n    this.shipStoresListSource.next(data);\n  }\n\n  setDataIsPristine(isPristine: boolean) {\n    this.dataIsPristine.next(isPristine);\n  }\n\n  setCheckedInProgressBar(checked: boolean) {\n    this.reportingShipStoresIsChecked.next(checked);\n  }\n\n  setSequenceNumbers(list) {\n    let tempSequenceNumber = 1;\n    list.forEach(item => {\n      item.sequenceNumber = tempSequenceNumber;\n      tempSequenceNumber++;\n    });\n    return list;\n  }\n\n  formatShipStores(shipStoresList: ShipStoresModel[]): ShipStoresModel[] {\n    let formattedList: ShipStoresModel[] = [];\n    if (shipStoresList && shipStoresList.length > 0) {\n      formattedList = shipStoresList.map(\n        item => {\n          const formattedShipStore = new ShipStoresModel();\n          formattedShipStore.portCallId = item.portCallId;\n          formattedShipStore.sequenceNumber = item.sequenceNumber;\n          formattedShipStore.articleName = item.articleName;\n          formattedShipStore.quantity = item.quantity;\n          formattedShipStore.locationOnBoardCode = item.locationOnBoardCode;\n          formattedShipStore.locationOnBoard = item.locationOnBoard;\n          formattedShipStore.measurementTypeId = item.measurementTypeId;\n          formattedShipStore.articleName = item.articleName;\n          return formattedShipStore;\n        }\n      );\n    }\n    return formattedList;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/fal-ship-stores.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { GenderModel } from 'app/shared/models/gender-model';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class GenderService {\n\n    private genderUrl: string;\n\n    constructor(private http: Http) {\n        this.genderUrl = 'api/gender';\n    }\n\n    private genderDataSource = new BehaviorSubject<GenderModel>(null);\n    genderData$ = this.genderDataSource.asObservable();\n\n    setGenderData(data: GenderModel) {\n        this.genderDataSource.next(data);\n    }\n\n    // Http\n    getGenders() {\n        const uri = this.genderUrl;\n        return this.http.get(uri).map(res => res.json());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/gender.service.ts","\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class IdentityDocumentService {\n    private identityDocumentUrl: string;\n    private identityDocumentListUrl: string;\n    private identityDocTypeUrl: string;\n\n    constructor(private http: Http) {\n        this.identityDocumentListUrl = 'api/identitydocument/list';\n        this.identityDocumentUrl = 'api/identitydocument';\n        this.identityDocTypeUrl = 'api/identitydocumenttype';\n    }\n\n    private identityDocumentList = new BehaviorSubject<any>(null);\n    identityDocumentList$ = this.identityDocumentList.asObservable();\n\n    setIdentityDocumentList(data) {\n        this.identityDocumentList.next(data);\n    }\n\n    getIdentityDocumentById(id: number) {\n        const uri = [this.identityDocumentUrl, id].join('/');\n        return this.http.get(uri).map(res => res.json());\n    }\n\n    updateIdentityDocumentList(identityDocumentList: any[]) {\n        const uri = this.identityDocumentListUrl;\n        return this.http.put(uri, identityDocumentList).map(res => {\n          res.json();\n          if (res.status === 200) {\n          }\n        });\n    }\n\n    getIdentityDocumentTypes() {\n        const uri = this.identityDocTypeUrl;\n        return this.http.get(uri).map(res => res.json());\n      }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/identtity-document.service.ts","export * from './account.service';\nexport * from './auth-service';\nexport * from './auth.request.service';\nexport * from './base.service';\nexport * from './constants.service';\nexport * from './content.service';\nexport * from './country.service';\nexport * from './db-connection.service';\nexport * from './error.service';\nexport * from './fal-cargo.service';\nexport * from './fal-security.service';\nexport * from './fal-ship-stores.service';\nexport * from './gender.service';\nexport * from './identtity-document.service';\nexport * from './location.service';\nexport * from './login.service';\nexport * from './organization.service';\nexport * from './port-call-details.service';\nexport * from './port-call-fal-person-on-board.service';\nexport * from './port-call-overview.service';\nexport * from './port-call.service';\nexport * from './purpose.service';\nexport * from './search.service';\nexport * from './ship.service';\nexport * from './uri-query.service';\nexport * from './validate-date-time.service';\nexport * from './dpg.service';\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/index.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LocationModel } from 'app/shared/models/location-model';\nimport { SearchService } from 'app/shared/services/search.service';\nimport 'rxjs/add/observable/of';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class LocationService {\n  private searchService: SearchService;\n  private locationUrl: string;\n  private locationTypeUrl: string;\n  private countryUrl: string;\n  private searchUrl: string;\n  private searchHarbourUrl: string;\n  private locationSourceUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.locationUrl = 'api/location';\n    this.locationTypeUrl = 'api/locationtype';\n    this.countryUrl = 'api/country';\n    this.searchService = new SearchService(http);\n    this.searchUrl = 'api/location/search';\n    this.searchHarbourUrl = 'api/location/harbour/search';\n    this.locationSourceUrl = 'api/location/locationSourceInternal';\n  }\n\n  private locationDataSource = new BehaviorSubject<any>(null);\n  locationData$ = this.locationDataSource.asObservable();\n\n  private locationSearchDataSource = new BehaviorSubject<any>(null);\n  locationSearchData$ = this.locationSearchDataSource.asObservable();\n\n  setLocationSearchData(data) {\n    this.locationSearchDataSource.next(data);\n  }\n\n  clearLocationSearch() {\n    this.setLocationData(null);\n    this.setLocationSearchData(null);\n  }\n\n  public search(term: string, restrictTypeHarbour: boolean, amount = 10): Observable<any> {\n    if (term.length < 2) {\n      return Observable.of([]);\n    }\n    const uri = (restrictTypeHarbour) ? this.searchHarbourUrl : this.searchUrl;\n    return this.searchService.search(uri, term, amount);\n  }\n\n  setLocationData(data) {\n    this.locationDataSource.next(data);\n  }\n\n  getLocationById(locationId: number) {\n    const uri = [this.locationUrl, locationId].join('/');\n    return this.http.get(uri);\n  }\n\n\n  public updateLocation(location: LocationModel): Observable<any> {\n    location.country = null;\n    location.locationType = null;\n    return this.http\n      .put(this.locationUrl, location);\n  }\n\n  public registerLocation(newLocation: LocationModel): Observable<any> {\n    return this.http\n      .post(this.locationUrl, newLocation);\n  }\n\n  public getLocationTypes(): Observable<any> {\n    return this.http.get(this.locationTypeUrl);\n  }\n\n  public getCountries(): Observable<any> {\n    return this.http.get(this.countryUrl);\n  }\n\n  public getInternalLocationSource(): Observable<any> {\n    return this.http.get(this.locationSourceUrl);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/location.service.ts","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Headers, Http, Response } from '@angular/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Credentials } from '../interfaces/credentials.interface';\nimport { JWTResponse } from '../interfaces/jwt-response.interface';\nimport { ConfigService } from '../utils/config.service';\nimport { BaseService } from './base.service';\n\n// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/shared/services/user.service.ts\n\n@Injectable()\nexport class LoginService extends BaseService {\n  baseUrl = '';\n\n  // Observable navItem source\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\n  // Observable navItem stream\n  authNavStatus$ = this._authNavStatusSource.asObservable();\n\n  private _loggedInSource = new BehaviorSubject<boolean>(false);\n  loggedIn$ = this._loggedInSource.asObservable();\n  private loggedIn = false;\n\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService,\n    private jwtHelperService: JwtHelperService\n  ) {\n    super();\n    this.loggedIn = !!localStorage.getItem('auth_token');\n    // ?? not sure if this the best way to broadcast the status but seems to resolve issue on page refresh where auth status is lost in\n    // header component resulting in authed user nav links disappearing despite the fact user is still logged in\n    this._authNavStatusSource.next(this.loggedIn);\n    this.baseUrl = configService.getApiURI();\n    this.jwtHelperService = new JwtHelperService({\n      tokenGetter: () => localStorage.getItem('')\n    });\n  }\n\n  protected /*override*/ handleError(error: HttpErrorResponse | any) {\n    let errMsg: any;\n\n    if (error instanceof HttpErrorResponse) {\n      const ERROR = error as HttpErrorResponse;\n      if (ERROR.status >= 500) {\n        errMsg = `${ERROR.status} ${ERROR.statusText}`;\n      } else if (ERROR.status >= 400) {\n        errMsg = 'Login failed';\n      } else if (ERROR.error.error instanceof SyntaxError) {\n        errMsg = 'Application error';\n      } else {\n        errMsg = error.message ? error.message : error.toString();\n      }\n      return Observable.throw(errMsg);\n    }\n  }\n\n  login(credentials: Credentials): Observable<JWTResponse> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    return this.http\n      .post<JWTResponse>(\n        this.baseUrl + '/auth/login',\n        credentials,\n        { headers }\n      )\n      .map(jwtResponse => {\n        if (jwtResponse) {\n          localStorage.setItem('auth_token', jwtResponse.auth_token);\n          this.loggedIn = true;\n          this._loggedInSource.next(true);\n          this._authNavStatusSource.next(true);\n        } else {\n          this._loggedInSource.next(false);\n          this._authNavStatusSource.next(false);\n        }\n        return jwtResponse;\n      })\n      .catch(this.handleError);\n  }\n\n  logout() {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('user_claims');\n    this.loggedIn = false;\n    this._loggedInSource.next(false);\n    this._authNavStatusSource.next(false);\n  }\n\n  // Tips from https://ryanchenkie.com/angular-authentication-using-route-guards\n  isLoggedIn() {\n    // Get token from localStorage\n    const token = localStorage.getItem('auth_token');\n    // Check whether the token is expired\n    const isExpired = this.jwtHelperService.isTokenExpired(token);\n\n    return !isExpired;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/login.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { CompanySecurityOfficerModel } from '../models/company-security-officer-model';\nimport { OrganizationModel } from '../models/organization-model';\nimport { SearchService } from './search.service';\n\n@Injectable()\nexport class OrganizationService {\n  private searchService: SearchService;\n  private searchOrganizationUrl: string;\n  private organizationUrl: string;\n  private organizationTypeUrl: string;\n  private validOrganizationTypesUrl: string;\n  private organizationUserUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.searchService = new SearchService(http);\n    this.organizationUrl = 'api/organization';\n    this.organizationTypeUrl = 'api/organizationtype';\n    this.validOrganizationTypesUrl = 'api/organizationtype/ValidTypes';\n    this.organizationUserUrl = this.organizationUrl + '/user';\n    this.searchOrganizationUrl = this.organizationUrl + '/search';\n  }\n\n  private organizationDataSource = new BehaviorSubject<any>(null);\n  organizationData$ = this.organizationDataSource.asObservable();\n\n  private organizationSearchDataSource = new BehaviorSubject<any>(null);\n  organizationSearchData$ = this.organizationSearchDataSource.asObservable();\n\n  setOrganizationData(data) {\n    this.organizationDataSource.next(data);\n  }\n\n  setOrganizationSearchData(data) {\n    this.organizationSearchDataSource.next(data);\n  }\n\n  public registerOrganization(newOrganization: OrganizationModel): Observable<any> {\n    return this.http\n      .post(this.organizationUrl, newOrganization);\n  }\n\n  updateOrganization(organization: OrganizationModel): Observable<any> {\n    return this.http\n      .put(this.organizationUrl, organization);\n  }\n\n  public search(term: string, amount = 10): Observable<any> {\n    if (term.length < 2) {\n      return Observable.of([]);\n    }\n    return this.searchService.search(this.searchOrganizationUrl, term, amount);\n  }\n\n  public getValidOrganizationTypes(): Observable<any> {\n    return this.http.get(this.validOrganizationTypesUrl);\n  }\n\n  public getOrganizationForUser(): Observable<any> {\n    const uri: string = this.organizationUserUrl;\n    return this.http.get(uri);\n  }\n\n  getOrganizationById(organizationId: number): Observable<any> {\n    const uri: string = [this.organizationUrl, organizationId].join('/');\n    return this.http.get(uri);\n  }\n\n  getRecognizedSecurityOrganizations(): Observable<OrganizationModel[]> {\n    const uri = [this.organizationTypeUrl, 'recognizedSecurityOrganization', 'organization'].join('/');\n    return this.http.get<OrganizationModel[]>(uri);\n  }\n\n  getCompanySecurityOfficersByOrganizationId(organizationId: number): Observable<CompanySecurityOfficerModel[]> {\n    const uri = [this.organizationUrl, organizationId, 'companySecurityOfficer'].join('/');\n    return this.http.get<CompanySecurityOfficerModel[]>(uri);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/organization.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/observable/of';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { FormMetaData } from '../interfaces/form-meta-data.interface';\nimport { PortCallDetailsModel } from '../models/port-call-details-model';\nimport { BaseService } from './base.service';\n\n@Injectable()\nexport class PortCallDetailsService extends BaseService {\n\n  // Global purpose\n  private purposePortCallUrl = 'api/purpose/portcall';\n  private purposeOtherNameUrl = 'api/purpose/othername';\n  // Global details\n  private detailsUrl = 'api/portcalldetails';\n  private detailsPortCallUrl = 'api/portcalldetails/portcall';\n\n  private portCallDetailsIdSource = new BehaviorSubject<any>(null);\n  portCallDetailsIdData$ = this.portCallDetailsIdSource.asObservable();\n\n  private crewPassengersAndDimensionsSource = new BehaviorSubject<any>(null);\n  crewPassengersAndDimensionsData$ = this.crewPassengersAndDimensionsSource.asObservable();\n\n  private crewPassengersAndDimensionsMeta = new BehaviorSubject<FormMetaData>({ valid: true });\n  crewPassengersAndDimensionsMeta$ = this.crewPassengersAndDimensionsMeta.asObservable();\n\n  private cargoBriefDescriptionSource = new BehaviorSubject<string>('');\n  cargoBriefDescriptionData$ = this.cargoBriefDescriptionSource.asObservable();\n\n  private reportingForThisPortCallSource = new BehaviorSubject<any>(null);\n  reportingForThisPortCallData$ = this.reportingForThisPortCallSource.asObservable();\n\n  private portCallPurposeDataSource = new BehaviorSubject<any>(null);\n  portCallPurposeData$ = this.portCallPurposeDataSource.asObservable();\n\n  private otherPurposeNameSource = new BehaviorSubject<string>('');\n  otherPurposeName$ = this.otherPurposeNameSource.asObservable();\n\n  private otherPurposeDataSource = new BehaviorSubject<any>(null);\n  otherPurposeData$ = this.otherPurposeDataSource.asObservable();\n\n  private detailsPristine = new BehaviorSubject<boolean>(true);\n  detailsPristine$ = this.detailsPristine.asObservable();\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super();\n  }\n\n  setDetails(details: PortCallDetailsModel) {\n    this.setPortCallDetailsId(details.portCallDetailsId);\n    this.setCrewPassengersAndDimensionsData(details);\n    this.setReportingForThisPortCallData(details);\n    this.setCargoBriefDescriptionData(details.cargoBriefDescription);\n    this.detailsPristine.next(true);\n  }\n\n  setPortCallDetailsId(data) {\n    this.portCallDetailsIdSource.next(data);\n  }\n\n  setCrewPassengersAndDimensionsData(data) {\n    this.detailsPristine.next(false);\n    this.crewPassengersAndDimensionsSource.next(data);\n  }\n\n  setCrewPassengersAndDimensionsMeta(metaData: FormMetaData) {\n    this.crewPassengersAndDimensionsMeta.next(metaData);\n  }\n\n  setCargoBriefDescriptionData(data) {\n    this.cargoBriefDescriptionSource.next(data);\n  }\n\n  // Reporting\n  // This is a list of checkboxes that specify which FAL forms to include in this port call registration\n\n  setReportingForThisPortCallData(data) {\n    this.detailsPristine.next(false);\n    this.reportingForThisPortCallSource.next(data);\n  }\n  // Purpose\n\n  setPortCallPurposeData(data) {\n    this.detailsPristine.next(false);\n    this.portCallPurposeDataSource.next(data);\n  }\n  // User-specified purpose of type \"Other\"\n  setOtherPurposeName(data) {\n    this.detailsPristine.next(false);\n    this.otherPurposeNameSource.next(data);\n  }\n\n  setOtherPurposeData(data) {\n    this.otherPurposeDataSource.next(data);\n  }\n\n  setDetailsPristine(isPristine: boolean) {\n    this.detailsPristine.next(isPristine);\n  }\n\n  // Get methods\n  getDetailsByPortCallId(portCallId: number): Observable<PortCallDetailsModel> {\n    const uri: string = [this.detailsPortCallUrl, portCallId].join('/');\n    return this.http.get<PortCallDetailsModel>(uri);\n  }\n\n  getPurposeByPortCallId(portCallId: number): Observable<any> {\n    const uri: string = [this.purposePortCallUrl, portCallId].join('/');\n    return this.http.get<any>(uri);\n  }\n\n  getOtherName(portCallId: number) {\n    const uri: string = [this.purposeOtherNameUrl, portCallId].join('/');\n    return this.http.get(uri);\n  }\n\n  wipeDetailsData() {\n    this.portCallDetailsIdSource.next(null);\n    this.reportingForThisPortCallSource.next(null);\n    this.crewPassengersAndDimensionsSource.next(null);\n    this.portCallPurposeDataSource.next(null);\n    this.otherPurposeNameSource.next('');\n    this.detailsPristine.next(true);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call-details.service.ts","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PERSON_ON_BOARD_TYPES } from 'app/shared/constants/enumValues';\nimport { GenderModel, IdentityDocumentModel, PersonOnBoardModel, PersonOnBoardTypeModel } from 'app/shared/models/';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { catchError, retry } from 'rxjs/operators';\n\n\n@Injectable()\nexport class PortCallFalPersonOnBoardService {\n\n  private genderUrl: string;\n  private personOnBoardString: string;\n  private portCallUrl: string;\n  private personOnBoardUrl: string;\n  private personOnBoardTypeUrl: string;\n  private overviewByPortCallUrl: string;\n\n  response: Observable<any>;\n\n  constructor(private httpClient: HttpClient) {\n    this.genderUrl = 'api/gender';\n    this.personOnBoardString = 'persononboard';\n    this.portCallUrl = 'api/portcall';\n    this.personOnBoardUrl = 'api/personOnBoard';\n    this.personOnBoardTypeUrl = 'api/PersonOnBoardType';\n    this.overviewByPortCallUrl = 'overviewByPortCallEnum';\n   }\n\n  private passengerListSource = new BehaviorSubject<any>(null);\n  passengerList$ = this.passengerListSource.asObservable();\n\n  private passengerDataIsPristine = new BehaviorSubject<boolean>(true);\n  passengerDataIsPristine$ = this.passengerDataIsPristine.asObservable();\n\n  private passengerSequenceNumberSource = new BehaviorSubject<number>(1);\n  sequenceNumber$ = this.passengerSequenceNumberSource.asObservable();\n\n  private passengerListIsChecked = new BehaviorSubject<boolean>(false);\n  passengerListIsChecked$ = this.passengerListIsChecked.asObservable();\n\n  private crewListSource = new BehaviorSubject<any>(null);\n  crewList$ = this.crewListSource.asObservable();\n\n  private crewDataIsPristine = new BehaviorSubject<boolean>(true);\n  crewDataIsPristine$ = this.crewDataIsPristine.asObservable();\n\n  private crewSequenceNumberSource = new BehaviorSubject<number>(1);\n  crewSequenceNumber$ = this.crewSequenceNumberSource.asObservable();\n\n  private crewListIsChecked = new BehaviorSubject<boolean>(false);\n  crewListIsChecked$ = this.crewListIsChecked.asObservable();\n\n   // Http\n  getPersonOnBoardById(personOnBoardId: number) {\n    const uri = [this.personOnBoardUrl, personOnBoardId].join('/');\n    return this.httpClient.get<PersonOnBoardModel>(uri, {observe: 'body'});\n  }\n\n  // Get all person on board entities of a port call\n  getPersonOnBoardListByPortCallId(portCallId: number) {\n    // uri = api/portCall/{portCallId}/personOnBoard\n    const uri = [this.portCallUrl, portCallId, this.personOnBoardString].join('/');\n    return this.httpClient.get<PersonOnBoardModel[]>(uri, {observe: 'body'});\n  }\n\n  getPassengerListByPortCallId(portCallId: number) {\n    // uri = api/portCall/{portCallId}/personOnBoard/personOnBoardType/{personOnBoardTypeId}\n    const uri = [this.portCallUrl, portCallId, this.personOnBoardString, 'personOnBoardType', PERSON_ON_BOARD_TYPES.PAX].join('/');\n    return this.httpClient.get<PersonOnBoardModel[]>(uri, {observe: 'body'});\n  }\n\n  getCrewListByPortCallId(portCallId: number) {\n    // uri = api/portCall/{portCallId}/personOnBoard/personOnBoardType/{personOnBoardTypeId}\n    const uri = [this.portCallUrl, portCallId, this.personOnBoardString, 'personOnBoardType', PERSON_ON_BOARD_TYPES.CREW].join('/');\n    return this.httpClient.get<PersonOnBoardModel[]>(uri, {observe: 'body'});\n  }\n\n  getGenderList() {\n    const uri = this.genderUrl;\n    return this.httpClient.get<GenderModel[]>(uri, {observe: 'body'});\n  }\n\n  getPersonOnBoardTypeByEnum(personOnBoardTypeEnum: PERSON_ON_BOARD_TYPES) {\n    const uri = [this.personOnBoardTypeUrl, personOnBoardTypeEnum].join('/');\n    return this.httpClient.get<PersonOnBoardTypeModel>(uri, {observe: 'body'});\n  }\n\n  updatePersonOnBoardList(portCallId: number, personOnBoardList: any[], personOnBoardTypeId: number) {\n    let cleanedPersonOnBoardList;\n    cleanedPersonOnBoardList = this.cleanPersonOnBoardList(personOnBoardList);\n    // uri = api/portCall/{portCallId}/personOnBoard/personOnBoardType/{personOnBoardTypeId}\n    const uri = [this.portCallUrl, portCallId, this.personOnBoardString, 'personOnBoardType', personOnBoardTypeId].join('/');\n    return this.httpClient.put<PersonOnBoardModel[]>(uri, cleanedPersonOnBoardList).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError)\n    );\n  }\n\n  getOverviewByPortCall(portCallId: number, personOnBoardTypeEnum: PERSON_ON_BOARD_TYPES) {\n    const uri = [this.personOnBoardUrl, this.overviewByPortCallUrl, portCallId, personOnBoardTypeEnum].join('/');\n    return this.httpClient.get<any>(uri, {observe: 'body'});\n  }\n\n  // Setters\n  setPassengersList(data) {\n    this.passengerListSource.next(data);\n  }\n\n  setCrewList(data) {\n    this.crewListSource.next(data);\n  }\n\n  setPassengerDataIsPristine(isPristine: boolean) {\n    this.passengerDataIsPristine.next(isPristine);\n  }\n\n  setCrewDataIsPristine(isPristine: boolean) {\n    this.crewDataIsPristine.next(isPristine);\n  }\n\n  setPassengerCheckedInProgressBar(checked: boolean) {\n    this.passengerListIsChecked.next(checked);\n  }\n\n  setCrewCheckedInProgressBar(checked: boolean) {\n    this.crewListIsChecked.next(checked);\n  }\n\n  cleanPersonOnBoardList(personOnBoardList: any[]) {\n    const cleanedPersonOnBoardList = [];\n\n    if (personOnBoardList) {\n      personOnBoardList.map(personOnBoard => {\n        const cleanedPersonOnBoard = Object.assign(new PersonOnBoardModel(), personOnBoard);\n\n        if (personOnBoard.dateOfBirth) {\n          cleanedPersonOnBoard.dateOfBirth = new Date(Date.UTC(personOnBoard.dateOfBirth.getFullYear(), personOnBoard.dateOfBirth.getMonth(), personOnBoard.dateOfBirth.getDate()));\n        }\n        cleanedPersonOnBoard.countryOfBirth = null;\n        cleanedPersonOnBoard.personOnBoardType = null;\n        cleanedPersonOnBoard.gender = null;\n        cleanedPersonOnBoard.portCall = null;\n        cleanedPersonOnBoard.portOfEmbarkation = null;\n        cleanedPersonOnBoard.portOfDisembarkation = null;\n        cleanedPersonOnBoard.nationality = null;\n\n        // Identity Documents\n        cleanedPersonOnBoard.identityDocument = [];\n        personOnBoard.identityDocument.forEach((identityDocument, index) => {\n          const cleanedIdentityDocument = Object.assign(new IdentityDocumentModel(), identityDocument);\n          if (identityDocument.identityDocumentIssueDate) {\n            cleanedIdentityDocument.identityDocumentIssueDate = new Date(Date.UTC(identityDocument.identityDocumentIssueDate.getFullYear(), identityDocument.identityDocumentIssueDate.getMonth(), identityDocument.identityDocumentIssueDate.getDate()));\n          }\n          if (identityDocument.identityDocumentExpiryDate) {\n            cleanedIdentityDocument.identityDocumentExpiryDate = new Date(Date.UTC(identityDocument.identityDocumentExpiryDate.getFullYear(), identityDocument.identityDocumentExpiryDate.getMonth(), identityDocument.identityDocumentExpiryDate.getDate()));\n          }\n          cleanedIdentityDocument.identityDocumentType = null;\n          cleanedIdentityDocument.issuingNation = null;\n\n          cleanedPersonOnBoard.identityDocument.push(cleanedIdentityDocument);\n        });\n      cleanedPersonOnBoardList.push(cleanedPersonOnBoard);\n      });\n    }\n\n    return cleanedPersonOnBoardList;\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return Observable.throw(\n      'Something bad happened; please try again later.');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call-fal-person-on-board.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseRequest } from 'app/shared/utils/base.request';\nimport { ConfigService } from 'app/shared/utils/config.service';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthRequest } from './auth.request.service';\n\n@Injectable()\nexport class PortCallOverviewService extends BaseRequest {\n\n    private portCallUrl: string;\n    private portCallUserUrl: string;\n    private partialOverviewUrl: string;\n    private overviewByUserUrl: string;\n    private overviewUrl: string;\n\n    private overviewDataSource = new BehaviorSubject<any>(null);\n    overviewData$ = this.overviewDataSource.asObservable();\n\n    private draftOverviewDataSource = new BehaviorSubject<any>(null);\n    draftOverviewData$ = this.draftOverviewDataSource.asObservable();\n\n    private showCancelledPortCallsSource = new BehaviorSubject<boolean>(false);\n    showCancelledPortCalls$ = this.showCancelledPortCallsSource.asObservable();\n\n    private showCompletedPortCallsSource = new BehaviorSubject<boolean>(false);\n    showCompletedPortCalls$ = this.showCompletedPortCallsSource.asObservable();\n\n    private clearedByUserAgencyDataSource = new BehaviorSubject<any>(null);\n    clearedByUserAgencyOverviewData$ = this.clearedByUserAgencyDataSource.asObservable();\n\n    private portCallDataSource = new BehaviorSubject<any>(null);\n    portCallData$ = this.portCallDataSource.asObservable();\n\n    private loadingPortCallSource = new BehaviorSubject<boolean>(false);\n    loadingPortCall$ = this.loadingPortCallSource.asObservable();\n\n    constructor(\n        private http: HttpClient,\n        configService: ConfigService\n    ) {\n        super(configService);\n        this.portCallUrl = 'api/portcall';\n        this.partialOverviewUrl = this.portCallUrl + '/partialOverview';\n        this.portCallUserUrl = this.portCallUrl + '/user';\n        this.overviewByUserUrl = this.portCallUrl + '/user/overview';\n        this.overviewUrl = this.portCallUrl + '/overview';\n    }\n\n    setLoadingPortCall(data: boolean) {\n        this.loadingPortCallSource.next(data);\n    }\n\n    setOverviewData(data) {\n        this.overviewDataSource.next(data);\n    }\n\n    setDraftData(data) {\n        this.draftOverviewDataSource.next(data);\n    }\n\n    setShowCancelledPortCalls(showCancelled) {\n        this.showCancelledPortCallsSource.next(showCancelled);\n    }\n\n    setShowCompletedPortCalls(showCompleted) {\n        this.showCompletedPortCallsSource.next(showCompleted);\n    }\n\n    setClearedData(data) {\n        this.clearedByUserAgencyDataSource.next(data);\n    }\n\n    getPartialOverview(portCallId: number): Observable<any> {\n        const uri: string = [this.partialOverviewUrl, portCallId].join('/');\n        return this.http.get(uri);\n    }\n\n    getOverview(portCallId: number): Observable<any> {\n        const uri: string = [this.overviewUrl, portCallId].join('/');\n        return this.http.get(uri);\n    }\n\n    setPortCallData(data) {\n        this.portCallDataSource.next(data);\n    }\n\n    getPortCalls(): Observable<any> {\n        const uri = this.portCallUserUrl;\n        return this.http.get(uri);\n    }\n\n    getOverviewsByUser(): Observable<any[]> {\n        const uri = this.overviewByUserUrl;\n        return this.http.get<any[]>(uri);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call-overview.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\nimport 'rxjs/add/observable/of';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { PortCallDetailsModel } from '../models/port-call-details-model';\nimport { PortCallModel } from '../models/port-call-model';\nimport { PortCallDetailsService } from './port-call-details.service';\n\n/**\n * To future developers:\n * Sorry about the mess.\n */\n@Injectable()\nexport class PortCallService {\n  // Global port call\n  private portCallUrl = 'api/portcall';\n  private portCallUserUrl = 'api/portcall/user';\n  private updatePortCallStatusAwaitingClearanceUrl = 'api/portcall/updatestatus/awaitingclearance';\n  private updatePortCallStatusCancelledUrl = 'api/portcall/updatestatus/cancelled';\n  private updatePortCallStatusClearedUrl = 'api/portcall/updatestatus/cleared';\n  private updatePortCallStatusCompletedUrl = 'api/portcall/updatestatus/completed';\n  private updatePortCallStatusDraftUrl = 'api/portCall/updateStatus/draft';\n\n  // Global details\n  private detailsUrl = 'api/portcalldetails';\n  private detailsPortCallUrl = 'api/portcalldetails/portcall';\n\n  // Global purpose\n  private purposePortCallUrl = 'api/purpose/portcall';\n  private purposeOtherNameUrl = 'api/purpose/othername';\n\n  // Global clearance\n  private clearanceUrl = 'api/organizationportcall';\n  private clearancePortCallUrl = 'api/organizationportcall/portcall';\n\n  // Data sources with observables\n  private portCallIdSource = new BehaviorSubject<any>(null);\n  portCallIdData$ = this.portCallIdSource.asObservable();\n\n  private portCallStatusSource = new BehaviorSubject<any>(null);\n  portCallStatusData$ = this.portCallStatusSource.asObservable();\n\n  private clearanceDataSource = new BehaviorSubject<any>(null);\n  clearanceData$ = this.clearanceDataSource.asObservable();\n\n  private clearanceListDataSource = new BehaviorSubject<any>(null);\n  clearanceListData$ = this.clearanceListDataSource.asObservable();\n\n  private createdByUserDataSource = new BehaviorSubject<any>(null);\n  createdByUserData$ = this.createdByUserDataSource.asObservable();\n\n  // Data sources for Voyages tab\n  private shipDataSource = new BehaviorSubject<any>(null);\n  shipData$ = this.shipDataSource.asObservable();\n\n  private locationDataSource = new BehaviorSubject<any>(null);\n  locationData$ = this.locationDataSource.asObservable();\n\n  private etaSource = new BehaviorSubject<DateTime>(null);\n  etaData$ = this.etaSource.asObservable();\n\n  private etdSource = new BehaviorSubject<DateTime>(null);\n  etdData$ = this.etdSource.asObservable();\n\n  private prevLocationDataSource = new BehaviorSubject<any>(null);\n  prevLocationData$ = this.prevLocationDataSource.asObservable();\n\n  private prevEtdSource = new BehaviorSubject<DateTime>(null);\n  prevEtdData$ = this.prevEtdSource.asObservable();\n\n  private nextLocationDataSource = new BehaviorSubject<any>(null);\n  nextLocationData$ = this.nextLocationDataSource.asObservable();\n\n  private nextEtaSource = new BehaviorSubject<DateTime>(null);\n  nextEtaData$ = this.nextEtaSource.asObservable();\n\n  private voyagesErrorsSource = new BehaviorSubject<boolean>(null);\n  voyagesErrors$ = this.voyagesErrorsSource.asObservable();\n\n  private voyagesIsPristineSource = new BehaviorSubject<boolean>(true);\n  voyagesIsPristine$ = this.voyagesIsPristineSource.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private portCallDetailsService: PortCallDetailsService\n  ) { }\n\n  private portCallDataSource = new BehaviorSubject<PortCallModel>(null);\n  portCallData$ = this.portCallDataSource.asObservable();\n\n  setPortCallData(data) {\n    this.portCallDataSource.next(data);\n  }\n\n  // Helper method for ETA/ETD formatting\n  etaEtdDataFormat(arrival, departure) {\n    const etaData = new Date(arrival);\n    const etdData = new Date(departure);\n    return {\n      eta: {\n        year: etaData.getFullYear(),\n        month: etaData.getMonth() + 1,\n        day: etaData.getDate(),\n        hour: etaData.getHours(),\n        minute: etaData.getMinutes()\n      },\n      etd: {\n        year: etdData.getFullYear(),\n        month: etdData.getMonth() + 1,\n        day: etdData.getDate(),\n        hour: etdData.getHours(),\n        minute: etdData.getMinutes()\n      }\n    };\n  }\n  private dateStringToDateTime(dateString: string): DateTime {\n    const dateObject = new Date(dateString);\n    const dateTime: DateTime = {\n      date: new NgbDate(dateObject.getFullYear(), dateObject.getMonth() + 1, dateObject.getDate()),\n      time: new NgbTime(dateObject.getHours(), dateObject.getMinutes(), 0)\n    };\n    return dateTime;\n  }\n\n  // setPortCall: sets values for: Ship, Location, ETA/ETD, and Clearance list\n  setPortCall(overview: any) {\n    this.setPortCallIdData(overview.portCall.portCallId);\n    // Ship Location Time\n    this.setShipData(overview.ship);\n    this.setLocationData(overview.location);\n    this.setEtaData(this.dateStringToDateTime(overview.portCall.locationEta));\n    this.setEtdData(this.dateStringToDateTime(overview.portCall.locationEtd));\n    this.setPrevLocationData(overview.portCall.previousLocation);\n    if (overview.portCall.previousLocationEtd) {\n      this.setPrevEtdData(this.dateStringToDateTime(overview.portCall.previousLocationEtd));\n    }\n    this.setNextLocationData(overview.portCall.nextLocation);\n    if (overview.portCall.nextLocationEta) {\n      this.setNextEtaData(this.dateStringToDateTime(overview.portCall.nextLocationEta));\n    }\n    // Clearance list\n    this.setClearanceListData(overview.clearanceList);\n    this.setPortCallStatus(overview.status);\n    // User info\n    this.setCreatedByUserData(overview.portCall.user);\n  }\n\n  updatePortCall(portCall: PortCallModel): Observable<any> {\n    return this.http.put(this.portCallUrl, portCall);\n  }\n\n  setPortCallIdData(data) {\n    this.portCallIdSource.next(data);\n  }\n\n  setShipData(data) {\n    this.voyagesIsPristineSource.next(false);\n    this.shipDataSource.next(data);\n  }\n  setLocationData(data) {\n    this.voyagesIsPristineSource.next(false);\n    this.locationDataSource.next(data);\n  }\n  setEtaData(data) {\n    this.voyagesIsPristineSource.next(false);\n    this.etaSource.next(data);\n  }\n  setEtdData(data) {\n    this.voyagesIsPristineSource.next(false);\n    this.etdSource.next(data);\n  }\n  setPrevLocationData(data) {\n    this.voyagesIsPristineSource.next(false);\n    this.prevLocationDataSource.next(data);\n  }\n  setPrevEtdData(data) {\n    this.voyagesIsPristineSource.next(false);\n    this.prevEtdSource.next(data);\n  }\n  setNextLocationData(data) {\n    this.voyagesIsPristineSource.next(false);\n    this.nextLocationDataSource.next(data);\n  }\n  setNextEtaData(data) {\n    this.voyagesIsPristineSource.next(false);\n    this.nextEtaSource.next(data);\n  }\n  setVoyagesErrors(hasError: boolean) {\n    this.voyagesErrorsSource.next(hasError);\n  }\n  setVoyagesIsPristine(isPristine: boolean) {\n    this.voyagesIsPristineSource.next(isPristine);\n  }\n\n  setPortCallStatus(data) {\n    this.portCallStatusSource.next(data);\n  }\n  setCreatedByUserData(data) {\n    this.createdByUserDataSource.next(data);\n  }\n\n  // REGISTER NEW PORT CALL\n  registerNewPortCall(portCall: PortCallModel): Observable<PortCallModel> {\n    const uri: string = this.portCallUrl;\n    this.setPortCallStatus('Draft');\n    return this.http.post<PortCallModel>(uri, portCall);\n  }\n  // Set port call status to awaiting clearance\n  updatePortCallStatusAwaitingClearance(portCallId: number) {\n    const uri = [\n      this.updatePortCallStatusAwaitingClearanceUrl,\n      portCallId\n    ].join('/');\n    return this.http.post(uri, null);\n  }\n  // Set port call status to cleared\n  updatePortCallStatusCleared(portCallId: number): Observable<any> {\n    const uri = [this.updatePortCallStatusClearedUrl, portCallId].join('/');\n    return this.http.post(uri, null);\n  }\n  // Set port call status to completed\n  updatePortCallStatusCompleted(portCallId: number): Observable<any> {\n    const uri = [this.updatePortCallStatusCompletedUrl, portCallId].join('/');\n    return this.http.post(uri, null);\n  }\n  // Set port call status to cancelled\n  updatePortCallStatusCancelled(portCallId: number): Observable<any> {\n    const uri = [this.updatePortCallStatusCancelledUrl, portCallId].join('/');\n    return this.http.post(uri, null);\n  }\n  // Set port call status to draft\n  updatePortCallStatusDraft(portCallId: number) {\n    const uri = [this.updatePortCallStatusDraftUrl, portCallId].join('/');\n    return this.http\n      .put(uri, null)\n      .map(res => res);\n  }\n\n  // Sets port call status to deleted\n  deletePortCallDraft(portCallId: number): Observable<PortCallModel> {\n    const uri: string = [this.portCallUrl, 'delete', portCallId].join('/');\n    return this.http.put<PortCallModel>(uri, null);\n  }\n  // Get methods\n  getPortCallById(portCallId: number): Observable<PortCallModel> {\n    const uri: string = [this.portCallUrl, portCallId].join('/');\n\n    return this.http.get<PortCallModel>(uri);\n  }\n\n  getPortCallsByUserId(userId: number): Observable<PortCallModel[]> {\n    const uri: string = [this.portCallUserUrl, userId].join('/');\n    return this.http.get<PortCallModel[]>(uri);\n  }\n\n  // SAVE DETAILS\n  saveDetails(details: PortCallDetailsModel, purposes: any, otherName: string): Observable<PortCallDetailsModel> {\n    return this.http.post<PortCallDetailsModel>(this.detailsUrl, details);\n  }\n\n  savePurposesForPortCall(pcId: number, purposes: any, otherName: string) {\n    if (purposes == null || purposes.length === 0) {\n      const uri = [this.purposePortCallUrl, pcId.toString()].join('/');\n      this.http\n        .delete(uri)\n        .subscribe(removePurposeResponse => {\n          if (removePurposeResponse) {\n            this.portCallDetailsService.setDetailsPristine(true);\n          }\n        });\n    } else {\n      const pcHasPurposeList = purposes.map(p => {\n        return {\n          portCallId: pcId,\n          portCallPurposeId: p.portCallPurposeId,\n          purposeIfUnknown: p.name === 'Other' ? otherName : null\n        };\n      });\n      this.http\n        .put(this.purposePortCallUrl, pcHasPurposeList)\n\n        .subscribe(purposeResponse => {\n          if (purposeResponse) {\n            this.portCallDetailsService.setDetailsPristine(true);\n          }\n        });\n    }\n  }\n\n  /* * * * * * * * * * *\n   *                   *\n   *  == CLEARANCE ==  *\n   *                   *\n   * * * * * * * * * * */\n\n  setClearance(data) {\n    this.clearanceDataSource.next(data);\n  }\n\n  // Clearance agencies list\n\n  setClearanceListData(data) {\n    this.clearanceListDataSource.next(data);\n  }\n\n  saveClearance(clearanceModel: any) {\n    this.http\n      .put(this.clearanceUrl, clearanceModel)\n      .subscribe(\n        data => {\n        },\n        error => {\n          console.log('ERROR: ', error);\n        }\n      );\n  }\n\n  getClearanceListForPortCall(portCallId: number): Observable<any> {\n    const uri: string = [this.clearancePortCallUrl, portCallId].join('/');\n    return this.http.get(uri);\n  }\n\n  // REGISTER CLEARANCE AGENCIES FOR NEW PORT CALL\n  registerClearanceAgenciesForPortCall(portCall: PortCallModel) {\n    this.http\n      .post(this.clearanceUrl, portCall)\n      .subscribe(clearanceData => {\n        this.clearanceListDataSource.next(clearanceData);\n      });\n  }\n\n  // Wipe methods\n  wipeServiceData() {\n    this.portCallDataSource.next(null);\n    this.portCallIdSource.next(null);\n    this.shipDataSource.next(null);\n    this.locationDataSource.next(null);\n    this.etaSource.next(null);\n    this.etdSource.next(null);\n    this.prevLocationDataSource.next(null);\n    this.prevEtdSource.next(null);\n    this.nextLocationDataSource.next(null);\n    this.nextEtaSource.next(null);\n    this.clearanceListDataSource.next(null);\n    this.createdByUserDataSource.next(null);\n    // Details\n    this.portCallDetailsService.wipeDetailsData();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class PurposeService {\n  private purposeUrl = 'api/purpose';\n\n  constructor(private http: HttpClient) { }\n\n  getPurposes(): Observable<any> {\n    return this.http.get(this.purposeUrl);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/purpose.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class SearchService {\n  constructor(private http: HttpClient) { }\n\n  public search(baseUrl: string, term: string, amount = 10, typeId = -1): Observable<any> {\n    const encodedTerm: string = encodeURIComponent(term);\n    let uri = '';\n    if (typeId < 0) {\n      uri = [baseUrl, encodedTerm, amount].join('/');\n    } else {\n      uri = [baseUrl, encodedTerm, amount, typeId].join('/');\n    }\n    return this.http.get(uri);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/search.service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Http, RequestOptions } from '@angular/http';\nimport 'rxjs/add/observable/of';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { SHIP_STATUSES } from '../constants/enumValues';\nimport { InternationalShipSecurityCertificateModel, ShipContactModel } from '../models/';\nimport { AuthRequest } from './auth.request.service';\n\n@Injectable()\nexport class ShipService {\n  private shipUrl = 'api/ship';\n  private shipTypeUrl = 'api/shiptype';\n  private hullTypeUrl = 'api/shiphulltype';\n  private lengthTypeUrl = 'api/shiplengthtype';\n  private breadthTypeUrl = 'api/shipbreadthtype';\n  private powerTypeUrl = 'api/shippowertype';\n  private shipSourceInternalUrl = 'api/shipsource/shipSourceInternal';\n  private shipStatusListUrl = 'api/shipstatus';\n  private contactListShipUrl = 'api/shipcontact/ship';\n  private shipContactListUrl = 'api/shipcontact/list';\n  private isscUrl = 'api/internationalShipSecurityCertificate';\n\n  private shipDataSource = new BehaviorSubject<any>(null);\n  shipData$ = this.shipDataSource.asObservable();\n\n  private shipSearchDataSource = new BehaviorSubject<any>(null);\n  shipSearchData$ = this.shipSearchDataSource.asObservable();\n\n  private validIsscDataSource = new BehaviorSubject<boolean>(false);\n  validIsscData$ = this.validIsscDataSource.asObservable();\n\n  private isscPristineDataSource = new BehaviorSubject<boolean>(true);\n  isscPristineData$ = this.isscPristineDataSource.asObservable();\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  registerShip(newShip: any): Observable<any> {\n    return this.http\n      .post(this.shipUrl, newShip);\n  }\n\n  getShip(id: number): Observable<any> {\n    const uri = [this.shipUrl, id].join('/');\n    return this.http.get(uri);\n  }\n\n  setValidIsscData(data: boolean) {\n    this.validIsscDataSource.next(data);\n  }\n\n  setIsscPristineData(data: boolean) {\n    this.isscPristineDataSource.next(data);\n  }\n\n  setShipData(data) {\n    this.shipDataSource.next(data);\n  }\n\n  setShipSearchData(data) {\n    this.shipSearchDataSource.next(data);\n  }\n\n  updateShip(ship: any) {\n    return this.http.put(this.shipUrl, ship);\n  }\n\n  saveISSC(issc: InternationalShipSecurityCertificateModel): Observable<InternationalShipSecurityCertificateModel> {\n    const uri = this.isscUrl;\n    return this.http.put<InternationalShipSecurityCertificateModel>(uri, issc);\n  }\n\n  updateShipISSC(shipId: number, isscId: number) {\n    const uri = [this.shipUrl, shipId, 'internationalShipSecurityCertificate/isscId'].join('/');\n    return this.http.put(uri, isscId);\n  }\n\n  saveShipContactList(shipContactList: ShipContactModel[]) {\n    return this.http.post(this.shipContactListUrl, shipContactList);\n  }\n\n  getShipTypes(): Observable<any> {\n    return this.http.get(this.shipTypeUrl);\n  }\n\n  getHullTypes(): Observable<any> {\n    return this.http.get(this.hullTypeUrl);\n  }\n\n  getLengthTypes(): Observable<any> {\n    return this.http.get(this.lengthTypeUrl);\n  }\n\n  getBreadthTypes(): Observable<any> {\n    return this.http.get(this.breadthTypeUrl);\n  }\n\n  getPowerTypes(): Observable<any> {\n    return this.http.get(this.powerTypeUrl);\n  }\n\n  getInternalShipSource(): Observable<any> {\n    return this.http.get(this.shipSourceInternalUrl);\n  }\n\n  getShipStatusList(): Observable<any> {\n    return this.http.get(this.shipStatusListUrl);\n  }\n\n  getContactList(shipId: number): Observable<any> {\n    const uri: string = [this.contactListShipUrl, shipId].join('/');\n    return this.http.get(uri);\n  }\n\n  getShipStatusByEnum(statusEnum: SHIP_STATUSES): Observable<any> {\n    const uri = [this.shipStatusListUrl, 'enumValue', statusEnum].join('/');\n    return this.http.get(uri);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/ship.service.ts","import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { TokenQueryModel } from '../models/token-query-model';\n\n@Injectable()\nexport class UriQueryService {\n\n  constructor() { }\n\n  private tokenQueryModelDataSource = new BehaviorSubject<TokenQueryModel>(null);\n  tokenQueryModelData$ = this.tokenQueryModelDataSource.asObservable();\n\n  setTokenQueryModel(tokenQueryModel: TokenQueryModel) {\n    this.tokenQueryModelDataSource.next(tokenQueryModel);\n  }\n\n  getTokenQueryModel(queryParams: Params): TokenQueryModel {\n    // console.log({hasProperties: this.hasProperties(queryParams)});\n    if (this.hasProperties(queryParams) && !this.anyParamsNull(queryParams)) {\n      return new TokenQueryModel(queryParams['userId'], queryParams['token']);\n    }\n    return null;\n  }\n\n  private anyParamsNull(queryParams: Params): boolean {\n    return this.paramNull(queryParams.userId) && this.paramNull(queryParams.token);\n  }\n  private paramNull(param: any): boolean {\n    return !param || param === '';\n  }\n\n  private hasProperties(queryParams: Params): boolean {\n    /* console.log({\n      'userId': queryParams['userId'],\n      'token': queryParams['token']\n    });\n    console.log({\n      'hasUserId': !!queryParams['userId'],\n      'hasToken': !!queryParams['token']\n    }); */\n    return !!queryParams['userId'] && !!queryParams['token'];\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/uri-query.service.ts","import { Injectable } from '@angular/core';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\n\n@Injectable()\nexport class ValidateDateTimeService {\n\n  constructor() { }\n\n  checkDocumentDatesError(beforeDateTime, afterDateTime): Boolean {\n    // The dates are in the Date format\n    if (beforeDateTime && afterDateTime) {\n\n      if (beforeDateTime.date && beforeDateTime.time && afterDateTime.date && afterDateTime.time) {\n        // TODO: Insert time for DateTimePickerComponent\n        beforeDateTime = beforeDateTime != null ? this.getNgbDateTimeFormat(beforeDateTime).date : null;\n        afterDateTime = afterDateTime != null ? this.getNgbDateTimeFormat(afterDateTime).date : null;\n      } else {\n        beforeDateTime = beforeDateTime != null ? this.getNgbDateFormat(beforeDateTime) : null;\n        afterDateTime = afterDateTime != null ? this.getNgbDateFormat(afterDateTime) : null;\n      }\n\n      if (afterDateTime.equals(beforeDateTime) || afterDateTime.before(beforeDateTime)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  getNgbDateFormat(date): NgbDate {\n    const newDate = new NgbDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\n    return newDate;\n  }\n\n  getNgbDateTimeFormat(dateTime) {\n    const newDate = new NgbDate(dateTime.date.getFullYear(), dateTime.date.getMonth() + 1, dateTime.date.getDate());\n    const newTime = new NgbTime(dateTime.time);\n    const newDateTime = {date: newDate, time: newTime};\n    return newDateTime;\n  }\n\n  dateBeforeToday(date): Boolean {\n    const newDate = this.getNgbDateFormat(date);\n    const today = this.getNgbDateFormat(new Date());\n    return newDate.before(today);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/validate-date-time.service.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { ConfirmationModalComponent } from './components/confirmation-modal/confirmation-modal.component';\nimport { CargoInfoTableComponent } from './components/confirmation-view/cargo-info-table/cargo-info-table.component';\nimport { CargoListingTableComponent } from './components/confirmation-view/cargo-listing-table/cargo-listing-table.component';\nimport { ClearancesComponent } from './components/confirmation-view/clearances/clearances.component';\nimport { ConfirmationViewComponent } from './components/confirmation-view/confirmation-view.component';\nimport { CrewInfoTableComponent } from './components/confirmation-view/crew-info-table/crew-info-table.component';\nimport { CrewListingTableComponent } from './components/confirmation-view/crew-listing-table/crew-listing-table.component';\nimport { PassengerInfoTableComponent } from './components/confirmation-view/passenger-info-table/passenger-info-table.component';\nimport { PassengerListingTableComponent } from './components/confirmation-view/passenger-listing-table/passenger-listing-table.component';\nimport { PortCallDetailsComponent } from './components/confirmation-view/port-call-details/port-call-details.component';\nimport { SelectedPurposesComponent } from './components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component';\nimport { ShipStoresInfoTableComponent } from './components/confirmation-view/ship-stores-info-table/ship-stores-info-table.component';\nimport { ShipStoresListingTableComponent } from './components/confirmation-view/ship-stores-listing-table/ship-stores-listing-table.component';\nimport { UserInfoTableComponent } from './components/confirmation-view/user-info-table/user-info-table.component';\nimport { ContactSelectComponent } from './components/contact-select/contact-select.component';\nimport { CountrySelectComponent } from './components/country-select/country-select.component';\nimport { DatePickerComponent } from './components/date-picker/date-picker.component';\nimport { DateTimePickerComponent } from './components/date-time-picker/date-time-picker.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component';\nimport { IsscComponent } from './components/issc/issc.component';\nimport { RsoSelectComponent } from './components/issc/rso-select/rso-select.component';\nimport { LocationInfoTableComponent } from './components/location-info-table/location-info-table.component';\nimport { LocationTimeInfoTableComponent } from './components/location-time-info-table/location-time-info-table.component';\nimport { OrganizationInfoTableComponent } from './components/organization-info-table/organization-info-table.component';\nimport { OrganizationButtonRowComponent } from './components/organization-smart-table/organization-button-row/organization-button-row.component';\nimport { OrganizationSmartTableComponent } from './components/organization-smart-table/organization-smart-table.component';\nimport { PrevAndNextPocTableComponent } from './components/prev-and-next-poc-table/prev-and-next-poc-table.component';\nimport { SearchCountryComponent } from './components/search-country/search-country.component';\nimport { SearchLocationComponent } from './components/search-location/search-location.component';\nimport { SearchOrganizationComponent } from './components/search-organization/search-organization.component';\nimport { SearchShipFlagCodeComponent } from './components/search-ship-flag-code/search-ship-flag-code.component';\nimport { SearchShipComponent } from './components/search-ship/search-ship.component';\nimport { SearchUserComponent } from './components/search-user/search-user.component';\nimport { SelectShipContactComponent } from './components/select-ship-contact/select-ship-contact.component';\nimport { SelectedContactMediumsComponent } from './components/selected-contact-mediums/selected-contact-mediums.component';\nimport { ShipInfoTableComponent } from './components/ship-info-table/ship-info-table.component';\nimport { ShipButtonRowComponent } from './components/ship-smart-table/ship-button-row/ship-button-row.component';\nimport { ShipSmartTableComponent } from './components/ship-smart-table/ship-smart-table.component';\nimport { SsnBgComponent } from './components/ssn-bg/ssn-bg.component';\nimport { SsnCardComponent } from './components/ssn-card/ssn-card.component';\nimport { SsnTableComponent } from './components/ssn-table/ssn-table.component';\nimport { TableCardComponent } from './components/table-card/table-card.component';\nimport { UserButtonRowComponent } from './components/user-smart-table/user-button-row/user-button-row.component';\nimport { UserSmartTableComponent } from './components/user-smart-table/user-smart-table.component';\nimport { DbConnectionService } from './services/db-connection.service';\nimport { ErrorService } from './services/error.service';\nimport { LocationService } from './services/location.service';\nimport { OrganizationService } from './services/organization.service';\nimport { ShipService } from './services/ship.service';\nimport { ExtendedAlphaNumericValidator } from './utils/custom-validators/extended-alpha-numeric-validator.directive';\nimport { IntegerValidator } from './utils/custom-validators/integer-validator.directive';\nimport { NumberValidator } from './utils/custom-validators/number-validator.directive';\nimport { PositiveNumberValidator } from './utils/custom-validators/positive-number-validator.directive';\nimport { DpgListingTableComponent } from './components/confirmation-view/dpg-listing-table/dpg-listing-table.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    Ng2SmartTableModule,\n    NgbModule,\n    NgSelectModule\n  ],\n  declarations: [\n    ExtendedAlphaNumericValidator,\n    ClearancesComponent,\n    ConfirmationModalComponent,\n    ConfirmationViewComponent,\n    ContactSelectComponent,\n    DateTimePickerComponent,\n    IntegerValidator,\n    LocationInfoTableComponent,\n    LocationTimeInfoTableComponent,\n    NumberValidator,\n    OrganizationButtonRowComponent,\n    OrganizationSmartTableComponent,\n    PortCallDetailsComponent,\n    PositiveNumberValidator,\n    PrevAndNextPocTableComponent,\n    SearchCountryComponent,\n    SearchLocationComponent,\n    SearchOrganizationComponent,\n    SearchShipComponent,\n    SearchUserComponent,\n    SearchShipFlagCodeComponent,\n    SelectedContactMediumsComponent,\n    SelectedPurposesComponent,\n    SelectShipContactComponent,\n    ShipButtonRowComponent,\n    UserButtonRowComponent,\n    ShipInfoTableComponent,\n    ShipSmartTableComponent,\n    UserSmartTableComponent,\n    SsnBgComponent,\n    SsnCardComponent,\n    SsnTableComponent,\n    TableCardComponent,\n    DateTimePickerComponent,\n    SsnTableComponent,\n    PrevAndNextPocTableComponent,\n    SearchShipFlagCodeComponent,\n    ContactSelectComponent,\n    FeedbackComponent,\n    CargoInfoTableComponent,\n    UserInfoTableComponent,\n    ShipStoresInfoTableComponent,\n    CrewInfoTableComponent,\n    PassengerInfoTableComponent,\n    IsscComponent,\n    DatePickerComponent,\n    CountrySelectComponent,\n    RsoSelectComponent,\n    OrganizationInfoTableComponent,\n    CrewListingTableComponent,\n    CargoListingTableComponent,\n    PassengerListingTableComponent,\n    ShipStoresListingTableComponent,\n    DpgListingTableComponent\n  ],\n  exports: [\n    ExtendedAlphaNumericValidator,\n    ConfirmationModalComponent,\n    ConfirmationViewComponent,\n    ContactSelectComponent,\n    DateTimePickerComponent,\n    IntegerValidator,\n    LocationInfoTableComponent,\n    LocationTimeInfoTableComponent,\n    NumberValidator,\n    OrganizationSmartTableComponent,\n    PositiveNumberValidator,\n    PrevAndNextPocTableComponent,\n    SearchCountryComponent,\n    SearchLocationComponent,\n    SearchOrganizationComponent,\n    SearchShipComponent,\n    SearchUserComponent,\n    SearchShipFlagCodeComponent,\n    SelectedContactMediumsComponent,\n    SelectShipContactComponent,\n    ShipInfoTableComponent,\n    ShipSmartTableComponent,\n    UserSmartTableComponent,\n    SsnBgComponent,\n    SsnCardComponent,\n    SsnTableComponent,\n    TableCardComponent,\n    DateTimePickerComponent,\n    SsnTableComponent,\n    PrevAndNextPocTableComponent,\n    SearchShipFlagCodeComponent,\n    ContactSelectComponent,\n    FeedbackComponent,\n    FeedbackComponent,\n    IsscComponent,\n    OrganizationInfoTableComponent,\n    CrewListingTableComponent,\n    CargoListingTableComponent,\n    PassengerListingTableComponent\n  ],\n  providers: [\n    LocationService,\n    OrganizationService,\n    ShipService,\n    DbConnectionService,\n    ErrorService\n  ],\n  entryComponents: [\n    ConfirmationModalComponent,\n    ShipButtonRowComponent,\n    UserButtonRowComponent,\n    OrganizationButtonRowComponent,\n  ]\n})\nexport class SharedModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import { BaseService } from 'app/shared/services/base.service';\nimport { ConfigService } from './config.service';\n\nexport abstract class BaseRequest extends BaseService {\n  protected baseUrl: string;\n\n  constructor(\n    private configService: ConfigService\n  ) {\n    super();\n    this.baseUrl = this.configService.getApiURI();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/base.request.ts","// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/shared/utils/config.service.ts\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ConfigService {\n  _apiURI: string;\n\n  constructor() {\n    this._apiURI = 'api';\n  }\n\n  getApiURI() {\n    return this._apiURI;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/config.service.ts","import { Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n  selector:\n    // tslint:disable-next-line:directive-selector\n    '[extendedAlphanumericValidator][formControlName],[extendedAlphanumericValidator][formControl],[extendedAlphanumericValidator][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ExtendedAlphaNumericValidator),\n      multi: true\n    }\n  ]\n})\nexport class ExtendedAlphaNumericValidator implements Validator {\n  constructor() {}\n\n  validate(control: AbstractControl): { [key: string]: any } {\n    if (control.value && !/^[a-åA-Å0-9 ]+$/i.test(control.value)) {\n        return { invalidAlphaNumeric: true };\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/extended-alpha-numeric-validator.directive.ts","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n  selector:\n    // tslint:disable-next-line:directive-selector\n    '[integerValidator][formControlName],[integerValidator][formControl],[integerValidator][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => IntegerValidator),\n      multi: true\n    }\n  ]\n})\nexport class IntegerValidator implements Validator {\n  constructor() {}\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    if (\n      c.value !== undefined &&\n      (isNaN(c.value) || c.value - Math.floor(c.value) !== 0)\n    ) {\n      return { notIntegerError: true };\n    }\n\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/integer-validator.directive.ts","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n  selector:\n    // tslint:disable-next-line:directive-selector\n    '[numberValidator][formControlName],[numberValidator][formControl],[numberValidator][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => NumberValidator),\n      multi: true\n    }\n  ]\n})\nexport class NumberValidator implements Validator {\n  constructor() {}\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    if (c.value !== undefined && c.value === null) {\n      return { notNumberError: true };\n    }\n\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/number-validator.directive.ts","import { Attribute, Directive, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n  selector:\n    // tslint:disable-next-line:directive-selector\n    '[positiveNumberValidator][formControlName],[positiveNumberValidator][formControl],[positiveNumberValidator][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PositiveNumberValidator),\n      multi: true\n    }\n  ]\n})\nexport class PositiveNumberValidator implements Validator {\n  constructor() {}\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    if (c.value !== undefined && (isNaN(c.value) || c.value < 0)) {\n      return { notPositiveNumberError: true };\n    }\n\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/positive-number-validator.directive.ts","import { Injectable } from '@angular/core';\nimport { BrowserXhr, Request, Response, ResponseOptions, XHRBackend, XSRFStrategy } from '@angular/http';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/catch';\nimport { Observable } from 'rxjs/Observable';\n\n// Nicolas Henneaux - edited Dec 4 '17 at 20:54\n// http://stackoverflow.com/questions/34934009/handling-401s-globally-with-angular-2\n@Injectable()\nexport class AuthenticateXHRBackend extends XHRBackend {\n\n    constructor(\n        _browserXhr: BrowserXhr,\n        _baseResponseOptions: ResponseOptions,\n        _xsrfStrategy: XSRFStrategy\n    ) {\n        super(_browserXhr, _baseResponseOptions, _xsrfStrategy);\n    }\n\n    createConnection(request: Request) {\n        const xhrConnection = super.createConnection(request);\n        xhrConnection.response = xhrConnection.response.catch((error: Response) => {\n            if ((error.status === 401 || error.status === 403) && (window.location.href.match(/\\?/g) || []).length < 2) {\n\n                /* Great solution for bundling with Auth Guard!\n                1. Auth Guard checks authorized user (e.g. by looking into LocalStorage).\n                2. On 401/403 response you clean authorized user for the Guard (e.g. by removing coresponding parameters in LocalStorage).\n                3. As at this early stage you can't access the Router for forwarding to the login page,\n                4. refreshing the same page will trigger the Guard checks, which will forward you to the login screen */\n                localStorage.removeItem('auth_token');\n                localStorage.removeItem('user_claims');\n                const loc = window.location;\n                const baseUrl = loc.protocol + '//' + loc.hostname + (loc.port ? (':' + loc.port) : '') + '/';\n                window.location.href = baseUrl + '?' + new Date().getMilliseconds();\n                // window.location.href = window.location.href + '?' + new Date().getMilliseconds();\n            }\n            return Observable.throw(error);\n        });\n        return xhrConnection;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/authenticate-xhr.backend.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\n// import { Observable } from 'rxjs';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\n\n\n@Injectable()\nexport class SelectivePreloadingStrategy implements PreloadingStrategy {\n  preloadedModules: string[] = [];\n\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\n    if (route.data && route.data['preload']) {\n      // add the route path to the preloaded module array\n      this.preloadedModules.push(route.path);\n\n      // log the route path to the console\n\n      return load();\n    } else {\n      return of(null);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/selective-preloading-strategy.ts"],"sourceRoot":"webpack:///"}