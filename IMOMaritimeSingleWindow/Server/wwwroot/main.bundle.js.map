{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/guards/auth.guard.ts","./src/app/auth/guards/error.guard.ts","./src/app/auth/guards/login-auth.guard.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/main-content/content-container/basis-data/basis-data.module.ts","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.ts","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.ts","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.ts","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.ts","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.ts","./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.css","./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.html","./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.ts","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.ts","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.ts","./src/app/main-content/content-container/content-container.component.css","./src/app/main-content/content-container/content-container.component.html","./src/app/main-content/content-container/content-container.component.ts","./src/app/main-content/content-container/content-container.module.ts","./src/app/main-content/content-container/port-call/clearance/clearance.component.css","./src/app/main-content/content-container/port-call/clearance/clearance.component.html","./src/app/main-content/content-container/port-call/clearance/clearance.component.ts","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.ts","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.ts","./src/app/main-content/content-container/port-call/confirmation/confirmation.module.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.ts","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.ts","./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.css","./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.html","./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.ts","./src/app/main-content/content-container/port-call/overview/overview.component.css","./src/app/main-content/content-container/port-call/overview/overview.component.html","./src/app/main-content/content-container/port-call/overview/overview.component.ts","./src/app/main-content/content-container/port-call/port-call.component.css","./src/app/main-content/content-container/port-call/port-call.component.html","./src/app/main-content/content-container/port-call/port-call.component.ts","./src/app/main-content/content-container/port-call/port-call.module.ts","./src/app/main-content/content-container/port-call/registration/forms/forms.component.css","./src/app/main-content/content-container/port-call/registration/forms/forms.component.html","./src/app/main-content/content-container/port-call/registration/forms/forms.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.ts","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.ts","./src/app/main-content/content-container/port-call/registration/registration.component.css","./src/app/main-content/content-container/port-call/registration/registration.component.html","./src/app/main-content/content-container/port-call/registration/registration.component.ts","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.ts","./src/app/main-content/footer/footer.component.css","./src/app/main-content/footer/footer.component.html","./src/app/main-content/footer/footer.component.ts","./src/app/main-content/header/header.component.css","./src/app/main-content/header/header.component.html","./src/app/main-content/header/header.component.ts","./src/app/main-content/main-content.component.css","./src/app/main-content/main-content.component.html","./src/app/main-content/main-content.component.ts","./src/app/shared/components/confirmation-modal/confirmation-modal.component.css","./src/app/shared/components/confirmation-modal/confirmation-modal.component.html","./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","./src/app/shared/components/confirmation-view/clearances/clearances.component.css","./src/app/shared/components/confirmation-view/clearances/clearances.component.html","./src/app/shared/components/confirmation-view/clearances/clearances.component.ts","./src/app/shared/components/confirmation-view/confirmation-view.component.css","./src/app/shared/components/confirmation-view/confirmation-view.component.html","./src/app/shared/components/confirmation-view/confirmation-view.component.ts","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.ts","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.ts","./src/app/shared/components/location-info-table/location-info-table.component.css","./src/app/shared/components/location-info-table/location-info-table.component.html","./src/app/shared/components/location-info-table/location-info-table.component.ts","./src/app/shared/components/location-smart-table/location-button-row/location-button-row.component.css","./src/app/shared/components/location-smart-table/location-button-row/location-button-row.component.html","./src/app/shared/components/location-smart-table/location-button-row/location-button-row.component.ts","./src/app/shared/components/location-smart-table/location-smart-table.component.css","./src/app/shared/components/location-smart-table/location-smart-table.component.html","./src/app/shared/components/location-smart-table/location-smart-table.component.ts","./src/app/shared/components/location-time-info-table/location-time-info-table.component.css","./src/app/shared/components/location-time-info-table/location-time-info-table.component.html","./src/app/shared/components/location-time-info-table/location-time-info-table.component.ts","./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.css","./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.html","./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.ts","./src/app/shared/components/organization-smart-table/organization-smart-table.component.css","./src/app/shared/components/organization-smart-table/organization-smart-table.component.html","./src/app/shared/components/organization-smart-table/organization-smart-table.component.ts","./src/app/shared/components/search-location/search-location.component.css","./src/app/shared/components/search-location/search-location.component.html","./src/app/shared/components/search-location/search-location.component.ts","./src/app/shared/components/search-organization/search-organization.component.css","./src/app/shared/components/search-organization/search-organization.component.html","./src/app/shared/components/search-organization/search-organization.component.ts","./src/app/shared/components/search-ship/search-ship.component.css","./src/app/shared/components/search-ship/search-ship.component.html","./src/app/shared/components/search-ship/search-ship.component.ts","./src/app/shared/components/select-ship-contact/select-ship-contact.component.css","./src/app/shared/components/select-ship-contact/select-ship-contact.component.html","./src/app/shared/components/select-ship-contact/select-ship-contact.component.ts","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.ts","./src/app/shared/components/ship-info-table/ship-info-table.component.css","./src/app/shared/components/ship-info-table/ship-info-table.component.html","./src/app/shared/components/ship-info-table/ship-info-table.component.ts","./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.css","./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.html","./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.ts","./src/app/shared/components/ship-smart-table/ship-smart-table.component.css","./src/app/shared/components/ship-smart-table/ship-smart-table.component.html","./src/app/shared/components/ship-smart-table/ship-smart-table.component.ts","./src/app/shared/components/ssn-bg/ssn-bg.component.css","./src/app/shared/components/ssn-bg/ssn-bg.component.html","./src/app/shared/components/ssn-bg/ssn-bg.component.ts","./src/app/shared/components/ssn-card/ssn-card.component.css","./src/app/shared/components/ssn-card/ssn-card.component.html","./src/app/shared/components/ssn-card/ssn-card.component.ts","./src/app/shared/components/table-card/table-card.component.css","./src/app/shared/components/table-card/table-card.component.html","./src/app/shared/components/table-card/table-card.component.ts","./src/app/shared/constants/content-names.ts","./src/app/shared/constants/location-properties.ts","./src/app/shared/constants/location-time-properties.ts","./src/app/shared/constants/menu-claims.ts","./src/app/shared/constants/organization-properties.ts","./src/app/shared/constants/organization-types.ts","./src/app/shared/constants/port-call-claims.ts","./src/app/shared/constants/port-call-status-types.ts","./src/app/shared/constants/search-amounts.ts","./src/app/shared/constants/ship-properties.ts","./src/app/shared/models/clearance-model.ts","./src/app/shared/models/location-model.ts","./src/app/shared/models/organization-model.ts","./src/app/shared/models/port-call-details-model.ts","./src/app/shared/models/port-call-model.ts","./src/app/shared/models/ship-contact-model.ts","./src/app/shared/models/ship-model.ts","./src/app/shared/models/user-model.ts","./src/app/shared/services/account.service.ts","./src/app/shared/services/auth-service.ts","./src/app/shared/services/auth.request.service.ts","./src/app/shared/services/base.service.ts","./src/app/shared/services/constants.service.ts","./src/app/shared/services/contact.service.ts","./src/app/shared/services/content.service.ts","./src/app/shared/services/db-connection.service.ts","./src/app/shared/services/location.service.ts","./src/app/shared/services/login.service.ts","./src/app/shared/services/organization.service.ts","./src/app/shared/services/port-call-overview.service.ts","./src/app/shared/services/port-call.service.ts","./src/app/shared/services/purpose.service.ts","./src/app/shared/services/search.service.ts","./src/app/shared/services/ship-flag-code.service.ts","./src/app/shared/services/ship.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/utils/base.request.ts","./src/app/shared/utils/config.service.ts","./src/app/shared/utils/custom-validators/integer-validator.directive.ts","./src/app/shared/utils/custom-validators/number-validator.directive.ts","./src/app/shared/utils/custom-validators/positive-number-validator.directive.ts","./src/authenticate-xhr.backend.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './auth/guards/auth.guard';\r\nimport { ErrorGuard } from './auth/guards/error.guard';\r\nimport { LoginAuthGuard } from './auth/guards/login-auth.guard';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MainContentComponent } from './main-content/main-content.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    canActivate: [LoginAuthGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    component: MainContentComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    // TODO: Make ErrorComponent\r\n    path: '**',\r\n    component: MainContentComponent,\r\n    canActivate: [ErrorGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      routes\r\n      //      { enableTracing: true } // <-- debugging purposes only\r\n    )\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\nexport const routedComponents = [MainContentComponent, LoginComponent];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \".page-content {\\r\\n    margin-bottom: -100px;\\r\\n}\\r\\n\\r\\n.footer-gap {\\r\\n    height: 100px;\\r\\n}\\r\\n\\r\\n/* Loading screen */\\r\\n\\r\\n#overlay {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    z-index: 1010;\\r\\n    background-color: rgba(255, 255, 255, 0.5);\\r\\n}\\r\\n\\r\\n#loading-box {\\r\\n    position: fixed;\\r\\n    left: 50%;\\r\\n    top: 50%;\\r\\n    height: 200px;\\r\\n    width: 400px;\\r\\n    margin-left: -200px;\\r\\n    margin-top: -100px;\\r\\n    z-index: 1011;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div id=\\\"overlay\\\" *ngIf=\\\"loadingScreen && loadingScreen.isLoading\\\">\\r\\n    <div id=\\\"loading-box\\\" class=\\\"text-center\\\">\\r\\n        <img *ngIf=\\\"loadingScreen.loadingIcon\\\" src='{{loadingIconPath}}{{loadingScreen.loadingIcon}}' />\\r\\n        <img *ngIf=\\\"!loadingScreen.loadingIcon\\\" src='{{loadingIconPath}}portcall.gif' />\\r\\n        <h1>{{ loadingScreen.loadingText | uppercase }}</h1>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-content\\\" [ngStyle]=\\\"{'min-height': clientHeight + 'px'}\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n    <div class=\\\"footer-gap\\\"></div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContentService } from './shared/services/content.service';\r\nimport { LoadingScreen } from './shared/interfaces/loading-screen.interface';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  clientHeight: number;\r\n\r\n  loadingIconPath = 'assets/images/animations/';\r\n  loadingScreen: LoadingScreen;\r\n\r\n  constructor(public contentService: ContentService) {\r\n    this.clientHeight = window.innerHeight;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contentService.loadingScreen$.subscribe(\r\n      loadingScreenData => {\r\n        if (loadingScreenData) {\r\n          this.loadingScreen = loadingScreenData;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule, XHRBackend } from '@angular/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { JwtHelperService, JwtModule } from '@auth0/angular-jwt';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthenticateXHRBackend } from '../authenticate-xhr.backend';\r\nimport { AppRoutingModule, routedComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './auth/guards/auth.guard';\r\nimport { ErrorGuard } from './auth/guards/error.guard';\r\nimport { LoginAuthGuard } from './auth/guards/login-auth.guard';\r\nimport { ContentContainerModule } from './main-content/content-container/content-container.module';\r\nimport { FooterComponent } from './main-content/footer/footer.component';\r\nimport { HeaderComponent } from './main-content/header/header.component';\r\nimport { AccountService } from './shared/services/account.service';\r\nimport { AuthService } from './shared/services/auth-service';\r\nimport { AuthRequest } from './shared/services/auth.request.service';\r\nimport { ConstantsService } from './shared/services/constants.service';\r\nimport { ContentService } from './shared/services/content.service';\r\nimport { LoginService } from './shared/services/login.service';\r\nimport { ConfigService } from './shared/utils/config.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    routedComponents,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    ContentContainerModule,\r\n    AppRoutingModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        whitelistedDomains: ['localhost:4200'],\r\n        blacklistedRoutes: ['localhost:4200/login']\r\n      }\r\n    }),\r\n    NgbModule.forRoot()\r\n  ],\r\n  providers: [\r\n    { provide: XHRBackend, useClass: AuthenticateXHRBackend },\r\n    ConfigService,\r\n    LoginService,\r\n    AccountService,\r\n    ContentService,\r\n    ConstantsService,\r\n    AuthService,\r\n    AuthRequest,\r\n    AuthGuard,\r\n    ErrorGuard,\r\n    LoginAuthGuard,\r\n    JwtHelperService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('auth_token');\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from 'app/shared/services/auth-service';\r\nimport { LoginService } from 'app/shared/services/login.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private loginService: LoginService\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n      if (!this.authService.hasToken()) {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      } else {\r\n        return this.authService.hasValidToken()\r\n        .map(tokenValid => {\r\n          if (!tokenValid) {\r\n            this.loginService.logout();\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/guards/auth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from 'app/shared/services/auth-service';\r\nimport { LoginService } from 'app/shared/services/login.service';\r\n\r\n@Injectable()\r\nexport class ErrorGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private loginService: LoginService\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n      if (!this.authService.hasToken()) {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      } else {\r\n        return this.authService.hasValidToken()\r\n        .map(tokenValid => {\r\n          if (!tokenValid) {\r\n            this.loginService.logout();\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n          } else {\r\n            // TODO: redirect to an error page\r\n            this.router.navigate(['']);\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/guards/error.guard.ts","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from 'app/shared/services/auth-service';\r\nimport { LoginService } from 'app/shared/services/login.service';\r\n\r\n@Injectable()\r\nexport class LoginAuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private loginService: LoginService\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n    if (!this.authService.hasToken()) {\r\n      return true;\r\n    } else {\r\n      return this.authService.hasValidToken()\r\n        .map(tokenValid => {\r\n          console.log(tokenValid);\r\n          if (tokenValid) {\r\n            this.router.navigate(['']);\r\n            return false;\r\n          } else {\r\n            /* User tries to access login route with an invalid token\r\n             * This is OK, just remove relevant variables from localStorage\r\n             * so user can receive a new token upon login. */\r\n            this.loginService.logout();\r\n            return true;\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/guards/login-auth.guard.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pt-5\\\">\\r\\n  <div class=\\\"jumbotron bg-ssn-light text-ssn\\\">\\r\\n    <div class=\\\"d-table mb-3 mx-auto\\\">\\r\\n      <div class=\\\"d-table-row\\\">\\r\\n        <div class=\\\"d-table-cell\\\">\\r\\n          <img src=\\\"assets/images/Flags/ag.png\\\" height=\\\"80px\\\">\\r\\n        </div>\\r\\n        <div class=\\\"d-table-cell px-3\\\">\\r\\n          <h2>IMO Maritime Single Window</h2>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"login(f)\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"email\\\" class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-2 col-lg-2\\\">Email address:</label>\\r\\n        <div class=\\\"col my-auto\\\">\\r\\n          <input id=\\\"email\\\" name=\\\"userName\\\" type=\\\"email\\\" class=\\\"form-control form-control-sm\\\" required placeholder=\\\"Enter email address\\\"\\r\\n            [(ngModel)]=\\\"credentials.userName\\\" #email=\\\"ngModel\\\" tmFocus>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"password\\\" class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-2 col-lg-2\\\">Password:</label>\\r\\n        <div class=\\\"col my-auto\\\">\\r\\n          <input id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" #pw class=\\\"form-control form-control-sm\\\" required placeholder=\\\"Enter password\\\"\\r\\n            [(ngModel)]=\\\"credentials.password\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" (click)=\\\"pw.select()\\\" class=\\\"btn btn-light\\\" [disabled]=\\\"f.invalid || isRequesting\\\">SIGN IN</button>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        <span>{{errors}}</span>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/account/login-form/login-form.component.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { Credentials } from 'app/shared/interfaces/credentials.interface';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { LoginService } from 'app/shared/services/login.service';\r\nimport 'rxjs/add/operator/finally';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  login_title = 'LOGIN';\r\n\r\n  brandNew: boolean;\r\n  errors: string;\r\n  isRequesting: boolean;\r\n  submitted = false;\r\n  credentials: Credentials = { userName: '', password: '' };\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private contentService: ContentService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private accountService: AccountService\r\n  ) { }\r\n\r\n  login({ value, valid }: { value: Credentials, valid: boolean }) {\r\n    this.submitted = true;\r\n    this.errors = '';\r\n    if (valid) {\r\n      this.isRequesting = true;\r\n      this.loginService.login(value.userName, value.password)\r\n        .finally(() => {\r\n          this.isRequesting = false;\r\n        })\r\n        .subscribe(result => {\r\n          // Login succeeded\r\n          if (result) {\r\n            // Set user claims observable so they are\r\n            // available for the entire application\r\n            this.accountService.getUserClaims()\r\n              // Navigate to root when done\r\n              .finally(() => {\r\n                this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n                this.router.navigate(['']);\r\n              })\r\n              .subscribe(claims => {\r\n                if (claims) {\r\n                  this.accountService.setUserClaims(claims);\r\n                  localStorage.setItem('user_claims', JSON.stringify(claims));\r\n                }\r\n              });\r\n          }\r\n          // Login failed\r\n        }, error => {\r\n          this.errors = error;\r\n          this.credentials.password = '';\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // subscribe to router event\r\n    this.activatedRoute.queryParams.subscribe(\r\n      (param: any) => {\r\n        this.brandNew = param['brandNew'];\r\n        // this.credentials.userName = param['userName'];\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { RegisterLocationComponent } from './location/register-location/register-location.component';\r\nimport { ViewLocationInfoComponent } from './location/view-location-info/view-location-info.component';\r\nimport { RegisterOrganizationComponent } from './organization/register-organization/register-organization.component';\r\nimport { ViewOrganizationInfoComponent } from './organization/view-organization-info/view-organization-info.component';\r\nimport { RegisterShipComponent } from './ship/register-ship/register-ship.component';\r\nimport { SearchShipFlagCodeComponent } from './ship/search-ship-flag-code/search-ship-flag-code.component';\r\nimport { ViewShipInfoComponent } from './ship/view-ship-info/view-ship-info.component';\r\nimport { RegisterUserComponent } from './user/register-user/register-user.component';\r\nimport { LocationService } from '../../../shared/services/location.service';\r\nimport { OrganizationService } from '../../../shared/services/organization.service';\r\nimport { ShipService } from '../../../shared/services/ship.service';\r\nimport { ContactService } from '../../../shared/services/contact.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    NgSelectModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    RegisterUserComponent,\r\n    RegisterShipComponent,\r\n    SearchShipFlagCodeComponent,\r\n    ViewShipInfoComponent,\r\n    RegisterOrganizationComponent,\r\n    ViewOrganizationInfoComponent,\r\n    RegisterLocationComponent,\r\n    ViewLocationInfoComponent,\r\n  ],\r\n  exports: [\r\n    RegisterUserComponent,\r\n    ViewShipInfoComponent,\r\n    RegisterShipComponent,\r\n    RegisterLocationComponent,\r\n    RegisterOrganizationComponent,\r\n    ViewOrganizationInfoComponent,\r\n    ViewLocationInfoComponent,\r\n  ],\r\n  providers: [\r\n    LocationService,\r\n    OrganizationService,\r\n    ShipService,\r\n    ContactService\r\n  ]\r\n})\r\nexport class BasisDataModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/basis-data.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css\n// module id = ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"{{ locationHeader }}\\\" icon=\\\"location.png\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Location Information\\\" icon=\\\"pax.png\\\">\\r\\n        <form>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-3\\\" for=\\\"location_type_dropdown\\\">Location Type</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div ngbDropdown>\\r\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"location_type_dropdown\\\" ngbDropdownToggle> {{ locationTypeDropdownString }}</button>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"location_type_dropdown\\\">\\r\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let locationType of locationTypeList\\\" (click)=\\\"selectLocationType(locationType)\\\">{{ locationType.name }}</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-3\\\" for=\\\"location_name\\\">Location Name</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"locationModel.name\\\" name=\\\"locationName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"location_name\\\"\\r\\n                    placeholder=\\\"Enter location name\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-3\\\" for=\\\"location_code\\\">Location Code</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"locationModel.locationCode\\\" name=\\\"locationCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"location_code\\\"\\r\\n                    placeholder=\\\"Enter location code\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\" *ngIf=\\\"!countrySelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-3\\\" for=\\\"country_select\\\">Country</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <ng-select id=\\\"country_select\\\" name=\\\"country_select\\\" [items]=\\\"countryList\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\"\\r\\n                    placeholder=\\\"Select country\\\" [(ngModel)]=\\\"selectedCountry\\\" (change)=\\\"selectCountry($event)\\\"></ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\" *ngIf=\\\"countrySelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-3\\\" for=\\\"country\\\">Country</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input id=\\\"country\\\" name=\\\"country\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"selectedCountry.name\\\" disabled=\\\"true\\\"\\r\\n                    />\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"deselectCountry()\\\">\\r\\n                        <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-3\\\" for=\\\"location_post_code\\\">Post Code</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"locationModel.postCode\\\" name=\\\"locationPostCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"location_post_code\\\"\\r\\n                    placeholder=\\\"Enter location post code\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <app-ssn-card header='{{ confirmHeader }}' icon=\\\"checkmark.png\\\">\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"!(locationTypeSelected && locationModel.name && countrySelected)\\\">\\r\\n            <p *ngIf=\\\"!locationTypeSelected\\\" class=\\\"no-wrap mb-0\\\">Location type not selected.</p>\\r\\n            <p *ngIf=\\\"!locationModel.name\\\" class=\\\"no-wrap mb-0\\\">Location name not set.</p>\\r\\n            <p *ngIf=\\\"!countrySelected\\\" class=\\\"no-wrap\\\">Country not selected.</p>\\r\\n            <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n              <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"locationTypeSelected && locationModel.name && countrySelected\\\">\\r\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerLocation()\\\">\\r\\n              <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\r\\n          </div>\\r\\n        </app-ssn-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html\n// module id = ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { LocationModel } from 'app/shared/models/location-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\n\r\nconst RESULT_SUCCESS = 'Location was successfully saved to the database.';\r\nconst RESULT_FAILURE = 'There was a problem when trying to save the location to the database. Please try again later.';\r\n\r\n@Component({\r\n  selector: 'app-register-location',\r\n  templateUrl: './register-location.component.html',\r\n  styleUrls: ['./register-location.component.css'],\r\n  providers: [LocationModel]\r\n})\r\nexport class RegisterLocationComponent implements OnInit {\r\n  newLocation: boolean;\r\n  locationHeader: string;\r\n  confirmHeader: string;\r\n  confirmButtonTitle: string;\r\n  locationTypeList: any[];\r\n  locationTypeSelected: boolean;\r\n  selectedLocationType: any;\r\n  locationTypeDropdownString = 'Select location type';\r\n\r\n  countryList: any[];\r\n  countrySelected = false;\r\n  selectedCountry: any;\r\n  countrySearchFailed = false;\r\n\r\n\r\n  constructor(public locationModel: LocationModel, private locationService: LocationService,\r\n    private contentService: ContentService, private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.locationService.locationData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.newLocation = false;\r\n          this.locationHeader = 'Edit Location';\r\n          this.confirmHeader = 'Confirm Location Changes';\r\n          this.confirmButtonTitle = 'Apply Changes';\r\n          this.locationModel = data;\r\n          this.selectedCountry = this.locationModel.country;\r\n          this.countrySelected = true;\r\n          this.selectedLocationType = this.locationModel.locationType;\r\n          this.locationTypeSelected = true;\r\n          this.locationTypeDropdownString = this.selectedLocationType.name;\r\n        } else {\r\n          this.newLocation = true;\r\n          this.locationHeader = 'Register New Location';\r\n          this.confirmHeader = 'Confirm Location Registration';\r\n          this.confirmButtonTitle = 'Register Location';\r\n        }\r\n      }\r\n    );\r\n    this.locationService.getLocationTypes().subscribe(\r\n      results => {\r\n        this.locationTypeList = results;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    this.locationService.getCountries().subscribe(\r\n      results => {\r\n        this.countryList = results;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  selectCountry($event) {\r\n    this.selectedCountry = $event;\r\n    this.locationModel.countryId = $event.countryId;\r\n    this.countrySelected = true;\r\n  }\r\n  deselectCountry() {\r\n    this.selectedCountry = null;\r\n    this.locationModel.country = null;\r\n    this.locationModel.countryId = null;\r\n    this.selectedCountry = null;\r\n    this.countrySelected = false;\r\n  }\r\n\r\n  selectLocationType(locationType: any) {\r\n    this.locationModel.locationTypeId = locationType.locationTypeId;\r\n    this.selectedLocationType = locationType;\r\n    this.locationTypeDropdownString = locationType.name;\r\n    this.locationTypeSelected = true;\r\n  }\r\n\r\n  registerLocation() {\r\n    if (this.newLocation) {\r\n      this.locationService.registerLocation(this.locationModel).subscribe(\r\n        result => {\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\r\n        }, error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        }\r\n      );\r\n    } else {\r\n      this.locationService.updateLocation(this.locationModel).subscribe(\r\n        result => {\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\r\n        }, error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.LOCATIONS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\r\\n    <app-ssn-card header='Register New Location' icon='location.png'>\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewLocation()\\\">Register New Location</button>\\r\\n      </div>\\r\\n    </app-ssn-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-ssn-card header=\\\"Location Search\\\" icon=\\\"pax.png\\\">\\r\\n  <div *ngIf=\\\"!locationFound\\\">\\r\\n    <app-search-location [showDropdown]=false></app-search-location>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <div>\\r\\n    <app-location-smart-table></app-location-smart-table>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-location-info',\r\n  templateUrl: './view-location-info.component.html',\r\n  styleUrls: ['./view-location-info.component.css']\r\n})\r\nexport class ViewLocationInfoComponent implements OnInit {\r\n\r\n  locationFound = false;\r\n\r\n  deselectLocation() {\r\n    this.locationFound = false;\r\n    this.locationService.setLocationData(null);\r\n  }\r\n\r\n  editLocation() {\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_LOCATION);\r\n  }\r\n\r\n  registerNewLocation() {\r\n    this.locationService.setLocationData(null);\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_LOCATION);\r\n  }\r\n\r\n  constructor(private locationService: LocationService, private contentService: ContentService) { }\r\n\r\n  ngOnInit() {\r\n    this.locationService.setLocationData(null);\r\n    this.locationService.locationData$.subscribe(\r\n      locationResult => {\r\n        if (locationResult) {\r\n          this.locationFound = true;\r\n        } else {\r\n          this.locationFound = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css\n// module id = ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"{{ organizationHeader }}\\\" icon=\\\"pax.png\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Organization Information\\\" icon=\\\"pax.png\\\">\\r\\n        <form>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-4 col-xl-3\\\" for=\\\"organization_name\\\">Organization Name</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"organizationModel.name\\\" name=\\\"organizationName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"organization_name\\\"\\r\\n                    placeholder=\\\"Enter organization name\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4 col-xl-3\\\" for=\\\"organization_no\\\">Organization Number</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"organizationModel.organizationNo\\\" name=\\\"organizationNo\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"organization_no\\\" placeholder=\\\"Enter organization number\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-2\\\" for=\\\"description\\\">Description</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"organizationModel.description\\\" name=\\\"description\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"description\\\"\\r\\n                    placeholder=\\\"Enter description\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header='{{ confirmHeader }}' icon=\\\"checkmark.png\\\">\\r\\n        <div *ngIf=\\\"!organizationTypeSelected || !organizationModel.name || !organizationModel.organizationNo\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"mb-3\\\">\\r\\n            <p *ngIf=\\\"!organizationTypeSelected\\\" class=\\\"no-wrap mb-0\\\">No organization type selected.</p>\\r\\n            <p *ngIf=\\\"!organizationModel.name\\\" class=\\\"no-wrap mb-0\\\">Organization name not set.</p>\\r\\n            <p *ngIf=\\\"!organizationModel.organizationNo\\\" class=\\\"no-wrap mb-0\\\">Organization number not set.</p>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"organizationTypeSelected && organizationModel.name && organizationModel.organizationNo\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Organization Name</th>\\r\\n                  <th>Organization Type</th>\\r\\n                  <th>Organization Number</th>\\r\\n                  <th *ngIf=\\\"organizationModel.description\\\">Description</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ selectedOrganizationType.name }}</td>\\r\\n                  <td>{{ organizationModel.organizationNo }}</td>\\r\\n                  <td *ngIf=\\\"organizationModel.description\\\">{{organizationModel.description}}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerOrganization()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html\n// module id = ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { OrganizationModel } from 'app/shared/models/organization-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\n\r\nconst RESULT_SUCCESS = 'Organization was successfully saved to the database.';\r\nconst RESULT_FAILURE = 'There was a problem when trying to save the organization to the database. Please try again later.';\r\n\r\n@Component({\r\n  selector: 'app-register-organization',\r\n  templateUrl: './register-organization.component.html',\r\n  styleUrls: ['./register-organization.component.css'],\r\n  providers: [OrganizationModel]\r\n})\r\nexport class RegisterOrganizationComponent implements OnInit {\r\n  newOrganization = false;\r\n  organizationHeader: string;\r\n  confirmHeader: string;\r\n  confirmButtonTitle: string;\r\n  organizationTypeList: any[];\r\n  organizationTypeSelected: boolean;\r\n  selectedOrganizationType: any;\r\n  organizationTypeDropdownString = 'Select organization type';\r\n\r\n  constructor(public organizationModel: OrganizationModel, private organizationService: OrganizationService,\r\n    private contentService: ContentService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    this.organizationService.organizationData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.organizationHeader = 'Edit Organization';\r\n          this.confirmHeader = 'Confirm Organization Changes';\r\n          this.confirmButtonTitle = 'Apply Changes';\r\n          this.organizationModel = data;\r\n          this.selectedOrganizationType = this.organizationModel.organizationType;\r\n          this.organizationTypeSelected = true;\r\n        } else if (!this.newOrganization) {\r\n          this.newOrganization = true;\r\n          this.organizationHeader = 'Register New Organization';\r\n          this.confirmHeader = 'Confirm Organization Registration';\r\n          this.confirmButtonTitle = 'Register Organization';\r\n        }\r\n      }\r\n    );\r\n    this.organizationService.getOrganizationTypes().subscribe(\r\n      organizationTypesData => {\r\n        this.organizationTypeList = organizationTypesData;\r\n        // Temporary until we add more organization types (certificate issuer)\r\n        if (this.newOrganization) {\r\n          this.selectedOrganizationType = this.organizationTypeList.find(type => type.name === 'Authority');\r\n          this.organizationTypeSelected = true;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  registerOrganization() {\r\n    if (this.newOrganization) {\r\n      this.organizationService.registerOrganization(this.organizationModel).subscribe(\r\n        result => {\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\r\n        }, error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        }\r\n      );\r\n    } else {\r\n      this.organizationService.updateOrganization(this.organizationModel).subscribe(\r\n        result => {\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\r\n        }, error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  selectOrganizationType(organizationType: any) {\r\n    this.organizationModel.organizationTypeId = organizationType.organizationTypeId;\r\n    this.organizationTypeDropdownString = organizationType.name;\r\n    this.selectedOrganizationType = organizationType;\r\n    this.organizationTypeSelected = true;\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_ORGANIZATIONS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\r\\n    <app-ssn-card header='Register New Organization' icon='pax.png'>\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewOrganization()\\\">Register New Organization</button>\\r\\n      </div>\\r\\n    </app-ssn-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-ssn-card header=\\\"Organization Search\\\" icon=\\\"pax.png\\\">\\r\\n  <div *ngIf=\\\"!organizationFound\\\">\\r\\n    <app-search-organization [showDropdown]=false></app-search-organization>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <div>\\r\\n    <app-organization-smart-table></app-organization-smart-table>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { OrganizationProperties } from 'app/shared/constants/organization-properties';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-view-organization-info',\r\n  templateUrl: './view-organization-info.component.html',\r\n  styleUrls: ['./view-organization-info.component.css']\r\n})\r\nexport class ViewOrganizationInfoComponent implements OnInit {\r\n\r\n  organizationFound = false;\r\n  organizationProperties = OrganizationProperties.PROPERTIES;\r\n  organizationInfo: any[];\r\n\r\n  constructor(private organizationService: OrganizationService, private contentService: ContentService) { }\r\n\r\n  registerNewOrganization() {\r\n    this.organizationService.setOrganizationData(null);\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_ORGANIZATION);\r\n  }\r\n\r\n  editOrganization() {\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_ORGANIZATION);\r\n  }\r\n\r\n  deselectOrganization() {\r\n    this.organizationFound = false;\r\n    this.organizationService.setOrganizationData(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.organizationService.setOrganizationData(null);\r\n    this.organizationService.organizationData$.subscribe(\r\n      organizationResult => {\r\n        if (organizationResult) {\r\n          this.organizationProperties.ORGANIZATION_TYPE.data = (organizationResult.organizationType)\r\n            ? organizationResult.organizationType.name\r\n            : null;\r\n          this.organizationProperties.ORGANIZATION_NAME.data = organizationResult.name;\r\n          this.organizationProperties.ORGANIZATION_NO.data = organizationResult.organizationNo;\r\n          this.organizationProperties.ORGANIZATION_DESCRIPTION.data = organizationResult.description;\r\n          this.organizationFound = true;\r\n        } else {\r\n          this.organizationFound = false;\r\n          this.organizationProperties = OrganizationProperties.PROPERTIES;\r\n        }\r\n        this.organizationInfo = Object.values(this.organizationProperties);\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"{{ shipHeader }}\\\" icon=\\\"ship.png\\\">\\r\\n  <form #form=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <app-ssn-card header=\\\"Ship Identification\\\" icon=\\\"ship.png\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_name\\\">Ship Name</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.name\\\" name=\\\"shipName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"ship_name\\\" placeholder=\\\"Enter ship name\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-2 col-xl-2\\\" for=\\\"call_sign\\\">Call Sign</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.callSign\\\" name=\\\"callSign\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"call_sign\\\" placeholder=\\\"Enter call sign\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"imo_no\\\">IMO Number</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.imoNo\\\" name=\\\"imoNo\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"imo_no\\\" placeholder=\\\"Enter IMO number\\\"\\r\\n                    #imoNo=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!imoNo.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"imoNo.hasError('notNumberError')\\\">\\r\\n                  <small>IMO number must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"imoNo.hasError('notIntegerError')\\\">\\r\\n                  <small>IMO number must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"imoNo.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>IMO number must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"mmsi_no\\\">MMSI Number</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.mmsiNo\\\" name=\\\"mmsiNo\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"mmsi_no\\\" placeholder=\\\"Enter MMSI number\\\"\\r\\n                    #mmsiNo=\\\"ngModel\\\" integerValidator positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!mmsiNo.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"mmsiNo.hasError('notIntegerError')\\\">\\r\\n                  <small>MMSI number must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"mmsiNo.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>MMSI number must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </app-ssn-card>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <app-ssn-card header=\\\"Ship Details\\\" icon=\\\"ship.png\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\" *ngIf=\\\"!shipTypeSelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_type_select\\\">Ship Type</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <ng-select id=\\\"ship_type_select\\\" name=\\\"ship_type_select\\\" [items]=\\\"shipTypeList\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\r\\n                    bindLabel=\\\"name\\\" placeholder=\\\"Select ship type\\\" [(ngModel)]=\\\"selectedShipType\\\" (change)=\\\"selectShipType($event)\\\"></ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\" *ngIf=\\\"shipTypeSelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_type\\\">Ship Type</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input id=\\\"ship_type\\\" name=\\\"ship_type\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"selectedShipType.name\\\"\\r\\n                      disabled=\\\"true\\\" />\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"deselectShipType()\\\">\\r\\n                        <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"year_of_build\\\">Year of Build</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.yearOfBuild\\\" name=\\\"yearOfBuild\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"year_of_build\\\"\\r\\n                    placeholder=\\\"Enter year of build\\\" #yearOfBuild=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!yearOfBuild.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"yearOfBuild.hasError('notNumberError')\\\">\\r\\n                  <small>Year of build must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"yearOfBuild.hasError('notIntegerError')\\\">\\r\\n                  <small>Year of build must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"yearOfBuild.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Year of build must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_length\\\">Length</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"lengthTypeDropdown\\\" ngbDropdownToggle> {{ lengthTypeDropdownString }} </button>\\r\\n                      <div ngbDropdownMenu aria-labelledby=\\\"lengthTypeDropdown\\\">\\r\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let lengthType of lengthTypeList\\\" (click)=\\\"selectLengthType(lengthType)\\\">{{ lengthType.name }}</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <input [(ngModel)]=\\\"shipModel.length\\\" name=\\\"shipLength\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"ship_length\\\"\\r\\n                      placeholder=\\\"Enter ship length\\\" [disabled]=\\\"!lengthTypeSelected\\\" #shipLength=\\\"ngModel\\\" numberValidator\\r\\n                      positiveNumberValidator />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipLength.valid && lengthTypeSelected\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipLength.hasError('notNumberError')\\\">\\r\\n                  <small>Ship length must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipLength.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship length must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_breadth\\\">Breadth</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"breadthTypeDropdown\\\" ngbDropdownToggle> {{ breadthTypeDropdownString }} </button>\\r\\n                      <div ngbDropdownMenu aria-labelledby=\\\"breadthTypeDropdown\\\">\\r\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let breadthType of breadthTypeList\\\" (click)=\\\"selectBreadthType(breadthType)\\\">{{ breadthType.name }}</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <input [(ngModel)]=\\\"shipModel.breadth\\\" name=\\\"breadth\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"ship_breadth\\\"\\r\\n                      placeholder=\\\"Enter ship breadth\\\" [disabled]=\\\"!breadthTypeSelected\\\" #shipBreadth=\\\"ngModel\\\" numberValidator\\r\\n                      positiveNumberValidator />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipBreadth.valid && breadthTypeSelected\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipBreadth.hasError('notNumberError')\\\">\\r\\n                  <small>Ship breadth must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipBreadth.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship breadth must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_power\\\">Power</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"powerTypeDropdown\\\" ngbDropdownToggle> {{ powerTypeDropdownString }} </button>\\r\\n                      <div ngbDropdownMenu aria-labelledby=\\\"powerTypeDropdown\\\">\\r\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let powerType of powerTypeList\\\" (click)=\\\"selectPowerType(powerType)\\\">{{ powerType.name }}</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <input [(ngModel)]=\\\"shipModel.power\\\" name=\\\"power\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"ship_power\\\" placeholder=\\\"Enter ship power\\\"\\r\\n                      [disabled]=\\\"!powerTypeSelected\\\" #shipPower=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator\\r\\n                    />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipPower.valid && powerTypeSelected\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipPower.hasError('notNumberError')\\\">\\r\\n                  <small>Ship power must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipPower.hasError('notIntegerError')\\\">\\r\\n                  <small>Ship power must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipPower.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship power must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"hull_type_dropdown\\\">Hull Type</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div ngbDropdown>\\r\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"hull_type_dropdown\\\" ngbDropdownToggle> {{ hullTypeDropdownString }}</button>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"hull_type_dropdown\\\">\\r\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let hullType of hullTypeList\\\" (click)=\\\"selectHullType(hullType)\\\">{{ hullType.name }}</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_status_dropdown\\\">Ship Status</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div ngbDropdown>\\r\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"ship_status_dropdown\\\" ngbDropdownToggle> {{ shipStatusDropdownString }}</button>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"ship_status_dropdown\\\">\\r\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let shipStatus of shipStatusList\\\" (click)=\\\"selectShipStatus(shipStatus)\\\">{{ shipStatus.name }}</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_height\\\">Height</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.height\\\" #shipHeight=\\\"ngModel\\\" numberValidator positiveNumberValidator name=\\\"height\\\" type=\\\"number\\\"\\r\\n                    class=\\\"form-control form-control-sm\\\" id=\\\"height\\\" placeholder=\\\"Enter ship height\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipHeight.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipHeight.hasError('notNumberError')\\\">\\r\\n                  <small>Ship height must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipHeight.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship height must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_draught\\\">Draught</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.draught\\\" name=\\\"draught\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"ship_draught\\\"\\r\\n                    placeholder=\\\"Enter ship draught\\\" #shipDraught=\\\"ngModel\\\" numberValidator positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipDraught.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipDraught.hasError('notNumberError')\\\">\\r\\n                  <small>Ship draught must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipDraught.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship draught must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3\\\" for=\\\"gross_tonnage\\\">Gross Tonnage</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.grossTonnage\\\" name=\\\"grossTonnage\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"gross_tonnage\\\"\\r\\n                    placeholder=\\\"Enter gross tonnage\\\" #grossTonnage=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!grossTonnage.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"grossTonnage.hasError('notNumberError')\\\">\\r\\n                  <small>Gross tonnage must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"grossTonnage.hasError('notIntegerError')\\\">\\r\\n                  <small>Gross tonnage must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"grossTonnage.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Gross tonnage must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"deadweight_tonnage\\\">Deadweight Tonnage</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.deadweightTonnage\\\" name=\\\"deadweightTonnage\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"deadweight_tonnage\\\" placeholder=\\\"Enter deadweight tonnage\\\" #dwt=\\\"ngModel\\\" numberValidator integerValidator\\r\\n                    positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!dwt.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"dwt.hasError('notNumberError')\\\">\\r\\n                  <small>Deadweight tonnage must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"dwt.hasError('notIntegerError')\\\">\\r\\n                  <small>Deadweight tonnage must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"dwt.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Deadweight tonnage must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"col-form-label-sm\\\" for=\\\"has_side_thrusters\\\">Side thrusters</label>\\r\\n            <div class=\\\"card pt-2\\\" id=\\\"has_side_thrusters\\\">\\r\\n              <div class=\\\"checkbox row\\\">\\r\\n                <div class=\\\"col ml-2\\\">\\r\\n                  <label class=\\\"col-form-label-sm\\\">\\r\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrusters\\\" name=\\\"hasSideThrusters\\\" type=\\\"checkbox\\\" value=\\\"\\\"> Side thrusters</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"checkbox row\\\">\\r\\n                <div class=\\\"col ml-2\\\">\\r\\n                  <label class=\\\"col-form-label-sm\\\">\\r\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrustersFront\\\" name=\\\"hasSideThrustersFront\\\" type=\\\"checkbox\\\" value=\\\"\\\"> Front side thrusters</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"checkbox row\\\">\\r\\n                <div class=\\\"col ml-2\\\">\\r\\n                  <label class=\\\"col-form-label-sm\\\">\\r\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrustersBack\\\" name=\\\"hasSideThrustersBack\\\" type=\\\"checkbox\\\" value=\\\"\\\"> Back side thrusters</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"col-form-label-sm\\\" for=\\\"remark\\\">Remark</label>\\r\\n            <textarea [(ngModel)]=\\\"shipModel.remark\\\" name=\\\"remark\\\" class=\\\"form-control form-control-sm\\\" rows=\\\"4\\\" id=\\\"remark\\\"></textarea>\\r\\n          </div>\\r\\n        </app-ssn-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-search-ship-flag-code></app-search-ship-flag-code>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-select-ship-contact></app-select-ship-contact>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Organization\\\" icon=\\\"pax.png\\\">\\r\\n        <div *ngIf=\\\"!organizationSelected\\\">\\r\\n          <app-search-organization></app-search-organization>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"organizationSelected\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Organization Name</th>\\r\\n                  <th>Organization Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ organizationModel.organizationNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectOrganization()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"{{ confirmHeader }}\\\" icon=\\\"checkmark.png\\\">\\r\\n\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"!form.valid || !(shipModel.name && shipModel.callSign && shipModel.imoNo && shipTypeSelected && shipModel.yearOfBuild && shipModel.length && lengthTypeSelected && shipModel.breadth && breadthTypeSelected && shipModel.power && powerTypeSelected && hullTypeSelected && shipModel.height && shipModel.draught && shipModel.grossTonnage && shipModel.deadweightTonnage && shipFlagCodeSelected && contactSelected && organizationSelected)\\\">\\r\\n          <div *ngIf=\\\"!form.valid\\\" class=\\\"text-center\\\">\\r\\n            <div class=\\\"alert alert-danger\\\">\\r\\n              There are errors in the form that needs to be resolved.\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mb-3\\\">\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.name\\\">Ship name not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.callSign\\\">Call sign not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.imoNo\\\">IMO number not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipTypeSelected\\\">Ship type not selected.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.yearOfBuild\\\">Year of build not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.length || !lengthTypeSelected\\\">Ship length not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.breadth || !breadthTypeSelected\\\">Ship breadth not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.power || !powerTypeSelected\\\">Ship power not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!hullTypeSelected\\\">Hull type not selected.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipStatusSelected\\\">Ship status not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.height\\\">Ship height not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.draught\\\">Ship draught not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.grossTonnage\\\">Gross tonnage not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.deadweightTonnage\\\">Deadweight tonnage not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipFlagCodeSelected\\\">Flag code not selected.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!contactSelected\\\">At least one contact medium must be provided.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!organizationSelected\\\">Organization not selected.</p>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" />{{ confirmButtonTitle }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"form.valid && shipModel.name && shipModel.callSign && shipModel.imoNo && shipTypeSelected && shipModel.yearOfBuild && shipModel.length && lengthTypeSelected && shipModel.breadth && breadthTypeSelected && shipModel.power && powerTypeSelected && hullTypeSelected && shipModel.height && shipModel.draught && shipModel.grossTonnage && shipModel.deadweightTonnage && shipFlagCodeSelected && contactSelected && organizationSelected\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Ship Name</th>\\r\\n                  <th>Call Sign</th>\\r\\n                  <th>IMO Number</th>\\r\\n                  <th *ngIf=\\\"shipModel.mmsiNo\\\">MMSI Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ shipModel.name }}</td>\\r\\n                  <td>{{ shipModel.callSign }}</td>\\r\\n                  <td>{{ shipModel.imoNo }}</td>\\r\\n                  <td *ngIf=\\\"shipModel.mmsiNo\\\">{{ shipModel.mmsiNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Ship Type</th>\\r\\n                  <th>Year of Build</th>\\r\\n                  <th>Length</th>\\r\\n                  <th>Breadth</th>\\r\\n                  <th>Power</th>\\r\\n                  <th>Hull Type</th>\\r\\n                  <th>Status</th>\\r\\n                  <th>Height</th>\\r\\n                  <th>Draught</th>\\r\\n                  <th>Gross Tonnage</th>\\r\\n                  <th>Deadweight Tonnage</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td *ngIf=\\\"shipTypeSelected\\\">{{ selectedShipType.name }}</td>\\r\\n                  <td>{{ shipModel.yearOfBuild }}</td>\\r\\n                  <td>{{ lengthTypeDropdownString }}\\r\\n                    <br>{{ shipModel.length }}</td>\\r\\n                  <td>{{ breadthTypeDropdownString }}\\r\\n                    <br>{{ shipModel.breadth }}</td>\\r\\n                  <td>{{ powerTypeDropdownString }}\\r\\n                    <br>{{ shipModel.power }}</td>\\r\\n                  <td>{{ hullTypeDropdownString }}</td>\\r\\n                  <td>{{ shipStatusDropdownString }}</td>\\r\\n                  <td>{{ shipModel.height }}</td>\\r\\n                  <td>{{ shipModel.draught }}</td>\\r\\n                  <td>{{ shipModel.grossTonnage }}</td>\\r\\n                  <td>{{ shipModel.deadweightTonnage }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <p *ngIf=\\\"shipModel.hasSideThrusters\\\">Ship has side thrusters.</p>\\r\\n          <p *ngIf=\\\"shipModel.hasSideThrustersFront\\\">Ship has front side thrusters.</p>\\r\\n          <p *ngIf=\\\"shipModel.hasSideThrustersBack\\\">Ship has back side thrusters.</p>\\r\\n\\r\\n          <div *ngIf=\\\"shipModel.remark\\\">\\r\\n            <span>Remark:</span>\\r\\n            <div class=\\\"card p-1 pt-3 text-left mb-3\\\">\\r\\n              <pre>{{ shipModel.remark }}</pre>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Country Flag</th>\\r\\n                  <th>Ship Flag Code</th>\\r\\n                  <th>Country</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <img src=\\\"assets/images/Flags/{{ shipFlagCodeModel.country.twoCharCode | lowercase }}.png\\\" height=\\\"20px\\\" />\\r\\n                  </td>\\r\\n                  <td>{{ shipFlagCodeModel.name }}</td>\\r\\n                  <td>{{ shipFlagCodeModel.country.name }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n          <app-selected-contact-mediums></app-selected-contact-mediums>\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Organization Name</th>\\r\\n                  <th>Organization Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ organizationModel.organizationNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerShip()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ShipContactModel } from 'app/shared/models/ship-contact-model';\r\nimport { ShipModel } from 'app/shared/models/ship-model';\r\nimport { ContactService } from 'app/shared/services/contact.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\n\r\nconst RESULT_SUCCESS = 'Ship was successfully saved to the database.';\r\nconst RESULT_FAILURE = 'There was a problem when trying to save the ship to the database. Please try again later.';\r\n// tslint:disable-next-line:max-line-length\r\nconst RESULT_SAVED_WITHOUT_CONTACT = 'Ship was saved to the database, but there was an error when trying to save the ship\\'s contact information. Please provide this information later.';\r\n\r\n@Component({\r\n  selector: 'app-register-ship',\r\n  templateUrl: './register-ship.component.html',\r\n  styleUrls: ['./register-ship.component.css'],\r\n  providers: [ShipModel]\r\n})\r\nexport class RegisterShipComponent implements OnInit {\r\n  newShip = false;\r\n  shipHeader: string;\r\n  confirmHeader: string;\r\n  confirmButtonTitle: string;\r\n  shipFlagCodeSelected: boolean;\r\n  organizationSelected: boolean;\r\n  contactSelected: boolean;\r\n\r\n  hullTypeSelected = false;\r\n  lengthTypeSelected = false;\r\n  breadthTypeSelected = false;\r\n  powerTypeSelected = false;\r\n  shipStatusSelected = false;\r\n\r\n  shipTypeList: any[];\r\n  hullTypeList: any[];\r\n  lengthTypeList: any[];\r\n  breadthTypeList: any[];\r\n  powerTypeList: any[];\r\n  shipStatusList: any[];\r\n\r\n  selectedShipType: any;\r\n  shipTypeSelected = false;\r\n  shipTypeSearchFailed = false;\r\n\r\n  hullTypeDropdownString = 'Select hull type';\r\n  lengthTypeDropdownString = 'Select type';\r\n  breadthTypeDropdownString = 'Select type';\r\n  powerTypeDropdownString = 'Select type';\r\n  shipStatusDropdownString = 'Select status';\r\n\r\n  shipFlagCodeModel: any;\r\n  organizationModel: any;\r\n  selectedContactModels: ShipContactModel[];\r\n\r\n\r\n  // shipModel should be private, but Angular's AoT compilation can't handle it. Will be fixed in Angular 6.0\r\n  constructor(\r\n    public shipModel: ShipModel,\r\n    private shipService: ShipService,\r\n    private contactService: ContactService,\r\n    private contentService: ContentService,\r\n    private modalService: NgbModal,\r\n    private organizationService: OrganizationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.subscribeToData();\r\n    this.shipService.shipOverviewData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.setAllValues(data);\r\n        } else if (!this.newShip) {\r\n          this.organizationService.setOrganizationData(null);\r\n          this.shipService.setShipFlagCodeData(null);\r\n          this.contactService.setContactData(null);\r\n          this.newShip = true;\r\n          this.shipHeader = 'Register New Ship';\r\n          this.confirmHeader = 'Confirm Ship Registration';\r\n          this.confirmButtonTitle = 'Register Ship';\r\n        }\r\n      }\r\n    );\r\n    this.shipService.getShipTypes().subscribe(\r\n      data => this.shipTypeList = data\r\n    );\r\n    this.shipService.getHullTypes().subscribe(\r\n      data => this.hullTypeList = data\r\n    );\r\n    this.shipService.getLengthTypes().subscribe(\r\n      data => this.lengthTypeList = data\r\n    );\r\n    this.shipService.getBreadthTypes().subscribe(\r\n      data => this.breadthTypeList = data\r\n    );\r\n    this.shipService.getPowerTypes().subscribe(\r\n      data => this.powerTypeList = data\r\n    );\r\n    this.shipService.getShipStatusList().subscribe(\r\n      data => this.shipStatusList = data\r\n    );\r\n  }\r\n\r\n  subscribeToData() {\r\n    this.shipService.shipFlagCodeData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.shipFlagCodeModel = data;\r\n          this.shipModel.shipFlagCodeId = data.shipFlagCodeId;\r\n          this.shipFlagCodeSelected = true;\r\n        } else {\r\n          this.shipFlagCodeSelected = false;\r\n        }\r\n      });\r\n\r\n    this.organizationService.organizationData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.organizationModel = data;\r\n          this.shipModel.organizationId = data.organizationId;\r\n          this.organizationSelected = true;\r\n        } else {\r\n          this.organizationSelected = false;\r\n        }\r\n      });\r\n\r\n    this.contactService.contactData$.subscribe(\r\n      data => {\r\n        if (data && data.length !== 0) {\r\n          this.selectedContactModels = data;\r\n          this.contactSelected = true;\r\n        } else {\r\n          this.contactSelected = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  setAllValues(ship: ShipModel) {\r\n    this.newShip = false;\r\n    this.shipHeader = 'Edit Ship';\r\n    this.confirmHeader = 'Confirm Ship Changes';\r\n    this.confirmButtonTitle = 'Apply Changes';\r\n    this.shipModel = ship;\r\n    this.selectedShipType = ship.shipType;\r\n    this.shipTypeSelected = (ship.shipType != null);\r\n    this.organizationModel = ship.organization;\r\n    this.organizationSelected = (ship.organization != null);\r\n    this.selectedContactModels = ship.shipContact;\r\n    this.hullTypeSelected = (ship.shipHullType != null);\r\n    if (this.hullTypeSelected) {\r\n      this.hullTypeDropdownString = ship.shipHullType.name;\r\n    }\r\n    this.lengthTypeSelected = (ship.shipLengthType != null);\r\n    if (this.lengthTypeSelected) {\r\n      this.lengthTypeDropdownString = ship.shipLengthType.name;\r\n    }\r\n    this.hullTypeSelected = (ship.shipHullType != null);\r\n    if (this.hullTypeSelected) {\r\n      this.hullTypeDropdownString = ship.shipHullType.name;\r\n    }\r\n    this.breadthTypeSelected = (ship.shipBreadthType != null);\r\n    if (this.breadthTypeSelected) {\r\n      this.breadthTypeDropdownString = ship.shipBreadthType.name;\r\n    }\r\n    this.powerTypeSelected = (ship.shipPowerType != null);\r\n    if (this.powerTypeSelected) {\r\n      this.powerTypeDropdownString = ship.shipPowerType.name;\r\n    }\r\n    this.shipStatusSelected = (ship.shipStatus != null);\r\n    if (this.shipStatusSelected) {\r\n      this.shipStatusDropdownString = ship.shipStatus.name;\r\n    }\r\n    this.organizationService.setOrganizationData(ship.organization);\r\n    this.shipService.setShipFlagCodeData(ship.shipFlagCode);\r\n    this.contactService.setContactData(ship.shipContact);\r\n    this.contactSelected = (ship.shipContact != null);\r\n  }\r\n\r\n  selectShipType($event: any) {\r\n    this.shipModel.shipTypeId = $event.shipTypeId;\r\n    this.shipTypeSelected = true;\r\n  }\r\n\r\n  deselectShipType() {\r\n    this.shipModel.shipTypeId = null;\r\n    this.selectedShipType = null;\r\n    this.shipTypeSelected = false;\r\n  }\r\n\r\n  deselectOrganization() {\r\n    this.shipModel.organizationId = null;\r\n    this.organizationModel = null;\r\n    this.organizationSelected = false;\r\n  }\r\n\r\n  selectHullType(hullType: any) {\r\n    this.shipModel.shipHullTypeId = hullType.shipHullTypeId;\r\n    this.hullTypeDropdownString = hullType.name;\r\n    this.hullTypeSelected = true;\r\n  }\r\n\r\n  selectLengthType(lengthType: any) {\r\n    this.shipModel.shipLengthTypeId = lengthType.shipLengthTypeId;\r\n    this.lengthTypeDropdownString = lengthType.name;\r\n    this.lengthTypeSelected = true;\r\n  }\r\n\r\n  selectBreadthType(breadthType: any) {\r\n    this.shipModel.shipBreadthTypeId = breadthType.shipBreadthTypeId;\r\n    this.breadthTypeDropdownString = breadthType.name;\r\n    this.breadthTypeSelected = true;\r\n  }\r\n\r\n  selectPowerType(powerType: any) {\r\n    this.shipModel.shipPowerTypeId = powerType.shipPowerTypeId;\r\n    this.powerTypeDropdownString = powerType.name;\r\n    this.powerTypeSelected = true;\r\n  }\r\n\r\n  selectShipStatus(shipStatus: any) {\r\n    this.shipModel.shipStatusId = shipStatus.shipStatusId;\r\n    this.shipStatusDropdownString = shipStatus.name;\r\n    this.shipStatusSelected = true;\r\n  }\r\n\r\n  registerShip() {\r\n    if (this.newShip) {\r\n      this.shipService.registerShip(this.shipModel).subscribe(\r\n        result => {\r\n          this.shipModel.shipId = result.shipId;\r\n          const shipContactList = this.selectedContactModels.map(contactModel => {\r\n            const shipContact = new ShipContactModel();\r\n            shipContact.shipId = this.shipModel.shipId;\r\n            shipContact.contactMediumId = contactModel.contactMedium.contactMediumId;\r\n            shipContact.contactValue = contactModel.contactValue;\r\n            shipContact.isPreferred = contactModel.isPreferred;\r\n            shipContact.comments = contactModel.comments;\r\n            return shipContact;\r\n          });\r\n          this.saveShipContactList(shipContactList);\r\n        }, error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        }\r\n      );\r\n    } else {\r\n      // remove child dependencies\r\n      this.shipModel.organization = null;\r\n      this.shipModel.shipStatus = null;\r\n      this.shipModel.shipPowerType = null;\r\n      this.shipModel.shipBreadthType = null;\r\n      this.shipModel.shipLengthType = null;\r\n      this.shipModel.shipSource = null;\r\n      this.shipModel.shipFlagCode = null;\r\n      this.shipModel.shipType = null;\r\n      this.shipModel.shipContact = null;\r\n      // update\r\n      this.shipService.updateShip(this.shipModel).subscribe(\r\n        result => {\r\n          const shipContactList = this.selectedContactModels.map(contactModel => {\r\n            const shipContact = new ShipContactModel();\r\n            shipContact.shipId = this.shipModel.shipId;\r\n            shipContact.contactMediumId = contactModel.contactMedium.contactMediumId;\r\n            shipContact.contactValue = contactModel.contactValue;\r\n            shipContact.isPreferred = contactModel.isPreferred;\r\n            shipContact.comments = contactModel.comments;\r\n            return shipContact;\r\n          });\r\n          this.saveShipContactList(shipContactList);\r\n        }, error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  saveShipContactList(shipContactList: ShipContactModel[]) {\r\n    this.shipService.saveShipContactList(shipContactList).subscribe(\r\n      result => {\r\n        if (result) {\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_WARNING, RESULT_SAVED_WITHOUT_CONTACT);\r\n      }\r\n    );\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_SHIPS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goBack();\r\n        }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goBack();\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Flag Code\\\" icon=\\\"flag.png\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n            <img *ngIf=\\\"r.country.twoCharCode\\\" src=\\\"assets/images/Flags/{{ r.country.twoCharCode.toLowerCase() }}.png\\\" height=\\\"16px\\\"\\r\\n            />\\r\\n            <strong *ngIf=\\\"r.name\\\">Code: </strong> {{ r.name }}\\r\\n            <strong *ngIf=\\\"r.country.name\\\">Country: </strong> {{ r.country.name }}\\r\\n        </ng-template>\\r\\n\\r\\n        <div *ngIf=\\\"!shipFlagCodeSelected\\\" class=\\\"text-center\\\">\\r\\n            <label for=\\\"search-shipFlagCode\\\">Search using flag code or name of country</label>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-2\\\"></div>\\r\\n                <div class=\\\"col-8\\\">\\r\\n                    <input id=\\\"search-shipFlagCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipFlagCodeModel\\\"\\r\\n                        [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectShipFlagCode($event)\\\"\\r\\n                        placeholder=\\\"Enter search here...\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col-2\\\">\\r\\n                    <div *ngIf=\\\"searching\\\">\\r\\n                        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/flag.gif\\\" height=\\\"32px\\\">\\r\\n                        <p>Searching</p>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"searchFailed\\\">\\r\\n                        <img class=\\\"mx-auto\\\" src=\\\"assets/images/VoyageIcons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n                        <p>No results</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"shipFlagCodeSelected\\\" class=\\\"text-center\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table table-bordered\\\">\\r\\n                    <thead>\\r\\n                        <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                            <th>Country Flag</th>\\r\\n                            <th>Ship Flag Code</th>\\r\\n                            <th>Country</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>\\r\\n                                <img src=\\\"assets/images/Flags/{{ shipFlagCodeModel.country.twoCharCode | lowercase }}.png\\\" height=\\\"20px\\\" />\\r\\n                            </td>\\r\\n                            <td>{{ shipFlagCodeModel.name }}</td>\\r\\n                            <td>{{ shipFlagCodeModel.country.name }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectShipFlagCode()\\\">\\r\\n                <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { ShipFlagCodeService } from 'app/shared/services/ship-flag-code.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\r\n\r\n@Component({\r\n    selector: 'app-search-ship-flag-code',\r\n    templateUrl: './search-ship-flag-code.component.html',\r\n    styleUrls: ['./search-ship-flag-code.component.css'],\r\n    providers: [ShipFlagCodeService]\r\n})\r\nexport class SearchShipFlagCodeComponent implements OnInit {\r\n    resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\r\n    shipFlagCodeModel: any;\r\n    shipFlagCodeSelected = false;\r\n\r\n    searching = false;\r\n    searchFailed = false;\r\n    hideSearchingWhenUnsubscribed = new Observable(() => () => this.searching = false);\r\n\r\n    constructor(private shipService: ShipService) { }\r\n\r\n    search = (text$: Observable<string>) =>\r\n        text$.pipe(\r\n            debounceTime(50),\r\n            distinctUntilChanged(),\r\n            tap((term) => {\r\n                this.searchFailed = false;\r\n                this.searching = (term.length >= 1);\r\n            }),\r\n            switchMap(term =>\r\n                this.shipService.searchFlagCode(term, this.resultsDropdown).pipe(\r\n                    tap(() => this.searchFailed = false),\r\n                    catchError(() => {\r\n                        this.searchFailed = true;\r\n                        return of([]);\r\n                    }))\r\n            ),\r\n            tap((res) => {\r\n                this.searching = false;\r\n                this.searchFailed = (this.shipFlagCodeModel.length >= 1 && res.length === 0);\r\n            }),\r\n            merge(this.hideSearchingWhenUnsubscribed)\r\n        )\r\n\r\n    formatter = (x: { shipFlagCodeId: string }) => x.shipFlagCodeId;\r\n\r\n    selectShipFlagCode($event) {\r\n        this.shipFlagCodeSelected = true;\r\n        this.shipService.setShipFlagCodeData($event.item);\r\n    }\r\n\r\n    deselectShipFlagCode() {\r\n        this.shipFlagCodeSelected = false;\r\n        this.shipFlagCodeModel = null;\r\n        this.shipService.setShipFlagCodeData(this.shipFlagCodeModel);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.shipService.shipFlagCodeData$.subscribe(\r\n            data => {\r\n                if (data) {\r\n                    this.shipFlagCodeModel = data;\r\n                    this.shipFlagCodeSelected = true;\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\r\\n    <app-ssn-card header=\\\"Register New Ship\\\" icon=\\\"ship.png\\\">\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewShip()\\\">Register New Ship</button>\\r\\n      </div>\\r\\n    </app-ssn-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-ssn-card header=\\\"Ship Search\\\" icon=\\\"ship.png\\\">\\r\\n  <div *ngIf=\\\"!shipFound\\\">\\r\\n    <app-search-ship [showDropdown]=false></app-search-ship>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <div>\\r\\n    <app-ship-smart-table></app-ship-smart-table>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ShipProperties } from 'app/shared/constants/ship-properties';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-view-ship-info',\r\n  templateUrl: './view-ship-info.component.html',\r\n  styleUrls: ['./view-ship-info.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class ViewShipInfoComponent implements OnInit {\r\n\r\n  shipFound = false;\r\n\r\n  shipProperties: any = ShipProperties.PROPERTIES;\r\n  shipInfo: any[];\r\n  showTable = false;\r\n\r\n  deselectShip() {\r\n    this.shipFound = false;\r\n    this.shipService.setShipOverviewData(null);\r\n  }\r\n\r\n  registerNewShip() {\r\n    this.shipService.setShipOverviewData(null);\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_SHIP);\r\n  }\r\n\r\n  editShip() {\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_SHIP);\r\n  }\r\n\r\n  searchShips() {\r\n    this.showTable = true;\r\n  }\r\n\r\n  constructor(private shipService: ShipService, private contentService: ContentService) { }\r\n\r\n  ngOnInit() {\r\n    this.shipService.setShipOverviewData(null);\r\n    this.shipService.shipOverviewData$.subscribe(\r\n      shipResult => {\r\n        if (shipResult) {\r\n          this.shipFound = true;\r\n        } else {\r\n          this.shipFound = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css\n// module id = ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"REGISTER USER\\\" icon=\\\"user.png\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card *ngIf=\\\"!isDrafted\\\" header=\\\"Personalia\\\" icon=\\\"user-info.png\\\" id=\\\"personalia\\\">\\r\\n        <form #f=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-1 col-md-1 col-lg-2 col-xl-2\\\" for=\\\"email\\\">Email</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\" [email]=\\\"true\\\"\\r\\n                    tmFocus validateEmail (blur)=\\\"userExists(email.valid)\\\" (ngModelChange)=\\\"emailChecked = false\\\" placeholder=\\\"Enter email\\\">\\r\\n                  <small *ngIf=\\\"!email.valid && !email.pristine\\\" class=\\\"text-danger\\\">Please enter a valid email address</small>\\r\\n                  <div *ngIf=\\\"emailChecked && !emailTaken\\\">\\r\\n                    <img height=\\\"16px\\\" src=\\\"assets/images/Validation/32x32/icon-valid-ok.png\\\">\\r\\n                    <small class=\\\"text-success\\\">email available</small>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"emailChecked && emailTaken\\\">\\r\\n                    <img height=\\\"16px\\\" src=\\\"assets/images/Validation/32x32/icon-alert-warning.png\\\">\\r\\n                    <small class=\\\"text-danger\\\">email is already in use</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-2 col-xl-2\\\" for=\\\"password\\\">Password</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.password\\\" required\\r\\n                    placeholder=\\\"Enter password\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"given_name\\\">Given name</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"given_name\\\" name=\\\"givenName\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.givenName\\\" placeholder=\\\"Enter Given name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-2 col-xl-2\\\" for=\\\"surname\\\">Surname</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"surname\\\" name=\\\"surname\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.surname\\\" placeholder=\\\"Enter surname\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"phone_number\\\">Phone number</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"phone_number\\\" name=\\\"phoneNumber\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.phoneNumber\\\" placeholder=\\\"Enter phone number\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-4 col-xl-4\\\" for=\\\"company_phone_number\\\">Company phone number</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"company_phone_number\\\" name=\\\"companyPhoneNumber\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.companyPhoneNumber\\\"\\r\\n                    placeholder=\\\"Enter your company phone number\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-3\\\" for=\\\"company_email\\\">Company email</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"company_email\\\" name=\\\"companyEmail\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.companyEmail\\\" #compEmail=\\\"ngModel\\\"\\r\\n                    [email]=\\\"true\\\" tmFocus validateEmail placeholder=\\\"Enter your company email address\\\">\\r\\n                </div>\\r\\n                <small *ngIf=\\\"!compEmail.valid && !compEmail.pristine\\\" class=\\\"text-danger\\\">Please enter a valid email address</small>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Select Organization\\\" icon=\\\"pax.png\\\">\\r\\n        <div *ngIf=\\\"!organizationSelected\\\">\\r\\n          <app-search-organization></app-search-organization>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"organizationSelected\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Organization Name</th>\\r\\n                  <th>Organization Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ organizationModel.organizationNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectOrganization()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"User rights\\\" icon=\\\"verification-clipboard.png\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <span class=\\\"no-wrap\\\">Select a role for this user</span>\\r\\n          </div>\\r\\n          <ng-select id=\\\"roleSelected\\\" [items]=\\\"roleList\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select role\\\"\\r\\n            [(ngModel)]=\\\"user.roleName\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Confirm User Registration\\\">\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"!(user.email && emailChecked && !emailTaken && user.password && organizationSelected && user.roleName)\\\">\\r\\n          <div class=\\\"mb-3\\\">\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!user.email\\\">Email not set.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"user.email && emailChecked && emailTaken\\\">Selected email is already in use.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!user.password\\\">Password not set.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!organizationSelected\\\">Organization not selected.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!user.roleName\\\">Role not assigned.</p>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" disabled>Register User</button>\\r\\n        </div>\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"user.email && emailChecked && !emailTaken && user.password && organizationSelected && user.roleName\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th *ngIf=\\\"user.givenName\\\">Given name</th>\\r\\n                  <th *ngIf=\\\"user.surname\\\">Surname</th>\\r\\n                  <th>Email</th>\\r\\n                  <th *ngIf=\\\"user.phoneNumber\\\">Phone number</th>\\r\\n                  <th>Organization</th>\\r\\n                  <th>Role</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td *ngIf=\\\"user.givenName\\\">{{ user.givenName }}</td>\\r\\n                  <td *ngIf=\\\"user.surname\\\">{{ user.surname }}</td>\\r\\n                  <td> {{ user.email }} </td>\\r\\n                  <td *ngIf=\\\"user.phoneNumber\\\">{{ user.phoneNumber }}</td>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ user.roleName }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerUserWithPassword()\\\">Register User</button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html\n// module id = ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { UserModelWithPassword } from 'app/shared/models/user-model-with-password';\r\nimport { UserModel } from 'app/shared/models/user-model';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\n\r\nconst RESULT_SUCCES = 'User was successfully registered.';\r\nconst RESULT_FAILURE = 'There was a problem when trying to register the user. Please try again later.';\r\n\r\n@Component({\r\n  selector: 'app-register-user',\r\n  templateUrl: './register-user.component.html',\r\n  styleUrls: ['./register-user.component.css'],\r\n  providers: [UserModel, AccountService]\r\n})\r\nexport class RegisterUserComponent implements OnInit {\r\n\r\n  user: UserModelWithPassword = {\r\n    email: '',\r\n    phoneNumber: '',\r\n    givenName: '',\r\n    surname: '',\r\n    password: '',\r\n    roleName: '',\r\n    organizationId: '',\r\n    companyEmail: '',\r\n    companyPhoneNumber: ''\r\n  };\r\n  emailTaken: boolean;\r\n  emailChecked: boolean;\r\n\r\n  organizationModel: any;\r\n  organizationSelected: boolean;\r\n\r\n  roleList: any[];\r\n  selectedRole: any;\r\n\r\n  constructor(\r\n    private userModel: UserModel,\r\n    private accountService: AccountService,\r\n    private organizationService: OrganizationService,\r\n    private contentService: ContentService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.accountService.getAllRoles().subscribe(\r\n      data => this.roleList = data\r\n    );\r\n\r\n    this.organizationService.setOrganizationData(null);\r\n    this.organizationService.organizationData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.organizationModel = data;\r\n          this.user.organizationId = data.organizationId;\r\n          this.organizationSelected = true;\r\n        } else {\r\n          this.organizationSelected = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  userExists(emailValid: boolean) {\r\n    if (emailValid) {\r\n      return this.accountService.emailTaken(this.user.email)\r\n      .subscribe(result => {\r\n        this.emailTaken = result;\r\n        this.emailChecked = true;\r\n      });\r\n    }\r\n  }\r\n\r\n  registerUserWithPassword() {\r\n    this.accountService.registerUser(this.user)\r\n      .subscribe(\r\n        result => {\r\n          if (result) {\r\n            console.log(result);\r\n            this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCES);\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        }\r\n      );\r\n  }\r\n\r\n  deselectOrganization() {\r\n    this.user.organizationId = null;\r\n    this.organizationModel = null;\r\n    this.organizationSelected = false;\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/content-container.component.css\n// module id = ./src/app/main-content/content-container/content-container.component.css\n// module chunks = main","module.exports = \"<div [ngSwitch]=\\\"selectedComponent\\\">\\r\\n  <app-register-user *ngSwitchCase=\\\"cn.REGISTER_USER\\\"></app-register-user>\\r\\n  <app-view-ship-info *ngSwitchCase=\\\"cn.VIEW_SHIPS\\\"></app-view-ship-info>\\r\\n  <app-register-ship *ngSwitchCase=\\\"cn.REGISTER_SHIP\\\"></app-register-ship>\\r\\n  <app-view-location-info *ngSwitchCase=\\\"cn.LOCATIONS\\\"></app-view-location-info>\\r\\n  <app-register-location *ngSwitchCase=\\\"cn.REGISTER_LOCATION\\\"></app-register-location>\\r\\n  <app-view-organization-info *ngSwitchCase=\\\"cn.VIEW_ORGANIZATIONS\\\"></app-view-organization-info>\\r\\n  <app-register-organization *ngSwitchCase=\\\"cn.REGISTER_ORGANIZATION\\\"></app-register-organization>\\r\\n  <app-port-call *ngSwitchCase=\\\"cn.VIEW_PORT_CALLS\\\"></app-port-call>\\r\\n  <app-new-port-call-draft *ngSwitchCase=\\\"cn.REGISTER_PORT_CALL_DRAFT\\\"></app-new-port-call-draft>\\r\\n  <app-registration *ngSwitchCase=\\\"cn.REGISTER_PORT_CALL\\\"></app-registration>\\r\\n  <app-view-port-call *ngSwitchCase=\\\"cn.VIEW_PORT_CALL\\\"></app-view-port-call>\\r\\n  <app-clearance *ngSwitchCase=\\\"cn.PORT_CALL_CLEARANCE\\\"></app-clearance>\\r\\n  <div class=\\\"alert alert-danger\\\" *ngSwitchDefault>Oops, something went wrong. Please reload the page.</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/content-container.component.html\n// module id = ./src/app/main-content/content-container/content-container.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\n\r\n@Component({\r\n  selector: 'app-content-container',\r\n  templateUrl: './content-container.component.html',\r\n  styleUrls: ['./content-container.component.css']\r\n})\r\nexport class ContentContainerComponent implements OnInit {\r\n\r\n  cn = CONTENT_NAMES;\r\n  selectedComponent: string;\r\n\r\n  constructor(private contentService: ContentService) {}\r\n\r\n  ngOnInit() {\r\n    this.contentService.contentName$.subscribe((content) => {\r\n      this.selectedComponent = content;\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/content-container.component.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { BasisDataModule } from './basis-data/basis-data.module';\r\nimport { ContentContainerComponent } from './content-container.component';\r\nimport { PortCallModule } from './port-call/port-call.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    PortCallModule,\r\n    BasisDataModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [ContentContainerComponent],\r\n  exports: [ContentContainerComponent]\r\n})\r\nexport class ContentContainerModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/content-container.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.css\n// module id = ./src/app/main-content/content-container/port-call/clearance/clearance.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"PORT CALL CLEARANCE\\\" icon=\\\"stamp.png\\\">\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ship-info-table></app-ship-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-location-time-info-table></app-location-time-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <app-confirmation-view></app-confirmation-view>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Clearance\\\" icon=\\\"stamp.png\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"remark\\\">Remark</label>\\r\\n          <textarea class=\\\"form-control\\\" rows=\\\"3\\\" id=\\\"remark\\\" [(ngModel)]=\\\"clearanceModel.remark\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"showWarningBox(content, true)\\\">\\r\\n            <div class=\\\"mx-auto\\\">\\r\\n              <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"32px\\\">\\r\\n            </div>\\r\\n            <small>Accept</small>\\r\\n          </button>\\r\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"showWarningBox(content, false)\\\">\\r\\n            <div class=\\\"mx-auto\\\">\\r\\n              <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"32px\\\">\\r\\n            </div>\\r\\n            <small>Reject</small>\\r\\n          </button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <button class=\\\"btn btn-light\\\" (click)=\\\"goBack()\\\">\\r\\n        <img src=\\\"assets/images/VoyageIcons/128x128/left-arrow.png\\\" height=\\\"32px\\\">\\r\\n        <span class=\\\"no-wrap\\\"> GO BACK</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\\r\\n\\r\\n<ng-template #content let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Confirm Clearance</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div *ngIf=\\\"clearanceModel.remark\\\">\\r\\n      <span>Are you sure you want to submit a clearance response with the following remark:</span>\\r\\n      <br>\\r\\n      <pre>{{ clearanceModel.remark }}</pre>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!clearanceModel.remark\\\">\\r\\n      <span>Are you sure you want to submit a clearance response with no remark?</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-success\\\" *ngIf=\\\"givingClearance\\\" (click)=\\\"saveClearance(); close\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\">\\r\\n      <span>Give Clearance</span>\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"!givingClearance\\\" (click)=\\\"saveClearance(); close\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span>Reject Clearance</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\r\\n      <span>Cancel</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.html\n// module id = ./src/app/main-content/content-container/port-call/clearance/clearance.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ClearanceModel } from 'app/shared/models/clearance-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-clearance',\r\n  templateUrl: './clearance.component.html',\r\n  styleUrls: ['./clearance.component.css']\r\n})\r\nexport class ClearanceComponent implements OnInit {\r\n  clearanceModel: ClearanceModel = new ClearanceModel();\r\n\r\n  clearanceList: any[] = [];\r\n\r\n  givingClearance: boolean;\r\n\r\n  constructor(\r\n    private contentService: ContentService,\r\n    private modalService: NgbModal,\r\n    private portCallService: PortCallService,\r\n    private shipService: ShipService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.portCallService.clearanceListData$.subscribe(data => {\r\n      if (data) {\r\n        this.clearanceList = data;\r\n        this.portCallService.clearanceData$.subscribe(clearanceUser => {\r\n          if (clearanceUser) {\r\n            this.clearanceModel = this.clearanceList.find(\r\n              cl => cl.organizationId === clearanceUser.organizationId\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.portCallService.shipData$.subscribe(shipResult => {\r\n      this.shipService.setShipOverviewData(shipResult);\r\n    });\r\n  }\r\n\r\n  showWarningBox(content: any, clearance: boolean) {\r\n    this.givingClearance = clearance;\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  saveClearance() {\r\n    this.clearanceModel.cleared = this.givingClearance;\r\n    this.portCallService.saveClearance(this.clearanceModel);\r\n  }\r\n\r\n  goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Activate Port Call\\\" icon=\\\"save.png\\\" class=\\\"text-center\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <div *ngIf=\\\"!detailsDataIsPristine\\\" class=\\\"row\\\">\\r\\n\\r\\n      <div *ngIf=\\\"detailsMeta.valid\\\" class=\\\"col\\\">\\r\\n        <div class=\\\"alert alert-warning\\\">\\r\\n          <span>Warning: Port Call Details are unsaved.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveDetails()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Details</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!detailsMeta.valid\\\" class=\\\"col\\\">\\r\\n        <div class=\\\"alert alert-danger\\\">\\r\\n          <span>Error: Port Call Details contains invalid data.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Details</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!portCallIsDraft\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <span>Port call is already active. You can still update the information.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"goBack()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/left-arrow.png\\\" height=\\\"24px\\\"> Return to overview</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"portCallIsDraft\\\">\\r\\n      <div *ngIf=\\\"detailsDataIsPristine && detailsMeta.valid\\\" class=\\\"col\\\">\\r\\n        <p class=\\\"mb-0\\\">After activating the port call, it will no longer be a draft, and it will be visble for authorities to review.</p>\\r\\n        <p>This action cannot be undone.</p>\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"send()\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\"> Activate</button>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!(detailsDataIsPristine && detailsMeta.valid)\\\" class=\\\"col\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\"> Activate</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { FormMetaData } from 'app/shared/interfaces/form-meta-data.interface';\r\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\nconst RESULT_SUCCES = 'This port call has been activated, and is now awaiting clearance.';\r\nconst RESULT_FAILURE = 'There was a problem when trying to activate this port call. Please try again later.';\r\n\r\n@Component({\r\n  selector: 'app-activate-port-call',\r\n  templateUrl: './activate-port-call.component.html',\r\n  styleUrls: ['./activate-port-call.component.css']\r\n})\r\nexport class ActivatePortCallComponent implements OnInit {\r\n\r\n  detailsDataIsPristine = true;\r\n  detailsIdentificationModel: any;\r\n  crewPassengersAndDimensionsModel: any;\r\n  purposeModel: any;\r\n  reportingModel: any;\r\n  otherPurposeName = '';\r\n  detailsMeta: FormMetaData;\r\n  detailsModel: PortCallDetailsModel = new PortCallDetailsModel();\r\n\r\n  portCallStatus: string;\r\n  portCallIsActive = false;\r\n  portCallIsDraft = false;\r\n  STATUS_ACTIVE = 'Active';\r\n  STATUS_DRAFT = 'Draft';\r\n\r\n  constructor(private contentService: ContentService, private portCallService: PortCallService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.detailsPristine$.subscribe(\r\n      detailsDataIsPristine => {\r\n        this.detailsDataIsPristine = detailsDataIsPristine;\r\n      }\r\n    );\r\n    this.portCallService.detailsIdentificationData$.subscribe(\r\n      detailsIdentificationData => {\r\n        if (detailsIdentificationData) { this.detailsIdentificationModel = detailsIdentificationData; }\r\n      }\r\n    );\r\n    this.portCallService.crewPassengersAndDimensionsData$.subscribe(\r\n      cpadData => {\r\n        if (cpadData) { this.crewPassengersAndDimensionsModel = cpadData; }\r\n      }\r\n    );\r\n    this.portCallService.reportingForThisPortCallData$.subscribe(\r\n      reportingData => {\r\n        if (reportingData) { this.reportingModel = reportingData; }\r\n      }\r\n    );\r\n    this.portCallService.portCallPurposeData$.subscribe(\r\n      purposeData => {\r\n        if (purposeData) { this.purposeModel = purposeData; }\r\n      }\r\n    );\r\n    this.portCallService.otherPurposeName$.subscribe(\r\n      otherPurposeNameData => {\r\n        if (otherPurposeNameData) { this.otherPurposeName = otherPurposeNameData; }\r\n      }\r\n    );\r\n    this.portCallService.crewPassengersAndDimensionsMeta$.subscribe(\r\n      metaData => {\r\n        this.detailsMeta = metaData;\r\n      }\r\n    );\r\n    this.portCallService.portCallStatusData$.subscribe(\r\n      statusData => {\r\n        if (statusData) {\r\n          if (statusData === this.STATUS_DRAFT) {\r\n            this.portCallIsDraft = true;\r\n          } else {\r\n            this.portCallIsDraft = false;\r\n          }\r\n          this.portCallStatus = statusData;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  saveDetails() {\r\n    this.detailsModel.portCallDetailsId = this.detailsIdentificationModel.portCallDetailsId;\r\n    this.detailsModel.portCallId = this.detailsIdentificationModel.portCallId;\r\n    this.detailsModel.numberOfCrew = this.crewPassengersAndDimensionsModel.numberOfCrew;\r\n    this.detailsModel.numberOfPassengers = this.crewPassengersAndDimensionsModel.numberOfPassengers;\r\n    this.detailsModel.airDraught = this.crewPassengersAndDimensionsModel.airDraught;\r\n    this.detailsModel.actualDraught = this.crewPassengersAndDimensionsModel.actualDraught;\r\n    this.detailsModel.reportingCargo = this.reportingModel.reportingCargo;\r\n    this.detailsModel.reportingCrew = this.reportingModel.reportingCrew;\r\n    this.detailsModel.reportingDpg = this.reportingModel.reportingDpg;\r\n    this.detailsModel.reportingPax = this.reportingModel.reportingPax;\r\n    this.detailsModel.reportingShipStores = this.reportingModel.reportingShipStores;\r\n    this.portCallService.saveDetails(this.detailsModel, this.purposeModel, this.otherPurposeName);\r\n    console.log('META: ', this.detailsMeta.valid, '\\nPRISTINE: ', this.detailsDataIsPristine);\r\n  }\r\n\r\n  send() {\r\n    this.portCallService.updatePortCallStatusActive(this.detailsIdentificationModel.portCallId).subscribe(\r\n      updateStatusResponse => {\r\n        console.log('Status successfully updated.');\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCES);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n      }\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css\n// module id = ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css\n// module chunks = main","module.exports = \"<app-confirmation-view></app-confirmation-view>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-activate-port-call></app-activate-port-call>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html\n// module id = ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  templateUrl: './confirmation.component.html',\r\n  styleUrls: ['./confirmation.component.css']\r\n})\r\nexport class ConfirmationComponent implements OnInit {\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ConfirmationComponent } from './confirmation.component';\r\nimport { ActivatePortCallComponent } from './activate-port-call/activate-port-call.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ConfirmationComponent,\r\n    ActivatePortCallComponent\r\n  ],\r\n  exports: [\r\n    ConfirmationComponent\r\n  ]\r\n})\r\nexport class ConfirmationModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"NEW PORT CALL DRAFT\\\" icon=\\\"portcall.png\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ship-location-time></app-ship-location-time>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-new-port-call-draft',\r\n  templateUrl: './new-port-call-draft.component.html',\r\n  styleUrls: ['./new-port-call-draft.component.css']\r\n})\r\nexport class NewPortCallDraftComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Confirm Port Call Draft\\\" icon=\\\"checkmark.png\\\">\\r\\n  <div *ngIf=\\\"!shipFound || !locationFound || !dateTimeFound\\\" class=\\\"text-center\\\">\\r\\n    <p *ngIf=\\\"!shipFound\\\" class=\\\"no-wrap mb-0\\\">No ship selected.</p>\\r\\n    <p *ngIf=\\\"!locationFound\\\" class=\\\"no-wrap mb-0\\\">No location selected.</p>\\r\\n    <p *ngIf=\\\"!dateTimeFound\\\" class=\\\"no-wrap\\\">ETA and ETD not set.</p>\\r\\n    <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Create Port Call Draft</button>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"shipFound && locationFound && dateTimeFound\\\" class=\\\"text-center\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table table-bordered\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n            <th>Ship flag</th>\\r\\n            <th>Ship name</th>\\r\\n            <th>Location Name</th>\\r\\n            <th>Location Code</th>\\r\\n            <th>ETA</th>\\r\\n            <th>ETD</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <img src=\\\"assets/images/Flags/128x128/{{shipModel.shipFlagCode.country.twoCharCode | lowercase}}.png\\\" height=\\\"20px\\\" />\\r\\n            </td>\\r\\n            <td>{{ shipModel.name }}</td>\\r\\n            <td>{{ locationModel.name }}</td>\\r\\n            <td>{{ locationModel.locationCode }}</td>\\r\\n            <td>{{ etaEtdModel.eta.year }}-{{ dateTimeFormat(etaEtdModel.eta.month) }}-{{ dateTimeFormat(etaEtdModel.eta.day)\\r\\n              }} {{ dateTimeFormat(etaEtdModel.eta.hour) }}:{{ dateTimeFormat(etaEtdModel.eta.minute) }}</td>\\r\\n            <td>{{ etaEtdModel.etd.year }}-{{ dateTimeFormat(etaEtdModel.etd.month) }}-{{ dateTimeFormat(etaEtdModel.etd.day)\\r\\n              }} {{ dateTimeFormat(etaEtdModel.etd.hour) }}:{{ dateTimeFormat(etaEtdModel.etd.minute) }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"startPortCallRegistration()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Create Port Call Draft</button>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { PortCallStatusTypes } from 'app/shared/constants/port-call-status-types';\r\nimport { EtaEtdDateTime } from 'app/shared/interfaces/eta-etd-interface';\r\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\r\nimport { PortCallModel } from 'app/shared/models/port-call-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\nconst RESULT_SUCCESS =\r\n  'The port call draft was successfully created. You will now be taken to the wizard for ' +\r\n  'registering the rest of the information and activating the port call.';\r\nconst RESULT_FAILURE =\r\n  'There was a problem when trying to create the new port call draft. Please try again later.';\r\n\r\n@Component({\r\n  selector: 'app-confirm-data',\r\n  templateUrl: './confirm-data.component.html',\r\n  styleUrls: ['./confirm-data.component.css']\r\n})\r\nexport class ConfirmDataComponent implements OnInit {\r\n  shipModel: any;\r\n  locationModel: any;\r\n  etaEtdModel: EtaEtdDateTime;\r\n  portCallModel: PortCallModel = new PortCallModel();\r\n\r\n  shipFound: boolean;\r\n  locationFound: boolean;\r\n  dateTimeFound: boolean;\r\n\r\n  constructor(\r\n    private portCallService: PortCallService,\r\n    private contentService: ContentService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.shipData$.subscribe(shipData => {\r\n      if (shipData) {\r\n        this.shipFound = true;\r\n        this.shipModel = shipData;\r\n      } else {\r\n        this.shipFound = false;\r\n      }\r\n    });\r\n    this.portCallService.locationData$.subscribe(locationData => {\r\n      if (locationData) {\r\n        this.locationFound = true;\r\n        this.locationModel = locationData;\r\n      } else {\r\n        this.locationFound = false;\r\n      }\r\n    });\r\n    this.portCallService.etaEtdData$.subscribe(etaEtdData => {\r\n      if (etaEtdData) {\r\n        this.dateTimeFound = this.etaEtdModel = etaEtdData;\r\n      } else {\r\n        this.dateTimeFound = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  dateTimeFormat(number: number) {\r\n    if (number <= 9) {\r\n      return '0' + number;\r\n    } else {\r\n      return number;\r\n    }\r\n  }\r\n\r\n  startPortCallRegistration() {\r\n    this.portCallModel.shipId = this.shipModel.shipId;\r\n    this.portCallModel.portCallStatusId = PortCallStatusTypes.DRAFT_ID;\r\n    this.portCallModel.locationId = this.locationModel.locationId;\r\n    const eta = new Date(\r\n      this.etaEtdModel.eta.year,\r\n      this.etaEtdModel.eta.month - 1,\r\n      this.etaEtdModel.eta.day,\r\n      this.etaEtdModel.eta.hour,\r\n      this.etaEtdModel.eta.minute\r\n    );\r\n    const etd = new Date(\r\n      this.etaEtdModel.etd.year,\r\n      this.etaEtdModel.etd.month - 1,\r\n      this.etaEtdModel.etd.day,\r\n      this.etaEtdModel.etd.hour,\r\n      this.etaEtdModel.etd.minute\r\n    );\r\n    this.portCallModel.locationEta = eta;\r\n    this.portCallModel.locationEtd = etd;\r\n    this.portCallService.registerNewPortCall(this.portCallModel).subscribe(\r\n      result => {\r\n        console.log('New port call successfully registered.');\r\n        // add list of authorities for clearance\r\n        console.log('Registering authority clearance agencies to port call...');\r\n        this.portCallService.registerClearanceAgenciesForPortCall(result);\r\n        // Set details\r\n        const portCallDetails = new PortCallDetailsModel();\r\n        portCallDetails.portCallId = result.portCallId;\r\n        portCallDetails.portCallDetailsId = result.portCallId;\r\n        this.portCallService.setDetails(portCallDetails);\r\n        this.openConfirmationModal(\r\n          ConfirmationModalComponent.TYPE_SUCCESS,\r\n          RESULT_SUCCESS\r\n        );\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(\r\n          ConfirmationModalComponent.TYPE_FAILURE,\r\n          RESULT_FAILURE\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goToPortCallWizard();\r\n        }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goToPortCallWizard();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private goToPortCallWizard() {\r\n    this.contentService.setPortCallForm('Port Call Details');\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_PORT_CALL);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Select Arrival and Departure Time\\\" icon=\\\"time.png\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div class=\\\"d-table mx-auto\\\">\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div class=\\\"d-table-cell p-1\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"eta_date_input\\\">ETA</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"eta.toggle()\\\" type=\\\"button\\\">\\r\\n                    <img src=\\\"assets/images/VoyageIcons/128x128/white/calendar.png\\\" height=\\\"24px\\\" />\\r\\n                  </button>\\r\\n                </div>\\r\\n                <input id=\\\"eta_date_input\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp-eta\\\" [showWeekNumbers]=\\\"true\\\"\\r\\n                  [(ngModel)]=\\\"etaDateModel\\\" ngbDatepicker #eta=\\\"ngbDatepicker\\\" (ngModelChange)=\\\"etaDateChanged($event)\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"d-table-cell p-1\\\">\\r\\n            <ngb-timepicker [(ngModel)]=\\\"etaTimeModel\\\" (ngModelChange)=\\\"etaTimeChanged($event)\\\" [minuteStep]=15></ngb-timepicker>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div *ngIf=\\\"!validEtaDateFormat\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n            <span>Invalid date format.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div class=\\\"d-table mx-auto\\\">\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div class=\\\"d-table-cell p-1\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"etd_date_input\\\">ETD</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"etd.toggle()\\\" type=\\\"button\\\">\\r\\n                    <img src=\\\"assets/images/VoyageIcons/128x128/white/calendar.png\\\" height=\\\"24px\\\" />\\r\\n                  </button>\\r\\n                </div>\\r\\n                <input id=\\\"etd_date_input\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp-etd\\\" [showWeekNumbers]=\\\"true\\\"\\r\\n                  [(ngModel)]=\\\"etdDateModel\\\" ngbDatepicker #etd=\\\"ngbDatepicker\\\" (ngModelChange)=\\\"etdDateChanged($event)\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"d-table-cell p-1\\\">\\r\\n            <ngb-timepicker [(ngModel)]=\\\"etdTimeModel\\\" (ngModelChange)=\\\"etdTimeChanged($event)\\\" [minuteStep]=15></ngb-timepicker>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div *ngIf=\\\"!validEtdDateFormat\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n            <span>Invalid date format.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"dateSequenceError\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8 alert alert-danger\\\" role=\\\"alert\\\">\\r\\n      <span>Departure date can not be before arrival date.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"timeSequenceError\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8 alert alert-danger\\\" role=\\\"alert\\\">\\r\\n      <span>Departure time must be after arrival time.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { EtaEtdDateTime } from './eta-etd-date-time.interface';\r\n\r\nconst equals = (one: NgbDateStruct, two: NgbDateStruct) =>\r\n  one &&\r\n  two &&\r\n  two.year === one.year &&\r\n  two.month === one.month &&\r\n  two.day === one.day;\r\n\r\nconst before = (one: NgbDateStruct, two: NgbDateStruct) =>\r\n  !one || !two\r\n    ? false\r\n    : one.year === two.year\r\n      ? one.month === two.month\r\n        ? one.day === two.day\r\n          ? false\r\n          : one.day < two.day\r\n        : one.month < two.month\r\n      : one.year < two.year;\r\n\r\nconst after = (one: NgbDateStruct, two: NgbDateStruct) =>\r\n  !one || !two\r\n    ? false\r\n    : one.year === two.year\r\n      ? one.month === two.month\r\n        ? one.day === two.day\r\n          ? false\r\n          : one.day > two.day\r\n        : one.month > two.month\r\n      : one.year > two.year;\r\n\r\n@Component({\r\n  selector: 'app-eta-etd',\r\n  templateUrl: './eta-etd.component.html',\r\n  styleUrls: ['./eta-etd.component.css']\r\n})\r\nexport class EtaEtdComponent implements OnInit {\r\n  etaEtdModel: EtaEtdDateTime = {\r\n    eta: { year: null, month: null, day: null, hour: 0, minute: 0 },\r\n    etd: { year: null, month: null, day: null, hour: 0, minute: 0 }\r\n  };\r\n\r\n  etaDateModel: NgbDateStruct;\r\n  etdDateModel: NgbDateStruct;\r\n\r\n  etaTimeModel: NgbTimeStruct;\r\n  etdTimeModel: NgbTimeStruct;\r\n\r\n  validEtaDateFormat = true;\r\n  validEtdDateFormat = true;\r\n  dateSequenceError = false;\r\n  timeSequenceError = false;\r\n\r\n  constructor(private portCallService: PortCallService) {}\r\n\r\n  etaDateChanged($event): void {\r\n    this.updateDateModel(this.etaEtdModel.eta, $event, 'eta');\r\n  }\r\n\r\n  etdDateChanged($event): void {\r\n    this.updateDateModel(this.etaEtdModel.etd, $event, 'etd');\r\n  }\r\n\r\n  private updateDateModel(model, $event, dateType: string): void {\r\n    if ($event != null) {\r\n      if (this.hasValidDateFormat($event)) {\r\n        this.updateValidDate(dateType, true);\r\n        model.year = $event.year;\r\n        model.month = $event.month;\r\n        model.day = $event.day;\r\n        this.validateData();\r\n        return;\r\n      } else {\r\n        this.updateValidDate(dateType, false);\r\n      }\r\n    } else {\r\n      this.updateValidDate(dateType, true);\r\n    }\r\n    model.year = null;\r\n    model.month = null;\r\n    model.day = null;\r\n    this.validateData();\r\n  }\r\n\r\n  private updateValidDate(dateType: string, valid: boolean) {\r\n    if (dateType === 'eta') {\r\n      this.validEtaDateFormat = valid;\r\n    } else if (dateType === 'etd') {\r\n      this.validEtdDateFormat = valid;\r\n    }\r\n  }\r\n\r\n  private hasValidDateFormat(model): boolean {\r\n    return typeof model !== 'string';\r\n  }\r\n\r\n  private validateData(): void {\r\n    if (\r\n      this.etaDateModel != null &&\r\n      this.etaDateModel.year != null &&\r\n      (this.etdDateModel != null && this.etdDateModel.year != null)\r\n    ) {\r\n      this.dateSequenceError = after(this.etaDateModel, this.etdDateModel);\r\n      if (equals(this.etaDateModel, this.etdDateModel)) {\r\n        if (\r\n          this.etaTimeModel != null &&\r\n          this.etaTimeModel.hour != null &&\r\n          (this.etdTimeModel != null && this.etdTimeModel.hour != null)\r\n        ) {\r\n          this.timeSequenceError =\r\n            this.etaTimeModel.hour > this.etdTimeModel.hour ||\r\n            (this.etaTimeModel.hour === this.etdTimeModel.hour &&\r\n              this.etaTimeModel.minute >= this.etdTimeModel.minute);\r\n        } else {\r\n          this.timeSequenceError = false;\r\n        }\r\n      } else {\r\n        this.timeSequenceError = false;\r\n      }\r\n    } else {\r\n      this.dateSequenceError = false;\r\n      this.timeSequenceError = false;\r\n    }\r\n\r\n    if (\r\n      !this.dateSequenceError &&\r\n      !this.timeSequenceError &&\r\n      this.hasRequiredData(this.etaEtdModel)\r\n    ) {\r\n      this.portCallService.setEtaEtdData(this.etaEtdModel);\r\n    } else {\r\n      this.portCallService.setEtaEtdData(null);\r\n    }\r\n  }\r\n\r\n  private hasRequiredData(model: EtaEtdDateTime): boolean {\r\n    return (\r\n      model.eta.year != null &&\r\n      model.eta.hour != null &&\r\n      model.etd.year != null &&\r\n      model.etd.hour != null\r\n    );\r\n  }\r\n\r\n  etaTimeChanged($event): void {\r\n    this.updateTimeModel(this.etaEtdModel.eta, $event);\r\n  }\r\n\r\n  etdTimeChanged($event): void {\r\n    this.updateTimeModel(this.etaEtdModel.etd, $event);\r\n  }\r\n\r\n  private updateTimeModel(model, $event): void {\r\n    if ($event != null) {\r\n      model.hour = $event.hour;\r\n      model.minute = $event.minute;\r\n    } else {\r\n      model.hour = null;\r\n      model.minute = null;\r\n    }\r\n    this.validateData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.etaEtdData$.subscribe(etaEtdData => {\r\n      if (etaEtdData != null) {\r\n        this.etaEtdModel = etaEtdData;\r\n      }\r\n    });\r\n\r\n    if (this.etaEtdModel != null) {\r\n      this.etaDateModel = {\r\n        year: this.etaEtdModel.eta.year,\r\n        month: this.etaEtdModel.eta.month,\r\n        day: this.etaEtdModel.eta.day\r\n      };\r\n      this.etaTimeModel = {\r\n        hour: this.etaEtdModel.eta.hour,\r\n        minute: this.etaEtdModel.eta.minute,\r\n        second: 0\r\n      };\r\n\r\n      this.etdDateModel = {\r\n        year: this.etaEtdModel.etd.year,\r\n        month: this.etaEtdModel.etd.month,\r\n        day: this.etaEtdModel.etd.day\r\n      };\r\n      this.etdTimeModel = {\r\n        hour: this.etaEtdModel.etd.hour,\r\n        minute: this.etaEtdModel.etd.minute,\r\n        second: 0\r\n      };\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Select Location\\\" icon=\\\"location.png\\\">\\r\\n\\r\\n    <div *ngIf=\\\"!locationFound\\\" class=\\\"text-center\\\">\\r\\n        <app-search-location [restrictTypeHarbour]=true [showDropdown]=true></app-search-location>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"locationFound\\\" class=\\\"text-center\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <th *ngIf=\\\"locationFlag\\\" class=\\\"bg-ssn text-ssn\\\">Flag</th>\\r\\n                    <th *ngFor=\\\"let entry of locationInfo\\\" class=\\\"bg-ssn text-ssn\\\">{{ entry.description }}</th>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <td *ngIf=\\\"locationFlag\\\">\\r\\n                        <img src=\\\"assets/images/Flags/128x128/{{locationFlag | lowercase}}.png\\\" height=\\\"20px\\\">\\r\\n                    </td>\\r\\n                    <td *ngFor=\\\"let entry of locationInfo\\\">\\r\\n                        <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n                        <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n                    </td>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectLocation()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n    </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LocationProperties } from 'app/shared/constants/location-properties';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-find-location',\r\n    templateUrl: './find-location.component.html',\r\n    styleUrls: ['./find-location.component.css'],\r\n    providers: [LocationService]\r\n})\r\nexport class FindLocationComponent implements OnInit {\r\n\r\n    locationFound = false;\r\n\r\n    locationFlag: string;\r\n    locationProperties = LocationProperties.PROPERTIES;\r\n    locationInfo: any[];\r\n    constructor(private portCallService: PortCallService, private locationService: LocationService) { }\r\n\r\n    deselectLocation() {\r\n        this.locationFound = false;\r\n        this.locationService.setLocationData(null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.locationService.locationData$.subscribe(\r\n            locationResult => {\r\n                if (locationResult) {\r\n                    this.locationFlag = (locationResult.country) ? locationResult.country.twoCharCode.toLowerCase() : null;\r\n                    this.locationProperties.COUNTRY.data = (locationResult.country) ? locationResult.country.name : null;\r\n                    this.locationProperties.LOCATION_TYPE.data = locationResult.locationType.name;\r\n                    this.locationProperties.LOCATION_NAME.data = locationResult.name;\r\n                    this.locationProperties.LOCATION_CODE.data = locationResult.locationCode;\r\n\r\n                    this.locationFound = true;\r\n                    this.portCallService.setLocationData(locationResult);\r\n                } else {\r\n                    this.locationFound = false;\r\n                    this.portCallService.setLocationData(null);\r\n                }\r\n                this.locationInfo = Object.values(this.locationProperties);\r\n            }\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Select Ship\\\" icon=\\\"ship.png\\\">\\r\\n\\r\\n  <div *ngIf=\\\"!shipFound\\\">\\r\\n    <app-search-ship></app-search-ship>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"shipFound\\\" class=\\\"text-center\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table table-bordered\\\">\\r\\n        <thead>\\r\\n          <th *ngIf=\\\"shipFlag\\\" class=\\\"bg-ssn text-ssn\\\">Flag</th>\\r\\n          <th *ngFor=\\\"let entry of shipInfo\\\" class=\\\"bg-ssn text-ssn\\\">{{ entry.description }}</th>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <td *ngIf=\\\"shipFlag\\\">\\r\\n            <img src=\\\"assets/images/Flags/128x128/{{shipFlag | lowercase}}.png\\\" height=\\\"20px\\\">\\r\\n          </td>\\r\\n          <td *ngFor=\\\"let entry of shipInfo\\\">\\r\\n            <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n            <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n          </td>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectShip()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ShipProperties } from 'app/shared/constants/ship-properties';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-find-ship',\r\n  templateUrl: './find-ship.component.html',\r\n  styleUrls: ['./find-ship.component.css'],\r\n  providers: [ShipService]\r\n})\r\nexport class FindShipComponent implements OnInit {\r\n\r\n  shipFlag: string;\r\n  shipFound = false;\r\n\r\n  shipProperties: any = ShipProperties.PROPERTIES;\r\n  shipInfo: any[];\r\n\r\n  constructor(private portCallService: PortCallService, private shipService: ShipService) { }\r\n\r\n  deselectShip() {\r\n    this.shipFound = false;\r\n    this.shipService.setShipOverviewData(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.shipService.setShipOverviewData(null);\r\n    this.shipService.shipOverviewData$.subscribe(\r\n      shipResult => {\r\n        if (shipResult) {\r\n          this.shipFlag = (shipResult.shipFlagCode.country) ? shipResult.shipFlagCode.country.twoCharCode.toLowerCase() : null;\r\n          this.shipProperties.SHIP_TYPE.data = (shipResult.shipType) ? shipResult.shipType.name : null;\r\n          this.shipProperties.SHIP_STATUS.data = (shipResult.shipStatus) ? shipResult.shipStatus.name : null;\r\n          this.shipProperties.SHIP_NAME.data = shipResult.name;\r\n          this.shipProperties.CALL_SIGN.data = shipResult.callSign;\r\n          this.shipProperties.IMO_NO.data = shipResult.imoNo;\r\n          this.shipProperties.MMSI_NO.data = shipResult.mmsiNo;\r\n          this.shipProperties.GROSS_TONNAGE.data = shipResult.grossTonnage;\r\n          this.shipProperties.LENGTH.data = shipResult.length;\r\n\r\n          this.shipFound = true;\r\n          this.portCallService.setShipData(shipResult);\r\n\r\n        } else {\r\n          this.shipFound = false;\r\n          this.shipProperties = ShipProperties.PROPERTIES;\r\n          this.portCallService.setShipData(null);\r\n        }\r\n        this.shipInfo = Object.values(this.shipProperties);\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-find-ship></app-find-ship>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-find-location></app-find-location>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-eta-etd></app-eta-etd>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-confirm-data></app-confirm-data>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ship-location-time',\r\n  templateUrl: './ship-location-time.component.html',\r\n  styleUrls: ['./ship-location-time.component.css']\r\n})\r\nexport class ShipLocationTimeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"View port call information\\\" *ngIf=\\\"permissions.view\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onViewClick()\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/eye.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.edit\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Edit port call\\\" *ngIf=\\\"portCallIsCancelled\\\" disabled>\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Edit port call\\\" (click)=\\\"onEditClick()\\\" *ngIf=\\\"!portCallIsCancelled\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.clearance\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"portCallIsCancelled\\\" disabled>\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/stamp.png\\\" height=\\\"16px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Review port call clearance\\\" (click)=\\\"onClearanceClick()\\\" *ngIf=\\\"!portCallIsCancelled\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/stamp.png\\\" height=\\\"16px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.cancel && !portCallIsDraft\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"portCallIsDraft || portCallIsCancelled\\\" disabled>\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"16px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Cancel port call\\\" (click)=\\\"onCancelClick(cancelModal)\\\" *ngIf=\\\"!(portCallIsDraft || portCallIsCancelled)\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"16px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.delete && portCallIsDraft\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Delete port call\\\" (click)=\\\"onDeleteClick(deleteModal)\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/trash.png\\\" height=\\\"16px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #cancelModal let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Cancel Port Call</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n      <span>Are you sure you wish to cancel this port call?</span>\\r\\n      <br>\\r\\n      <span>This action cannot be undone.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"cancelPortCall(); close\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span>Cancel Port Call</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\r\\n      <span>Exit</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #deleteModal let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Delete Port Call</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n      <span>Are you sure you wish to delete this port call?</span>\\r\\n      <br>\\r\\n      <span>This action cannot be undone.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"deletePortCall(); close\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span>Delete Port Call</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\r\\n      <span>Exit</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ViewCell } from 'ng2-smart-table';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { PortCallClaims } from 'app/shared/constants/port-call-claims';\r\nimport { PortCallStatusTypes } from 'app/shared/constants/port-call-status-types';\r\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallOverviewService } from 'app/shared/services/port-call-overview.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-button-row',\r\n  templateUrl: './button-row.component.html',\r\n  styleUrls: ['./button-row.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class ButtonRowComponent implements ViewCell, OnInit {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  overviewData: any[];\r\n  draftOverviewData: any[];\r\n  clearedOverviewData: any[];\r\n\r\n  permissions = PortCallClaims.buttonRowPermissions;\r\n  portCallIsDraft = false;\r\n  portCallIsCancelled = false;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private overviewService: PortCallOverviewService,\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallIsDraft = (this.rowData.overviewModel.status === PortCallStatusTypes.DRAFT);\r\n    this.portCallIsCancelled = (this.rowData.overviewModel.status === PortCallStatusTypes.CANCELLED);\r\n    this.accountService.userClaimsData$.subscribe(\r\n      userClaims => {\r\n        if (userClaims) {\r\n          // Find user claims where claim type is Port Call\r\n          const userClaimsTypePortCall = userClaims.filter(claim => claim.type === PortCallClaims.TYPE);\r\n          const keys = Object.keys(this.permissions);\r\n          keys.forEach(key => {\r\n            this.permissions[key] = (userClaimsTypePortCall.some(claim => claim.value.toUpperCase() === key.toString().toUpperCase()));\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    this.overviewService.overviewData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.overviewData = results;\r\n        }\r\n      }\r\n    );\r\n    this.overviewService.draftOverviewData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.draftOverviewData = results;\r\n        }\r\n      }\r\n    );\r\n    this.overviewService.clearedByUserAgencyOverviewData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.clearedOverviewData = results;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onViewClick() {\r\n    this.setContent(CONTENT_NAMES.VIEW_PORT_CALL);\r\n  }\r\n\r\n  onEditClick() {\r\n    this.contentService.setPortCallForm('Port Call Details');\r\n    this.setContent(CONTENT_NAMES.REGISTER_PORT_CALL);\r\n  }\r\n\r\n  onClearanceClick() {\r\n    this.setContent(CONTENT_NAMES.PORT_CALL_CLEARANCE);\r\n  }\r\n\r\n  onCancelClick(content: any) {\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  onDeleteClick(content: any) {\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  cancelPortCall() {\r\n    const pcId = this.rowData.overviewModel.portCall.portCallId;\r\n    this.rowData.overviewModel.status = PortCallStatusTypes.CANCELLED;\r\n    const htmlStatus = `<div class=\"text-danger\">` + this.rowData.overviewModel.status + `</div>`;\r\n    if (this.overviewData.find(r => r.overviewModel.portCall.portCallId === pcId)) {\r\n      this.overviewData.find(r => r.overviewModel.portCall.portCallId === pcId).status = htmlStatus;\r\n      this.overviewService.setOverviewData(this.overviewData);\r\n    }\r\n    if (this.draftOverviewData.find(r => r.overviewModel.portCallId === pcId)) {\r\n      this.draftOverviewData.find(r => r.overviewModel.portCall.portCallId === pcId).status = htmlStatus;\r\n      this.overviewService.setDraftData(this.draftOverviewData);\r\n    }\r\n    if (this.clearedOverviewData.find(r => r.overviewModel.portCallId === pcId)) {\r\n      this.clearedOverviewData.find(r => r.overviewModel.portCall.portCallId === pcId).status = htmlStatus;\r\n      this.overviewService.setClearedData(this.clearedOverviewData);\r\n    }\r\n    this.portCallService.updatePortCallStatusCancelled(this.rowData.overviewModel.portCall.portCallId);\r\n\r\n  }\r\n\r\n  deletePortCall() {\r\n    this.portCallService.deletePortCallDraft(this.rowData.overviewModel.portCall).subscribe(\r\n      deleteResponse => {\r\n        if (deleteResponse) {\r\n          const newOverviewData = this.overviewData.filter(row => row !== this.rowData);\r\n          const newDraftData = this.draftOverviewData.filter(row => row !== this.rowData);\r\n          const newClearedData = this.clearedOverviewData.filter(row => row !== this.rowData);\r\n          this.overviewService.setOverviewData(newOverviewData);\r\n          this.overviewService.setDraftData(newDraftData);\r\n          this.overviewService.setClearedData(newClearedData);\r\n          console.log(deleteResponse);\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  private setContent(content: string) {  // NEW CLEANUP\r\n    this.setPortCall(content);\r\n  }\r\n\r\n  // NEW CLEANUP - Set methods\r\n  setPortCall(content) {\r\n    this.overviewService.setLoadingPortCall(true);\r\n    this.contentService.setLoadingScreen(true, 'portcall.gif', 'Loading');\r\n    this.overviewService.getOverview(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.portCallService.setPortCall(data);\r\n          this.setPurpose(content);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  setPurpose(content) {\r\n    this.portCallService.getPurposeByPortCallId(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n      purposeData => {\r\n        if (purposeData) {\r\n          if (purposeData.find(p => p.name === 'Other')) {\r\n            this.portCallService.getOtherName(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n              otherNameData => {\r\n                this.portCallService.setOtherPurposeName(otherNameData);\r\n                this.portCallService.setPortCallPurposeData(purposeData);\r\n                this.setDetails(content);\r\n              }\r\n            );\r\n          } else {\r\n            this.portCallService.setPortCallPurposeData(purposeData);\r\n            this.setDetails(content);\r\n          }\r\n        } else {\r\n          console.log('No purpose information has been registered for this port call.');\r\n        }\r\n      },\r\n      error => {\r\n        console.log('Get Purpose Error: ', error);\r\n      }\r\n    );\r\n  }\r\n  setDetails(content) {\r\n    this.portCallService.getDetailsByPortCallId(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n      detailsData => {\r\n        if (detailsData) {\r\n          this.portCallService.setDetails(detailsData);\r\n        } else {\r\n          console.log('No details information has been registered for this port call.');\r\n          const portCallDetails = new PortCallDetailsModel();\r\n          portCallDetails.portCallDetailsId = this.rowData.overviewModel.portCall.portCallId;\r\n          portCallDetails.portCallId = this.rowData.overviewModel.portCall.portCallId;\r\n          this.portCallService.setDetails(portCallDetails);\r\n        }\r\n        this.contentService.setContent(content);\r\n\r\n      },\r\n      error => {\r\n        console.log('Get Details Error: ', error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"no-wrap\\\">\\r\\n  <span *ngFor=\\\"let clearance of clearanceList\\\">\\r\\n    <span class=\\\"badge badge-warning\\\" ngbTooltip=\\\"Not reviewed by {{ clearance.organization.name }}\\\" *ngIf=\\\"clearance.cleared === null\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/stamp.png\\\" height=\\\"16px\\\">\\r\\n    </span>\\r\\n    <span class=\\\"badge badge-success\\\" ngbTooltip=\\\"Cleared by {{ clearance.organization.name }}\\\" *ngIf=\\\"clearance.cleared === true\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"16px\\\">\\r\\n    </span>\\r\\n    <span class=\\\"badge badge-danger\\\" ngbTooltip=\\\"Rejected by {{ clearance.organization.name }}\\\" *ngIf=\\\"clearance.cleared === false\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/rejected.png\\\" height=\\\"16px\\\">\\r\\n    </span>\\r\\n  </span>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ViewCell } from 'ng2-smart-table';\r\n\r\n@Component({\r\n  selector: 'app-clearance-row',\r\n  templateUrl: './clearance-row.component.html',\r\n  styleUrls: ['./clearance-row.component.css']\r\n})\r\nexport class ClearanceRowComponent implements OnInit, ViewCell {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  clearanceList: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.clearanceList = this.rowData.overviewModel.clearanceList;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n}\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n    color: black;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: '';\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a { \\r\\n    color:var(--color-primary-text); \\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link { \\r\\n    color: var(--color-primary-dark); \\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;        \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/overview.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/overview.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\r\\n        <app-ssn-card header=\\\"Options\\\" icon=\\\"cogs.png\\\" collapsible=\\\"true\\\" collapsed=\\\"true\\\">\\r\\n            <div>\\r\\n                <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"!showCancelledPortCalls\\\" (click)=\\\"toggleCancelledPortCalls(true)\\\">Show cancelled port calls</button>\\r\\n                <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"showCancelledPortCalls\\\" (click)=\\\"toggleCancelledPortCalls(false)\\\">Hide cancelled port calls</button>\\r\\n            </div>\\r\\n        </app-ssn-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3\\\">\\r\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n        <thead class=\\\"bg-ssn text-white\\\">\\r\\n            <tr>\\r\\n                <th class=\\\"py-1\\\">\\r\\n                    <h5 class=\\\"mb-0\\\">Active Port Calls</h5>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n    </table>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"overviewSource\\\"></ng2-smart-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3\\\" *ngIf=\\\"permissions.edit\\\">\\r\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n        <thead class=\\\"bg-ssn text-white\\\">\\r\\n            <tr>\\r\\n                <th class=\\\"py-1\\\">\\r\\n                    <h5 class=\\\"mb-0\\\">Port Call Drafts</h5>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n    </table>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"draftOverviewSource\\\"></ng2-smart-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3\\\" *ngIf=\\\"userIsGovernmentAgency\\\">\\r\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n        <thead class=\\\"bg-ssn text-white\\\">\\r\\n            <tr>\\r\\n                <th class=\\\"py-1\\\">\\r\\n                    <h5 class=\\\"mb-0\\\">Cleared Port Calls</h5>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n    </table>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"clearedByUserAgencyOverviewSource\\\"></ng2-smart-table>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/overview.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/overview.component.html\n// module chunks = main","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { OrganizationTypes } from 'app/shared/constants/organization-types';\r\nimport { PortCallClaims } from 'app/shared/constants/port-call-claims';\r\nimport { PortCallStatusTypes } from 'app/shared/constants/port-call-status-types';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\nimport { PortCallOverviewService } from 'app/shared/services/port-call-overview.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { ButtonRowComponent } from './button-row/button-row.component';\r\nimport { ClearanceRowComponent } from './clearance-row/clearance-row.component';\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.component.html',\r\n  styleUrls: ['./overview.component.css'],\r\n  providers: [PortCallOverviewService, OrganizationService, DatePipe]\r\n})\r\nexport class OverviewComponent implements OnInit {\r\n  permissions = PortCallClaims.portCallPermissions;\r\n  overviewList = [];\r\n  draftOverviewList = [];\r\n  cancelledOverviewList = [];\r\n  clearedByUserAgencyOverviewList = [];\r\n  userOrganization: any;\r\n  userIsGovernmentAgency = false;\r\n  overviewSource: LocalDataSource = new LocalDataSource();\r\n  draftOverviewSource: LocalDataSource = new LocalDataSource();\r\n  clearedByUserAgencyOverviewSource: LocalDataSource = new LocalDataSource();\r\n\r\n  showCancelledPortCalls = false;\r\n\r\n  // Smart table\r\n  tableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    noDataMessage: 'There are no port calls in this list.',\r\n\r\n    columns: {\r\n      shipName: {\r\n        title: 'Ship Name',\r\n        type: 'html'\r\n      },\r\n      callSign: {\r\n        title: 'Call Sign',\r\n        type: 'html'\r\n      },\r\n      locationName: {\r\n        title: 'Location Name',\r\n        type: 'html'\r\n      },\r\n      eta: {\r\n        title: 'ETA',\r\n        type: 'html'\r\n      },\r\n      etd: {\r\n        title: 'ETD',\r\n        type: 'html'\r\n      },\r\n      status: {\r\n        title: 'Status',\r\n        type: 'html'\r\n      },\r\n      clearances: {\r\n        title: 'Clearances',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: ClearanceRowComponent\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: ButtonRowComponent\r\n      }\r\n    }\r\n  };\r\n\r\n  overviewRow(ov) {\r\n    const row = {\r\n      overviewModel: ov,\r\n      shipName:\r\n        `<div class=\"no-wrap\"><div hidden>` +\r\n        ov.ship.name + // ugly fix for alphabetical sorting but it works\r\n        `</div> <div> <img src='assets/images/Flags/128x128/` +\r\n        ov.ship.shipFlagCode.country.twoCharCode.toLowerCase() +\r\n        `.png' height='20px'/> ` +\r\n        ov.ship.name +\r\n        `</div></div>`,\r\n      callSign:\r\n        ov.ship.callSign ||\r\n        `<span class=\"font-italic no-wrap\">Not provided.</span>`,\r\n      locationName:\r\n        `<div hidden>` +\r\n        ov.location.name + // same ugly fix as ship name\r\n        `</div> <div> <img src='assets/images/Flags/128x128/` +\r\n        ov.location.country.twoCharCode.toLowerCase() +\r\n        `.png' height='20px'/> ` +\r\n        ov.location.name +\r\n        `</div>`,\r\n      eta:\r\n        `<span class=\"no-wrap\">` +\r\n        this.datePipe.transform(ov.portCall.locationEta, 'yyyy-MM-dd') +\r\n        `</span> <span class=\"no-wrap\">` +\r\n        this.datePipe.transform(ov.portCall.locationEta, 'HH:mm') +\r\n        `</span>`,\r\n      etd:\r\n        `<span class=\"no-wrap\">` +\r\n        this.datePipe.transform(ov.portCall.locationEtd, 'yyyy-MM-dd') +\r\n        `</span> <span class=\"no-wrap\">` +\r\n        this.datePipe.transform(ov.portCall.locationEtd, 'HH:mm') +\r\n        `</span>`,\r\n      status:\r\n        ov.status === PortCallStatusTypes.CANCELLED\r\n          ? `<div class=\"text-danger\">` + ov.status + `</div>`\r\n          : ov.status,\r\n      clearances:\r\n        'clearances',\r\n      actions: 'btn'\r\n    };\r\n    return row;\r\n  }\r\n\r\n  loadOverview() {\r\n    this.overviewService.showCancelledPortCall$.subscribe(showCancelledPortCalls => {\r\n      if (showCancelledPortCalls !== null) {\r\n        this.showCancelledPortCalls = showCancelledPortCalls;\r\n        let portCallList = this.overviewList;\r\n        if (showCancelledPortCalls) {\r\n          portCallList = portCallList.concat(this.cancelledOverviewList);\r\n        }\r\n        this.overviewService.setOverviewData(portCallList.sort(\r\n          (row1, row2) => row2.overviewModel.portCall.portCallId - row1.overviewModel.portCall.portCallId\r\n        ));\r\n      }\r\n    });\r\n    this.overviewService.overviewData$.subscribe(results => {\r\n      if (results) {\r\n        this.overviewSource.load(results);\r\n      }\r\n    });\r\n    if (!this.userIsGovernmentAgency) {\r\n      this.overviewService.draftOverviewData$.subscribe(results => {\r\n        if (results) {\r\n          this.draftOverviewSource.load(results);\r\n        }\r\n      });\r\n    } else {\r\n      this.overviewService.clearedByUserAgencyOverviewData$.subscribe(results => {\r\n        if (results) {\r\n          this.clearedByUserAgencyOverviewSource.load(results);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.overviewService.getPortCalls().subscribe(\r\n      pcData => {\r\n        if (pcData) {\r\n          this.contentService.setLoadingScreen(true, 'portcall.gif', 'LOADING PORT CALLS');\r\n          if (pcData.length === 0) {\r\n            this.contentService.setLoadingScreen(false, null, null);\r\n          } else {\r\n            let index = 0;\r\n            const finalIndex = pcData.length - 1;\r\n            pcData.forEach(pc => {\r\n              this.overviewService.getPartialOverview(pc.portCallId).subscribe(\r\n                ov => {\r\n                  if (ov) {\r\n                    const row = this.overviewRow(ov);\r\n                    // Case: port call is incomplete (status: draft)\r\n                    if (ov.status === PortCallStatusTypes.DRAFT) {\r\n                      this.draftOverviewList.push(row);\r\n                    } else if (\r\n                      this.userIsGovernmentAgency &&\r\n                      ov.clearanceList &&\r\n                      ov.clearanceList.some(\r\n                        clearance => clearance.organizationId === this.userOrganization.organizationId && clearance.cleared != null\r\n                      )\r\n                    ) {\r\n                      this.clearedByUserAgencyOverviewList.push(row);\r\n                    } else if (ov.status === PortCallStatusTypes.CANCELLED) {\r\n                      this.cancelledOverviewList.push(row);\r\n                    } else {\r\n                      this.overviewList.push(row);\r\n                    }\r\n                    this.overviewService.setOverviewData(this.overviewList.sort(\r\n                      (row1, row2) => row2.overviewModel.portCall.portCallId - row1.overviewModel.portCall.portCallId\r\n                    ));\r\n                    this.overviewService.setDraftData(this.draftOverviewList);\r\n                    this.overviewService.setClearedData(this.clearedByUserAgencyOverviewList);\r\n                  }\r\n                },\r\n                error => console.log(error),\r\n                () => {\r\n                  if (index++ >= finalIndex) {\r\n                    this.contentService.setLoadingScreen(false, null, null);\r\n                  }\r\n                }\r\n              );\r\n            });\r\n          }\r\n        }\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private datePipe: DatePipe,\r\n    private accountService: AccountService,\r\n    private organizationService: OrganizationService,\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService,\r\n    private overviewService: PortCallOverviewService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.accountService.userClaimsData$.subscribe(userClaims => {\r\n      if (userClaims) {\r\n        const userClaimsTypePortCall = userClaims.filter(\r\n          claim => claim.type === PortCallClaims.TYPE\r\n        ); // Find user claims where claim type is Port Call\r\n        const keys = Object.keys(this.permissions);\r\n        keys.forEach(key => {\r\n          this.permissions[key] = userClaimsTypePortCall.some(\r\n            claim => claim.value.toUpperCase() === key.toString().toUpperCase()\r\n          );\r\n        });\r\n      }\r\n    });\r\n    this.organizationService\r\n      .getOrganizationForUser()\r\n      .subscribe(organizationResult => {\r\n        if (organizationResult) {\r\n          this.userIsGovernmentAgency =\r\n            organizationResult.organizationType &&\r\n            organizationResult.organizationType.name ===\r\n            OrganizationTypes.GOVERNMENT_AGENCY_STRING;\r\n          if (this.userIsGovernmentAgency) {\r\n            this.portCallService.setClearance(organizationResult);\r\n          }\r\n        }\r\n        this.userOrganization = organizationResult;\r\n        this.loadOverview();\r\n      });\r\n  }\r\n\r\n  toggleCancelledPortCalls(showCancelled) {\r\n    this.overviewService.setShowCancelledPortCalls(showCancelled);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/overview.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/port-call.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"permissions.register\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\r\\n        <app-ssn-card header=\\\"New Port Call\\\" icon=\\\"portcall.png\\\">\\r\\n            <div class=\\\"text-center\\\">\\r\\n                <p>To register a new port call, you have to create a port call draft, and then activate it.</p>\\r\\n                <button class=\\\"btn btn-ssn\\\" (click)=\\\"selectRegister()\\\">New Port Call Draft</button>\\r\\n            </div>\\r\\n        </app-ssn-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <app-overview></app-overview>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/port-call.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { PortCallClaims } from 'app/shared/constants/port-call-claims';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { PortCallOverviewService } from 'app/shared/services/port-call-overview.service';\r\n\r\n@Component({\r\n  selector: 'app-port-call',\r\n  templateUrl: './port-call.component.html',\r\n  styleUrls: ['./port-call.component.css']\r\n})\r\nexport class PortCallComponent implements OnInit {\r\n  selectedComponent: string;\r\n  permissions = PortCallClaims.portCallPermissions;\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.accountService.userClaimsData$.subscribe(userClaims => {\r\n      if (userClaims) {\r\n        const userClaimsTypePortCall = userClaims.filter(\r\n          claim => claim.type === PortCallClaims.TYPE\r\n        );\r\n        const keys = Object.keys(this.permissions);\r\n        keys.forEach(key => {\r\n          this.permissions[key] = userClaimsTypePortCall.some(\r\n            claim => claim.value.toUpperCase() === key.toString().toUpperCase()\r\n          );\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  selectRegister() {\r\n    this.portCallService.wipeServiceData();\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_PORT_CALL_DRAFT);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/port-call.component.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ClearanceComponent } from './clearance/clearance.component';\r\nimport { ConfirmationModule } from './confirmation/confirmation.module';\r\nimport { NewPortCallDraftComponent } from './new-port-call-draft/new-port-call-draft.component';\r\nimport { ConfirmDataComponent } from './new-port-call-draft/ship-location-time/confirm-data/confirm-data.component';\r\nimport { EtaEtdComponent } from './new-port-call-draft/ship-location-time/eta-etd/eta-etd.component';\r\nimport { FindLocationComponent } from './new-port-call-draft/ship-location-time/find-location/find-location.component';\r\nimport { FindShipComponent } from './new-port-call-draft/ship-location-time/find-ship/find-ship.component';\r\nimport { ShipLocationTimeComponent } from './new-port-call-draft/ship-location-time/ship-location-time.component';\r\nimport { ButtonRowComponent } from './overview/button-row/button-row.component';\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { PortCallComponent } from './port-call.component';\r\nimport { FormsComponent } from './registration/forms/forms.component';\r\nimport { PortCallDetailsComponent } from './registration/forms/port-call-details/port-call-details.component';\r\nimport { PurposeComponent } from './registration/forms/port-call-details/purpose/purpose.component';\r\nimport { ReportingComponent } from './registration/forms/port-call-details/reporting/reporting.component';\r\nimport { SaveDetailsComponent } from './registration/forms/port-call-details/save-details/save-details.component';\r\nimport { ProgressBarComponent } from './registration/progress-bar/progress-bar.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ViewPortCallComponent } from './view-port-call/view-port-call.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CrewPassengersDimensionsComponent } from './registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component';\r\nimport { ClearanceRowComponent } from './overview/clearance-row/clearance-row.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    Ng2SmartTableModule,\r\n    NgSelectModule,\r\n    ConfirmationModule,\r\n    SharedModule\r\n  ],\r\n  entryComponents: [ButtonRowComponent, ClearanceRowComponent],\r\n  declarations: [\r\n    RegistrationComponent,\r\n    ProgressBarComponent,\r\n    FormsComponent,\r\n    ShipLocationTimeComponent,\r\n    FindShipComponent,\r\n    FindLocationComponent,\r\n    EtaEtdComponent,\r\n    ConfirmDataComponent,\r\n    PortCallDetailsComponent,\r\n    ReportingComponent,\r\n    CrewPassengersDimensionsComponent,\r\n    PurposeComponent,\r\n    OverviewComponent,\r\n    PortCallComponent,\r\n    ButtonRowComponent,\r\n    ViewPortCallComponent,\r\n    ClearanceComponent,\r\n    SaveDetailsComponent,\r\n    NewPortCallDraftComponent,\r\n    ClearanceRowComponent\r\n  ],\r\n  exports: [\r\n    PortCallComponent,\r\n    NewPortCallDraftComponent,\r\n    RegistrationComponent,\r\n    ViewPortCallComponent,\r\n    ClearanceComponent\r\n  ],\r\n  providers: [PortCallService]\r\n})\r\nexport class PortCallModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/port-call.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/forms.component.css\n// module chunks = main","module.exports = \"<app-progress-bar></app-progress-bar>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <app-ship-info-table></app-ship-info-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <app-location-time-info-table></app-location-time-info-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div [ngSwitch]=\\\"selectedComponent\\\">\\r\\n    <app-port-call-details *ngSwitchCase=\\\"'Port Call Details'\\\"></app-port-call-details>\\r\\n\\r\\n    <app-confirmation *ngSwitchCase=\\\"'Confirm and Activate'\\\"></app-confirmation>\\r\\n    <div *ngSwitchDefault class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        This page is not implemented yet.\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/forms.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-forms',\r\n  templateUrl: './forms.component.html',\r\n  styleUrls: ['./forms.component.css']\r\n})\r\nexport class FormsComponent implements OnInit {\r\n\r\n  selectedComponent: string;\r\n\r\n  constructor(private contentService: ContentService, private portCallService: PortCallService, private shipService: ShipService) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.shipData$.subscribe(\r\n      shipResult => {\r\n        this.shipService.setShipOverviewData(shipResult);\r\n      }\r\n    );\r\n    this.contentService.portCallFormName$.subscribe(\r\n      content => {\r\n        this.selectedComponent = content;\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Crew, Passengers and Dimensions\\\" icon=\\\"crew.png\\\">\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"number_of_crew\\\">Number of Crew</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input name=\\\"number_of_crew\\\" type=\\\"number\\\" #numberOfCrew=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter number of crew\\\"\\r\\n              integerValidator positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.numberOfCrew\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(numberOfCrew.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"numberOfCrew.hasError('notIntegerError')\\\">\\r\\n            <small>Number of crew must be an integer.</small>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"numberOfCrew.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Number of crew must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-form-label-sm no-wrap col-sm-5 col-md-3 col-lg-5\\\" for=\\\"number_of_passengers\\\">Number of Passengers</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input name=\\\"number_of_passengers\\\" type=\\\"number\\\" #numberOfPassengers=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter number of passengers\\\"\\r\\n              integerValidator positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.numberOfPassengers\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(numberOfPassengers.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"numberOfPassengers.hasError('notIntegerError')\\\">\\r\\n            <small>Number of passengers must be an integer.</small>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"numberOfPassengers.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Number of passengers must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"actual_draught\\\">Actual Draught</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input name=\\\"actual_draught\\\" type=\\\"number\\\" #actualDraught=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter actual draught\\\"\\r\\n              positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.actualDraught\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(actualDraught.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"actualDraught.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Actual draught must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"air_draught\\\">Air Draught</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input name=\\\"air_draught\\\" type=\\\"number\\\" #airDraught=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter air draught\\\" \\r\\n              positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.airDraught\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(airDraught.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"airDraught.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Air draught must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { CrewPassengersAndDimensionsModel } from './crewPassengersAndDimensionsModel';\r\n\r\n@Component({\r\n  selector: 'app-crew-passengers-dimensions',\r\n  templateUrl: './crew-passengers-dimensions.component.html',\r\n  styleUrls: ['./crew-passengers-dimensions.component.css']\r\n})\r\nexport class CrewPassengersDimensionsComponent implements OnInit {\r\n\r\n  @ViewChild(NgForm) form: NgForm;\r\n\r\n  crewPassengersAndDimensionsModel: CrewPassengersAndDimensionsModel = {\r\n    numberOfCrew: null,\r\n    numberOfPassengers: null,\r\n    actualDraught: null,\r\n    airDraught: null\r\n  };\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.crewPassengersAndDimensionsData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.crewPassengersAndDimensionsModel = data;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  persistData() {\r\n    this.portCallService.setCrewPassengersAndDimensionsData(this.crewPassengersAndDimensionsModel);\r\n  }\r\n\r\n  isValid(valid: boolean): boolean {\r\n    this.sendMetaData();\r\n    return valid;\r\n  }\r\n\r\n  private sendMetaData(): void {\r\n    this.portCallService.setCrewPassengersAndDimensionsMeta({ valid: this.form.valid });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-reporting></app-reporting>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-crew-passengers-dimensions></app-crew-passengers-dimensions>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-purpose></app-purpose>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-save-details></app-save-details>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-port-call-details',\r\n  templateUrl: './port-call-details.component.html',\r\n  styleUrls: ['./port-call-details.component.css']\r\n})\r\nexport class PortCallDetailsComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Port Call Purpose\\\" icon=\\\"target.png\\\">\\r\\n  <label for=\\\"purposes\\\">\\r\\n    <span class=\\\"no-wrap\\\">Select purposes for this</span>\\r\\n    <span class=\\\"no-wrap\\\">port call.</span>\\r\\n  </label>\\r\\n  <ng-select id=\\\"purposes\\\" [items]=\\\"purposeList\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select purposes\\\"\\r\\n    [(ngModel)]=\\\"selectedPurposes\\\" (change)=\\\"purposeSelected()\\\">\\r\\n  </ng-select>\\r\\n\\r\\n  <div *ngIf=\\\"otherPurposeSelected\\\" class=\\\"form-group row mt-3\\\">\\r\\n    <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"other_purpose\\\">Specify Other Purpose:</label>\\r\\n    <div class=\\\"col my-auto\\\">\\r\\n      <input [(ngModel)]=\\\"otherPurposeName\\\" name=\\\"other_purpose\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"other_purpose\\\"\\r\\n        placeholder=\\\"Enter other purpose\\\" (ngModelChange)=\\\"setOtherPurposeName()\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { PurposeService } from 'app/shared/services/purpose.service';\r\n\r\nconst OTHER_PURPOSE_ID = 100249;\r\n\r\n@Component({\r\n  selector: 'app-purpose',\r\n  templateUrl: './purpose.component.html',\r\n  styleUrls: ['./purpose.component.css'],\r\n  providers: [PurposeService]\r\n})\r\nexport class PurposeComponent implements OnInit {\r\n\r\n  selectedPurposes = [];\r\n  purposeList: any[] = [];\r\n  amountOfPurposes = 0;\r\n\r\n  otherPurposeSelected = false;\r\n  otherPurposeName = '';\r\n\r\n  constructor(private purposeService: PurposeService, private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.purposeService.getPurposes().subscribe(\r\n      data => {\r\n        this.purposeList = data;\r\n        this.amountOfPurposes = Object.keys(this.purposeList).length;\r\n      }\r\n    );\r\n    this.portCallService.portCallPurposeData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.selectedPurposes = data;\r\n          this.otherPurposeSelected = (this.selectedPurposes.find(p => p.portCallPurposeId === OTHER_PURPOSE_ID) != null);\r\n        }\r\n      }\r\n    );\r\n    this.portCallService.otherPurposeName$.subscribe(\r\n      data => {\r\n        this.otherPurposeName = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  purposeSelected() {\r\n    this.portCallService.setPortCallPurposeData(this.selectedPurposes);\r\n    console.log('SELECTED: ', this.selectedPurposes);\r\n    if (this.otherPurposeSelected) {\r\n      this.setOtherPurposeName();\r\n    }\r\n  }\r\n\r\n  setOtherPurposeName() {\r\n    this.portCallService.setOtherPurposeName(this.otherPurposeName);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Reporting for this Port Call\\\" icon=\\\"verification-clipboard.png\\\">\\r\\n  <form class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-check mx-2\\\" *ngFor=\\\"let cb of checkboxes\\\">\\r\\n      <input class=\\\"form-check-input clickable\\\" type=\\\"checkbox\\\" id=\\\"{{cb.name}}\\\" [checked]=\\\"cb.checked\\\" (change)=\\\"checkboxChecked(cb)\\\">\\r\\n      <label class=\\\"form-check-label clickable\\\" for=\\\"{{cb.name}}\\\">\\r\\n        <img src=\\\"{{baseIconUrl}}{{cb.icon}}\\\" height=\\\"16px\\\">{{cb.name}}\\r\\n      </label>\\r\\n    </div>\\r\\n  </form>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-reporting',\r\n  templateUrl: './reporting.component.html',\r\n  styleUrls: ['./reporting.component.css']\r\n})\r\nexport class ReportingComponent implements OnInit {\r\n\r\n  baseIconUrl = 'assets/images/VoyageIcons/128x128/';\r\n  reportingModel: {\r\n    reportingDpg: boolean,\r\n    reportingCargo: boolean,\r\n    reportingShipStores: boolean,\r\n    reportingCrew: boolean,\r\n    reportingPax: boolean,\r\n  };\r\n  checkboxes: any = [];\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  checkboxChecked(checkboxModel) {\r\n    checkboxModel.checked = !checkboxModel.checked;\r\n    switch (checkboxModel.name) {\r\n      case 'DPG':\r\n        this.reportingModel.reportingDpg = checkboxModel.checked;\r\n        break;\r\n      case 'Cargo':\r\n        this.reportingModel.reportingCargo = checkboxModel.checked;\r\n        break;\r\n      case 'Ship Stores':\r\n        this.reportingModel.reportingShipStores = checkboxModel.checked;\r\n        break;\r\n      case 'Crew':\r\n        this.reportingModel.reportingCrew = checkboxModel.checked;\r\n        break;\r\n      case 'Pax':\r\n        this.reportingModel.reportingPax = checkboxModel.checked;\r\n        break;\r\n      default:\r\n        console.log('Oops. Something went wrong with the checkboxes.');\r\n    }\r\n    this.portCallService.setReportingForThisPortCallData(this.reportingModel);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.portCallService.reportingForThisPortCallData$.subscribe(data => {\r\n      if (data != null) {\r\n        this.reportingModel = data;\r\n\r\n      } else {\r\n        this.reportingModel = {\r\n          reportingDpg: null,\r\n          reportingCargo: null,\r\n          reportingShipStores: null,\r\n          reportingCrew: null,\r\n          reportingPax: null,\r\n        };\r\n      }\r\n      this.checkboxes = [\r\n        { name: 'DPG', icon: 'hazard.png', checked: this.reportingModel.reportingDpg || false },\r\n        { name: 'Cargo', icon: 'cargo.png', checked: this.reportingModel.reportingCargo || false },\r\n        { name: 'Ship Stores', icon: 'alcohol.png', checked: this.reportingModel.reportingShipStores || false },\r\n        { name: 'Crew', icon: 'crew.png', checked: this.reportingModel.reportingCrew || false },\r\n        { name: 'Pax', icon: 'pax.png', checked: this.reportingModel.reportingPax || false }\r\n      ];\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Save Port Call Details\\\" icon=\\\"save.png\\\">\\r\\n  <div class=\\\"text-center\\\" *ngIf=\\\"!dataIsPristine\\\">\\r\\n    <div *ngIf=\\\"!crewPassengersAndDimensionsMeta.valid\\\">\\r\\n      <div class=\\\"alert alert-danger\\\">\\r\\n        <span>You can't save port call details.</span>\\r\\n        <br>\\r\\n        <span>Reason:</span>\\r\\n        <li *ngIf=\\\"!crewPassengersAndDimensionsMeta.valid\\\">\\r\\n          <small>There are errors in \\\"Crew, Passengers and Dimensions\\\"</small>\\r\\n        </li>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n        <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span>Save Details</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"saveDetails()\\\" *ngIf=\\\"crewPassengersAndDimensionsMeta.valid\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n      <span>Save Details</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"text-center\\\" *ngIf=\\\"dataIsPristine\\\">\\r\\n    <span>{{ dataIsPristineText }}</span>\\r\\n    <br>\\r\\n    <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n      <span>Save Details</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormMetaData } from 'app/shared/interfaces/form-meta-data.interface';\r\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\nconst INITIAL_DATA_IS_PRISTINE_TEXT = 'There are no unsaved changes in this page.';\r\nconst UPDATED_DATA_IS_PRISTINE_TEXT = 'Your changes have been saved.';\r\n\r\n@Component({\r\n  selector: 'app-save-details',\r\n  templateUrl: './save-details.component.html',\r\n  styleUrls: ['./save-details.component.css']\r\n})\r\nexport class SaveDetailsComponent implements OnInit {\r\n  detailsModel: PortCallDetailsModel = new PortCallDetailsModel();\r\n  reportingModel: any;\r\n  crewPassengersAndDimensionsModel: any;\r\n  purposeModel = [];\r\n  otherPurposeName: any;\r\n\r\n  reportingFound: boolean;\r\n  crewPassengersAndDimensionsFound: boolean;\r\n\r\n  crewPassengersAndDimensionsMeta: FormMetaData = { valid: true };\r\n\r\n  dataIsPristine = true;\r\n  dataIsPristineText: string;\r\n\r\n  constructor(private portCallService: PortCallService) {}\r\n\r\n  ngOnInit() {\r\n    this.dataIsPristineText = INITIAL_DATA_IS_PRISTINE_TEXT;\r\n    this.portCallService.detailsPristine$.subscribe(detailsDataIsPristine => {\r\n      this.dataIsPristine = detailsDataIsPristine;\r\n    });\r\n    // Database Identification\r\n    this.portCallService.detailsIdentificationData$.subscribe(\r\n      identificationData => {\r\n        if (identificationData) {\r\n          this.detailsModel.portCallDetailsId =\r\n            identificationData.portCallDetailsId;\r\n          this.detailsModel.portCallId = identificationData.portCallId;\r\n        }\r\n      }\r\n    );\r\n    // Reporting\r\n    this.portCallService.reportingForThisPortCallData$.subscribe(\r\n      reportingData => {\r\n        if (reportingData) {\r\n          this.detailsModel.reportingCargo = reportingData.reportingCargo;\r\n          this.detailsModel.reportingCrew = reportingData.reportingCrew;\r\n          this.detailsModel.reportingDpg = reportingData.reportingDpg;\r\n          this.detailsModel.reportingPax = reportingData.reportingPax;\r\n          this.detailsModel.reportingShipStores =\r\n            reportingData.reportingShipStores;\r\n        }\r\n      }\r\n    );\r\n    // Crew, passengers, and dimensions\r\n    this.portCallService.crewPassengersAndDimensionsData$.subscribe(\r\n      cpadData => {\r\n        if (cpadData) {\r\n          this.crewPassengersAndDimensionsModel = cpadData;\r\n          this.detailsModel.numberOfCrew = cpadData.numberOfCrew;\r\n          this.detailsModel.numberOfPassengers = cpadData.numberOfPassengers;\r\n          this.detailsModel.airDraught = cpadData.airDraught;\r\n          this.detailsModel.actualDraught = cpadData.actualDraught;\r\n        }\r\n      }\r\n    );\r\n    // Purpose\r\n    this.portCallService.portCallPurposeData$.subscribe(purposeData => {\r\n      if (purposeData) {\r\n        this.purposeModel = purposeData;\r\n      }\r\n    });\r\n\r\n    this.portCallService.otherPurposeName$.subscribe(otherNameData => {\r\n      this.otherPurposeName = otherNameData;\r\n    });\r\n\r\n    this.portCallService.crewPassengersAndDimensionsMeta$.subscribe(\r\n      cpadMetaData => {\r\n        this.crewPassengersAndDimensionsMeta = cpadMetaData;\r\n      }\r\n    );\r\n  }\r\n\r\n  saveDetails() {\r\n    if (this.crewPassengersAndDimensionsMeta.valid) {\r\n      this.detailsModel.numberOfCrew = this.crewPassengersAndDimensionsModel.numberOfCrew;\r\n      this.detailsModel.numberOfPassengers = this.crewPassengersAndDimensionsModel.numberOfPassengers;\r\n      this.detailsModel.airDraught = this.crewPassengersAndDimensionsModel.airDraught;\r\n      this.detailsModel.actualDraught = this.crewPassengersAndDimensionsModel.actualDraught;\r\n\r\n      this.portCallService.saveDetails(\r\n        this.detailsModel,\r\n        this.purposeModel,\r\n        this.otherPurposeName\r\n      );\r\n      this.dataIsPristineText = UPDATED_DATA_IS_PRISTINE_TEXT;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card card-ssn bg-ssn text-ssn\\\">\\r\\n  <div class=\\\"row px-3 py-1\\\">\\r\\n\\r\\n    <div *ngFor=\\\"let menuEntry of menuEntries\\\">\\r\\n      <div *ngIf=\\\"menuEntry.checked\\\" class=\\\"mx-1 my-1\\\">\\r\\n        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"{'btn-danger': menuEntry.hasError, 'btn-ssn': !menuEntry.hasError, 'active': selectedPortCallForm == menuEntry.name}\\\"\\r\\n          (click)=\\\"setPortCallForm(menuEntry.name)\\\">\\r\\n          <img src=\\\"{{iconPath}}{{menuEntry.icon}}\\\" height=\\\"24px\\\" /> {{menuEntry.name}}\\r\\n          <span *ngIf=\\\"menuEntry.hasUnsavedData\\\" title=\\\"There is unsaved data in this page.\\\"> *</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\nconst PORT_CALL_DETAILS = 'Port Call Details';\r\nconst CONFIRM_PORT_CALL = 'Confirm and Activate';\r\n\r\nconst DPG = 'DPG';\r\nconst CARGO = 'Cargo';\r\nconst SHIP_STORES = 'Ship Stores';\r\nconst CREW = 'Crew';\r\nconst PAX = 'Pax';\r\n\r\n@Component({\r\n  selector: 'app-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.css']\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n  iconPath = 'assets/images/VoyageIcons/128x128/white/';\r\n  baseMenuEntries: any[] = [\r\n    {\r\n      name: PORT_CALL_DETAILS,\r\n      icon: 'verification-clipboard.png',\r\n      checked: true,\r\n      hasError: false,\r\n      hasUnsavedData: false\r\n    }\r\n  ];\r\n  finalMenuEntries: any[] = [\r\n    {\r\n      name: CONFIRM_PORT_CALL,\r\n      icon: 'checkmark.png',\r\n      checked: true,\r\n      hasError: false,\r\n      hasUnsavedData: false\r\n    }\r\n  ];\r\n\r\n  menuEntries: any[];\r\n\r\n  selectedPortCallForm: string;\r\n\r\n  constructor(\r\n    private portCallService: PortCallService,\r\n    private contentService: ContentService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.menuEntries = this.baseMenuEntries.concat(this.finalMenuEntries);\r\n    this.portCallService.reportingForThisPortCallData$.subscribe(\r\n      reportingData => {\r\n        if (reportingData != null) {\r\n          const falForms = [\r\n            {\r\n              name: DPG,\r\n              icon: 'hazard.png',\r\n              checked: reportingData.reportingDpg || false,\r\n              hasError: false,\r\n              hasUnsavedData: false\r\n            },\r\n            {\r\n              name: CARGO,\r\n              icon: 'cargo.png',\r\n              checked: reportingData.reportingCargo || false,\r\n              hasError: false,\r\n              hasUnsavedData: false\r\n            },\r\n            {\r\n              name: SHIP_STORES,\r\n              icon: 'alcohol.png',\r\n              checked: reportingData.reportingShipStores || false,\r\n              hasError: false,\r\n              hasUnsavedData: false\r\n            },\r\n            {\r\n              name: CREW,\r\n              icon: 'crew.png',\r\n              checked: reportingData.reportingCrew || false,\r\n              hasError: false,\r\n              hasUnsavedData: false\r\n            },\r\n            {\r\n              name: PAX,\r\n              icon: 'pax.png',\r\n              checked: reportingData.reportingPax || false,\r\n              hasError: false,\r\n              hasUnsavedData: false\r\n            }\r\n          ];\r\n          this.menuEntries = this.baseMenuEntries\r\n            .concat(falForms)\r\n            .concat(this.finalMenuEntries);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.contentService.portCallFormName$.subscribe(\r\n      portCallFormName => {\r\n        this.selectedPortCallForm = portCallFormName;\r\n      }\r\n    );\r\n\r\n    this.portCallService.crewPassengersAndDimensionsMeta$.subscribe(\r\n      metaData => {\r\n        this.menuEntries.find(\r\n          p => p.name === PORT_CALL_DETAILS\r\n        ).hasError = !metaData.valid;\r\n      }\r\n    );\r\n\r\n    this.portCallService.detailsPristine$.subscribe(detailsDataIsPristine => {\r\n      this.menuEntries.find(\r\n        p => p.name === PORT_CALL_DETAILS\r\n      ).hasUnsavedData = !detailsDataIsPristine;\r\n    });\r\n  }\r\n\r\n  setPortCallForm(contentName: string) {\r\n    this.contentService.setPortCallForm(contentName);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/registration.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/registration.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"REGISTER PORT CALL\\\" icon=\\\"portcall.png\\\">\\r\\n  <app-forms></app-forms>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/registration.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/registration.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  selectedComponent: string;\r\n\r\n  constructor(private contentService: ContentService) {}\r\n\r\n  ngOnInit() {\r\n    this.contentService.portCallFormName$.subscribe(content => {\r\n      this.selectedComponent = content;\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/registration.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"VIEW PORT CALL\\\" icon=\\\"eye.png\\\">\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ship-info-table></app-ship-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-location-time-info-table></app-location-time-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <app-confirmation-view></app-confirmation-view>\\r\\n\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <button class=\\\"btn btn-light\\\" (click)=\\\"goBack()\\\">\\r\\n        <img src=\\\"assets/images/VoyageIcons/128x128/left-arrow.png\\\" height=\\\"32px\\\">\\r\\n        <span class=\\\"no-wrap\\\"> GO BACK</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-view-port-call',\r\n  templateUrl: './view-port-call.component.html',\r\n  styleUrls: ['./view-port-call.component.css']\r\n})\r\nexport class ViewPortCallComponent implements OnInit {\r\n  constructor(\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService,\r\n    private shipService: ShipService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.portCallService.shipData$.subscribe(shipResult => {\r\n      this.shipService.setShipOverviewData(shipResult);\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.ts","module.exports = \"footer {\\r\\n    height: 100px;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.footer-section {\\r\\n    height: 100px;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/footer/footer.component.css\n// module id = ./src/app/main-content/footer/footer.component.css\n// module chunks = main","module.exports = \"<footer class=\\\"footer bg-ssn text-ssn text-center\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-4 footer-section\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-4 footer-section\\\">\\r\\n      <div class=\\\"d-table\\\">\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div class=\\\"d-table-cell py-1\\\">\\r\\n            <small class=\\\"no-wrap\\\">\\r\\n              An Open Source Maritime\\r\\n            </small>\\r\\n            <small class=\\\"no-wrap\\\">\\r\\n              Single Window project.\\r\\n            </small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div class=\\\"d-table-cell py-1\\\">\\r\\n            <small>Available at </small>\\r\\n            <a href=\\\"https://github.com/Fundator/IMO-Maritime-Single-Window/\\\" target=\\\"_blank\\\" title=\\\"GitHub\\\">\\r\\n              <small class=\\\"text-ssn\\\">GitHub</small>\\r\\n              <img src=\\\"/assets/images/VoyageIcons/128x128/white/github.png\\\" height=\\\"24px\\\" />\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 footer-section\\\">\\r\\n      <div class=\\\"d-table\\\">\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div class=\\\"d-table-cell py-1\\\">\\r\\n            <span>Coordinated by</span>\\r\\n            <a href=\\\"https://www.imo.org/\\\" target=\\\"_blank\\\">\\r\\n              <img src=\\\"/assets/images/imo-logo.png\\\" alt=\\\"IMO\\\" title=\\\"International Maritime Organization\\\" height=\\\"48px\\\" />\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/footer/footer.component.html\n// module id = ./src/app/main-content/footer/footer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/footer/footer.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/header.component.css\n// module id = ./src/app/main-content/header/header.component.css\n// module chunks = main","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-dark bg-ssn\\\">\\r\\n\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <button class=\\\"btn btn-sm btn-ssn\\\" type=\\\"button\\\" (click)=\\\"menuIsCollapsed = !menuIsCollapsed\\\" *ngIf=\\\"userMenuEntries.length > 1\\\">\\r\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n\\r\\n        <button class=\\\"btn btn-sm btn-ssn\\\" type=\\\"button\\\" (click)=\\\"setContent(userMenuEntries[0].menuName)\\\" *ngIf=\\\"userMenuEntries.length === 1\\\">\\r\\n          <img src=\\\"{{iconPath}}home.png\\\" height=\\\"16px\\\">\\r\\n        </button>\\r\\n        <img src=\\\"/assets/images/logo.png\\\" height=\\\"32px\\\" />\\r\\n        <span class=\\\"text-center text-ssn\\\">IMO Maritime Single Window</span>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!(online$ | async)\\\">Internet connection lost</span>\\r\\n    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!hasDbConnection\\\">Connection to database lost.</span>\\r\\n\\r\\n    <ul class=\\\"navbar-nav ml-auto\\\" *ngIf=\\\"loggedIn\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <form class=\\\"form-inline\\\">\\r\\n          <div class=\\\"btn-group\\\">\\r\\n            <button class=\\\"btn btn-light btn-sm\\\">{{userName}}</button>\\r\\n            <button class=\\\"btn btn-outline-light btn-sm\\\" (click)=\\\"logout()\\\">Log out</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" [ngbCollapse]=\\\"menuIsCollapsed\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm mx-auto mt-2\\\" *ngFor=\\\"let menuEntry of userMenuEntries\\\">\\r\\n          <button class=\\\"btn btn-ssn btn-sm col\\\" (click)=\\\"setContent(menuEntry.menuName)\\\">\\r\\n            <img src=\\\"{{ menuEntry.iconPath }}\\\" height=\\\"24px\\\" /> {{menuEntry.title}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </nav>\\r\\n</header>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/header.component.html\n// module id = ./src/app/main-content/header/header.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { MenuClaims } from 'app/shared/constants/menu-claims';\r\nimport { MenuEntry } from 'app/shared/interfaces/menu-entry.interface';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { LoginService } from 'app/shared/services/login.service';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { merge } from 'rxjs/observable/merge';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { fromEvent } from 'rxjs/observable/fromEvent';\r\nimport { mapTo } from 'rxjs/operators/mapTo';\r\nimport { DbConnectionService } from 'app/shared/services/db-connection.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n  providers: []\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  online$: Observable<boolean>;\r\n\r\n  hasDbConnection = true;\r\n  dbConnectionSubscription: Subscription;\r\n\r\n  menuIsCollapsed = true;\r\n  subscription: Subscription;\r\n  loggedIn: boolean;\r\n  roles: any = new Array();\r\n  userMenuEntries: MenuEntry[];\r\n  userName = 'default';\r\n  userClaims: any;\r\n\r\n  iconPath = 'assets/images/VoyageIcons/128x128/white/';\r\n  menuEntries: MenuEntry[] = [\r\n    {\r\n      title: 'USERS',\r\n      iconPath: this.iconPath + 'user.png',\r\n      menuName: CONTENT_NAMES.REGISTER_USER\r\n    },\r\n    {\r\n      title: 'SHIPS',\r\n      iconPath: this.iconPath + 'ship.png',\r\n      menuName: CONTENT_NAMES.VIEW_SHIPS\r\n    },\r\n    {\r\n      title: 'LOCATIONS',\r\n      iconPath: this.iconPath + 'location.png',\r\n      menuName: CONTENT_NAMES.LOCATIONS\r\n    },\r\n    {\r\n      title: 'ORGANIZATIONS',\r\n      iconPath: this.iconPath + 'pax.png',\r\n      menuName: CONTENT_NAMES.VIEW_ORGANIZATIONS\r\n    },\r\n    {\r\n      title: 'PORT CALLS',\r\n      iconPath: this.iconPath + 'portcall.png',\r\n      menuName: CONTENT_NAMES.VIEW_PORT_CALLS\r\n    }\r\n  ];\r\n\r\n  permissions = MenuClaims.PERMISSIONS;\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private contentService: ContentService,\r\n    private accountService: AccountService,\r\n    private dbConnectionService: DbConnectionService,\r\n    private router: Router\r\n  ) {\r\n    this.online$ = merge(\r\n      of(navigator.onLine),\r\n      fromEvent(window, 'online').pipe(mapTo(true)),\r\n      fromEvent(window, 'offline').pipe(mapTo(false))\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.loginService.authNavStatus$.subscribe(\r\n      status => (this.loggedIn = status)\r\n    );\r\n    this.contentService.contentName$.subscribe(\r\n      () => (this.menuIsCollapsed = true)\r\n    );\r\n\r\n    this.accountService.userClaimsData$.subscribe(userClaims => {\r\n      if (userClaims) {\r\n        const userClaimsTypeMenu = userClaims.filter(\r\n          claim => claim.type === MenuClaims.TYPE\r\n        );\r\n        const keys = Object.keys(this.permissions);\r\n        keys.forEach(key => {\r\n          this.permissions[key] = userClaimsTypeMenu.some(\r\n            claim => claim.value === key\r\n          );\r\n        });\r\n        this.generateMenu();\r\n      }\r\n    });\r\n\r\n    if (this.loggedIn) {\r\n      this.accountService.getUserName().subscribe(result => {\r\n        if (result) {\r\n          this.userName = result;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.startDbConnectionCheck();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak by unsubscribing\r\n    this.subscription.unsubscribe();\r\n    this.dbConnectionSubscription.unsubscribe();\r\n  }\r\n\r\n  private startDbConnectionCheck() {\r\n    if (this.dbConnectionSubscription) {\r\n      this.dbConnectionSubscription.unsubscribe();\r\n    }\r\n    this.dbConnectionSubscription = Observable.interval(this.hasDbConnection ? 30000 : 5000).subscribe(() => {\r\n      this.dbConnectionService.getHasDbConnection().subscribe(hasConnection => {\r\n        if (this.hasDbConnection !== hasConnection) {\r\n          this.hasDbConnection = hasConnection;\r\n          this.startDbConnectionCheck();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private generateMenu() {\r\n    this.setMenuEntries();\r\n  }\r\n\r\n  private setMenuEntries() {\r\n    // Populates the menu entry list with the entries the user has access to\r\n\r\n    this.userMenuEntries = [];\r\n    for (const menuEntry of this.menuEntries) {\r\n      const menuName = menuEntry.menuName;\r\n      if (this.permissions[menuName]) {\r\n        this.userMenuEntries.push(\r\n          this.menuEntries.find(\r\n            newMenuEntry => newMenuEntry.menuName === menuName\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.loginService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  setContent(contentName: string) {\r\n    this.contentService.setContent(contentName);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/header/header.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/main-content.component.css\n// module id = ./src/app/main-content/main-content.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\r\\n<div class=\\\"mt-2 mx-sm-auto mx-md-2 mx-lg-4\\\">\\r\\n  <app-content-container></app-content-container>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/main-content.component.html\n// module id = ./src/app/main-content/main-content.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-main-content',\r\n  templateUrl: './main-content.component.html',\r\n  styleUrls: ['./main-content.component.css']\r\n})\r\nexport class MainContentComponent implements OnInit {\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  ngOnInit() {\r\n    let userClaims;\r\n    if ((userClaims = localStorage.getItem('user_claims'))) {\r\n      this.accountService.setUserClaims(JSON.parse(userClaims));\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/main-content.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.css\n// module id = ./src/app/shared/components/confirmation-modal/confirmation-modal.component.css\n// module chunks = main","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">{{ headerText }}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  {{ bodyText }}\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"activeModal.close('Close click')\\\">Close</button>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.html\n// module id = ./src/app/shared/components/confirmation-modal/confirmation-modal.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-modal',\r\n  templateUrl: './confirmation-modal.component.html',\r\n  styleUrls: ['./confirmation-modal.component.css']\r\n})\r\nexport class ConfirmationModalComponent implements OnInit {\r\n  static TYPE_SUCCESS = 'SUCCESS';\r\n  static TYPE_WARNING = 'WARNING';\r\n  static TYPE_FAILURE = 'FAILURE';\r\n\r\n  @Input() headerText: string;\r\n\r\n  @Input() bodyText: string;\r\n\r\n  @Input() modalType: string;\r\n\r\n  constructor(public activeModal: NgbActiveModal) {}\r\n\r\n  ngOnInit() {\r\n    this.headerText = this.modalType;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.css\n// module id = ./src/app/shared/components/confirmation-view/clearances/clearances.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Clearances\\\" icon=\\\"stamp.png\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Type</th>\\r\\n      <th>Status</th>\\r\\n      <th>Remark</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let clearance of clearanceList\\\">\\r\\n      <td>{{ clearance.organization.name }}</td>\\r\\n      <td>\\r\\n        <div *ngIf=\\\"clearance.cleared\\\" class=\\\"alert alert-success mb-0\\\"><span>Cleared.</span></div>\\r\\n        <div *ngIf=\\\"clearance.cleared == null\\\" class=\\\"alert alert-warning mb-0\\\"><span>Not reviewed.</span></div>\\r\\n        <div *ngIf=\\\"clearance.cleared == false\\\" class=\\\"alert alert-danger mb-0\\\"><span>Rejected.</span></div>\\r\\n      </td>\\r\\n      <td>{{ clearance.remark }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.html\n// module id = ./src/app/shared/components/confirmation-view/clearances/clearances.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-clearances',\r\n  templateUrl: './clearances.component.html',\r\n  styleUrls: ['./clearances.component.css']\r\n})\r\nexport class ClearancesComponent implements OnInit {\r\n  clearanceList: any[] = [];\r\n\r\n  constructor(private portCallService: PortCallService) {}\r\n\r\n  ngOnInit() {\r\n    this.portCallService.clearanceListData$.subscribe(clearanceListData => {\r\n      if (clearanceListData) {\r\n        this.clearanceList = clearanceListData;\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.css\n// module id = ./src/app/shared/components/confirmation-view/confirmation-view.component.css\n// module chunks = main","module.exports = \"<!-- Port Call Details -->\\r\\n<div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-port-call-details></app-port-call-details>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <!-- FAL forms -->\\r\\n  <div *ngFor=\\\"let entry of falForms\\\">\\r\\n    <div class=\\\"row mb-3\\\" *ngIf=\\\"entry.checked\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <app-table-card header=\\\"{{entry.name}}\\\" icon=\\\"{{entry.icon}}\\\" collapsible=true>\\r\\n          <div [ngSwitch]=\\\"entry.name\\\">\\r\\n            <div *ngSwitchDefault class=\\\"text-center my-3\\\">\\r\\n              <img src=\\\"{{iconPath}}warning.png\\\" height=\\\"24px\\\" />\\r\\n              <span class=\\\"no-wrap\\\">{{ entry.name }} information</span>\\r\\n              <span class=\\\"no-wrap\\\">is marked for delivery,</span>\\r\\n              <span class=\\\"no-wrap\\\">but no information is provided.</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </app-table-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <!-- Clearance information -->\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-clearances></app-clearances>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.html\n// module id = ./src/app/shared/components/confirmation-view/confirmation-view.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-view',\r\n  templateUrl: './confirmation-view.component.html',\r\n  styleUrls: ['./confirmation-view.component.css']\r\n})\r\nexport class ConfirmationViewComponent implements OnInit {\r\n  iconPath = 'assets/images/VoyageIcons/128x128/white/';\r\n  falForms: any;\r\n\r\n  constructor(private portCallService: PortCallService) {}\r\n\r\n  ngOnInit() {\r\n    this.portCallService.reportingForThisPortCallData$.subscribe(\r\n      reportingData => {\r\n        if (reportingData != null) {\r\n          this.falForms = [\r\n            {\r\n              name: 'DPG',\r\n              icon: 'hazard.png',\r\n              checked: reportingData.reportingDpg || false\r\n            },\r\n            {\r\n              name: 'Cargo',\r\n              icon: 'cargo.png',\r\n              checked: reportingData.reportingCargo || false\r\n            },\r\n            {\r\n              name: 'Ship Stores',\r\n              icon: 'alcohol.png',\r\n              checked: reportingData.reportingShipStores || false\r\n            },\r\n            {\r\n              name: 'Crew',\r\n              icon: 'crew.png',\r\n              checked: reportingData.reportingCrew || false\r\n            },\r\n            {\r\n              name: 'Pax',\r\n              icon: 'pax.png',\r\n              checked: reportingData.reportingPax || false\r\n            }\r\n          ];\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-table-card header=\\\"Crew, Passengers and Dimensions\\\" icon=\\\"crew.png\\\" collapsible=true>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td *ngFor=\\\"let entry of portCallDetailsInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n            <tr>\\r\\n              <small>{{entry.description}}</small>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n              <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n            </tr>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </app-table-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-selected-purposes></app-selected-purposes>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\nconst NO_OF_CREW = 'No. of Crew';\r\nconst NO_OF_PASSENGERS = 'No. of Passengers';\r\nconst ACTUAL_DRAUGHT = 'Actual Draught';\r\nconst AIR_DRAUGHT = 'Air Draught';\r\n\r\n@Component({\r\n  selector: 'app-port-call-details',\r\n  templateUrl: './port-call-details.component.html',\r\n  styleUrls: ['./port-call-details.component.css']\r\n})\r\nexport class PortCallDetailsComponent implements OnInit {\r\n  portCallDetailsInfo: any[] = [\r\n    { description: NO_OF_CREW, data: null },\r\n    { description: NO_OF_PASSENGERS, data: null },\r\n    { description: ACTUAL_DRAUGHT, data: null },\r\n    { description: AIR_DRAUGHT, data: null }\r\n  ];\r\n\r\n  constructor(private portCallService: PortCallService) {}\r\n\r\n  ngOnInit() {\r\n    this.portCallService.crewPassengersAndDimensionsData$.subscribe(data => {\r\n      if (data != null) {\r\n        this.portCallDetailsInfo.find(p => p.description === NO_OF_CREW).data =\r\n          data.numberOfCrew;\r\n        this.portCallDetailsInfo.find(\r\n          p => p.description === NO_OF_PASSENGERS\r\n        ).data =\r\n          data.numberOfPassengers;\r\n        this.portCallDetailsInfo.find(\r\n          p => p.description === ACTUAL_DRAUGHT\r\n        ).data =\r\n          data.actualDraught;\r\n        this.portCallDetailsInfo.find(p => p.description === AIR_DRAUGHT).data =\r\n          data.airDraught;\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Selected Purposes\\\" icon=\\\"target.png\\\" collapsible=true>\\r\\n  <tbody class=\\\"border-top-0\\\">\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let purpose of selectedPurposes; let isFirst=first\\\" [ngClass]=\\\"{'border-left': !isFirst}\\\"> {{ getPurposeName(purpose.portCallPurposeId) }} </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { PurposeService } from 'app/shared/services/purpose.service';\r\n\r\nconst OTHER_PURPOSE_ID = '100249';\r\n\r\n@Component({\r\n  selector: 'app-selected-purposes',\r\n  templateUrl: './selected-purposes.component.html',\r\n  styleUrls: ['./selected-purposes.component.css'],\r\n  providers: [PurposeService]\r\n})\r\nexport class SelectedPurposesComponent implements OnInit {\r\n  selectedPurposes: any;\r\n  purposeList: any[];\r\n\r\n  otherPurposeName = '';\r\n\r\n  constructor(\r\n    private purposeService: PurposeService,\r\n    private portCallService: PortCallService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.purposeService.getPurposes().subscribe(data => {\r\n      this.purposeList = data;\r\n    });\r\n    this.portCallService.portCallPurposeData$.subscribe(data => {\r\n      if (data != null) {\r\n        this.selectedPurposes = data;\r\n      }\r\n    });\r\n    this.portCallService.otherPurposeName$.subscribe(data => {\r\n      this.otherPurposeName = data;\r\n    });\r\n  }\r\n\r\n  getPurposeName(id) {\r\n    if (this.purposeList != null) {\r\n      const purpose = this.purposeList.find(p => p.portCallPurposeId === id);\r\n      if (purpose.portCallPurposeId !== OTHER_PURPOSE_ID) {\r\n        return purpose != null ? purpose.name : null;\r\n      } else {\r\n        return this.otherPurposeName === ''\r\n          ? 'Other purpose is undefined'\r\n          : 'Other: \"' + this.otherPurposeName + '\"';\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-info-table/location-info-table.component.css\n// module id = ./src/app/shared/components/location-info-table/location-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Location Information\\\" icon=\\\"location.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <img *ngIf=\\\"locationFlag\\\" src=\\\"assets/images/Flags/128x128/{{locationFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let entry of locationInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr>\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n          <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n        </tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-info-table/location-info-table.component.html\n// module id = ./src/app/shared/components/location-info-table/location-info-table.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LocationProperties } from 'app/shared/constants/location-properties';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-location-info-table',\r\n  templateUrl: './location-info-table.component.html',\r\n  styleUrls: ['./location-info-table.component.css']\r\n})\r\nexport class LocationInfoTableComponent implements OnInit {\r\n\r\n  locationFlag: string;\r\n  locationProperties = LocationProperties.PROPERTIES;\r\n  locationInfo: any[] = [];\r\n\r\n  constructor(private locationService: LocationService) { }\r\n  ngOnInit() {\r\n    this.locationProperties = LocationProperties.PROPERTIES;\r\n    this.locationService.locationData$.subscribe(\r\n      locationResult => {\r\n        if (locationResult) {\r\n          this.locationFlag = (locationResult.country) ? locationResult.country.twoCharCode.toLowerCase() : null;\r\n          this.locationProperties.COUNTRY.data = (locationResult.country) ? locationResult.country.name : null;\r\n          this.locationProperties.LOCATION_TYPE.data = locationResult.locationType.name;\r\n          this.locationProperties.LOCATION_NAME.data = locationResult.name;\r\n          this.locationProperties.LOCATION_CODE.data = locationResult.locationCode;\r\n        }\r\n        this.locationInfo = Object.values(this.locationProperties);\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/location-info-table/location-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-smart-table/location-button-row/location-button-row.component.css\n// module id = ./src/app/shared/components/location-smart-table/location-button-row/location-button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Edit location\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-smart-table/location-button-row/location-button-row.component.html\n// module id = ./src/app/shared/components/location-smart-table/location-button-row/location-button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ViewCell } from 'ng2-smart-table';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-location-button-row',\r\n  templateUrl: './location-button-row.component.html',\r\n  styleUrls: ['./location-button-row.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class LocationButtonRowComponent implements ViewCell, OnInit {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  locationData: any[];\r\n\r\n  constructor(\r\n    private locationService: LocationService,\r\n    private contentService: ContentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.locationService.locationData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.locationData = results;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEditClick() {\r\n    this.setContent(CONTENT_NAMES.REGISTER_LOCATION);\r\n  }\r\n\r\n  private setContent(content: string) {\r\n    this.setLocation(content);\r\n  }\r\n\r\n  setLocation(content) {\r\n    this.contentService.setLoadingScreen(true, 'location.gif', 'Loading');\r\n    this.locationService.setLocationData(this.rowData.locationModel);\r\n    this.contentService.setContent(content);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/location-smart-table/location-button-row/location-button-row.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n}\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n    color: black;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: '';\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a { \\r\\n    color:var(--color-primary-text); \\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link { \\r\\n    color: var(--color-primary-dark); \\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;        \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-smart-table/location-smart-table.component.css\n// module id = ./src/app/shared/components/location-smart-table/location-smart-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\r\\n  <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n    <thead class=\\\"bg-ssn text-white\\\">\\r\\n      <tr>\\r\\n        <th class=\\\"py-1\\\">\\r\\n          <h5 class=\\\"mb-0\\\">Location search results</h5>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n  </table>\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dataSource\\\"></ng2-smart-table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-smart-table/location-smart-table.component.html\n// module id = ./src/app/shared/components/location-smart-table/location-smart-table.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { LocationButtonRowComponent } from './location-button-row/location-button-row.component';\r\nimport { LocationService } from '../../services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-location-smart-table',\r\n  templateUrl: './location-smart-table.component.html',\r\n  styleUrls: ['./location-smart-table.component.css']\r\n})\r\nexport class LocationSmartTableComponent implements OnInit {\r\n\r\n  tableData = [];\r\n  dataSource: LocalDataSource = new LocalDataSource();\r\n  tableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    noDataMessage: 'There are no locations in this list.',\r\n\r\n    columns: {\r\n      country: {\r\n        title: 'Country',\r\n        type: 'html'\r\n      },\r\n      name: {\r\n        title: 'Name',\r\n        type: 'html'\r\n      },\r\n      loCode: {\r\n        title: 'Location code',\r\n        type: 'html'\r\n      },\r\n      type: {\r\n        title: 'Type',\r\n        type: 'html'\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: LocationButtonRowComponent\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private locationService: LocationService\r\n  ) { }\r\n\r\n  dataRow(location) {\r\n    const row = {\r\n      locationModel: location,\r\n      country:\r\n        `<div class=\"no-wrap\"><div hidden>` +\r\n        location.country.name + // ugly fix for alphabetical sorting but it works\r\n        `</div> <div> <img src='assets/images/Flags/128x128/` +\r\n        location.country.twoCharCode.toLowerCase() +\r\n        `.png' height='20px'/> ` +\r\n        location.country.name +\r\n        `</div></div>`,\r\n      name: location.name,\r\n      loCode: location.locationCode || `<div class=\"font-italic\">Not provided.</div>`,\r\n      type: location.locationType.name || `<div class=\"font-italic\">Not provided.</div>`,\r\n      actions: 'btn'\r\n    };\r\n    return row;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.locationService.locationSearchData$.subscribe(data => {\r\n      if (data) {\r\n        if (data.length !== 0) {\r\n          const rowList = [];\r\n          data.forEach(location => {\r\n            const row = this.dataRow(location);\r\n            rowList.push(row);\r\n          });\r\n          this.tableData = rowList;\r\n        }\r\n      }\r\n      this.dataSource.load(this.tableData);\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/location-smart-table/location-smart-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.css\n// module id = ./src/app/shared/components/location-time-info-table/location-time-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Location Information\\\" icon=\\\"location.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <img *ngIf=\\\"locationFlag\\\" src=\\\"assets/images/Flags/128x128/{{locationFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let entry of locationTimeInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr *ngIf=\\\"entry.data\\\">\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.html\n// module id = ./src/app/shared/components/location-time-info-table/location-time-info-table.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LocationTimeProperties } from 'app/shared/constants/location-time-properties';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-location-time-info-table',\r\n  templateUrl: './location-time-info-table.component.html',\r\n  styleUrls: ['./location-time-info-table.component.css']\r\n})\r\nexport class LocationTimeInfoTableComponent implements OnInit {\r\n  locationFlag: string;\r\n  locationTimeProperties = LocationTimeProperties.PROPERTIES;\r\n  locationTimeInfo: any[] = [];\r\n\r\n  constructor(private portCallService: PortCallService) {}\r\n  ngOnInit() {\r\n    this.locationTimeProperties = LocationTimeProperties.PROPERTIES;\r\n    this.portCallService.locationData$.subscribe(locationResult => {\r\n      if (locationResult) {\r\n        this.locationFlag = locationResult.country\r\n          ? locationResult.country.twoCharCode.toLowerCase()\r\n          : null;\r\n        this.locationTimeProperties.LOCATION_TYPE.data =\r\n          locationResult.locationType.name;\r\n        this.locationTimeProperties.LOCATION_NAME.data = locationResult.name;\r\n        this.locationTimeProperties.LOCATION_CODE.data =\r\n          locationResult.locationCode;\r\n\r\n        this.portCallService.etaEtdData$.subscribe(timeResult => {\r\n          if (timeResult) {\r\n            this.locationTimeProperties.ETA.data = this.dateTimeFormat(\r\n              timeResult.eta\r\n            );\r\n            this.locationTimeProperties.ETD.data = this.dateTimeFormat(\r\n              timeResult.etd\r\n            );\r\n          }\r\n        });\r\n      }\r\n      this.locationTimeInfo = Object.values(this.locationTimeProperties);\r\n    });\r\n  }\r\n\r\n  private dateTimeFormat(time) {\r\n    return (\r\n      time.year +\r\n      '-' +\r\n      this.twoDigitFormat(time.month) +\r\n      '-' +\r\n      this.twoDigitFormat(time.day) +\r\n      ' ' +\r\n      this.twoDigitFormat(time.hour) +\r\n      ':' +\r\n      this.twoDigitFormat(time.minute)\r\n    );\r\n  }\r\n\r\n  private twoDigitFormat(number: number) {\r\n    if (number <= 9) {\r\n      return '0' + number;\r\n    } else {\r\n      return number;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.css\n// module id = ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Edit organization\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.html\n// module id = ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ViewCell } from 'ng2-smart-table';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-organization-button-row',\r\n  templateUrl: './organization-button-row.component.html',\r\n  styleUrls: ['./organization-button-row.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class OrganizationButtonRowComponent implements ViewCell, OnInit {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  organizationData: any[];\r\n\r\n  constructor(\r\n    private organizationService: OrganizationService,\r\n    private contentService: ContentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.organizationService.organizationData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.organizationData = results;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEditClick() {\r\n    this.setContent(CONTENT_NAMES.REGISTER_ORGANIZATION);\r\n  }\r\n\r\n  private setContent(content: string) {\r\n    this.setOrganization(content);\r\n  }\r\n\r\n  setOrganization(content) {\r\n    this.contentService.setLoadingScreen(true, 'pax.gif', 'Loading');\r\n    this.organizationService.setOrganizationData(this.rowData.organizationModel);\r\n    this.contentService.setContent(content);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n}\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n    color: black;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: '';\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a { \\r\\n    color:var(--color-primary-text); \\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link { \\r\\n    color: var(--color-primary-dark); \\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;        \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-smart-table.component.css\n// module id = ./src/app/shared/components/organization-smart-table/organization-smart-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\r\\n  <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n    <thead class=\\\"bg-ssn text-white\\\">\\r\\n      <tr>\\r\\n        <th class=\\\"py-1\\\">\\r\\n          <h5 class=\\\"mb-0\\\">Organization search results</h5>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n  </table>\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dataSource\\\"></ng2-smart-table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-smart-table.component.html\n// module id = ./src/app/shared/components/organization-smart-table/organization-smart-table.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { OrganizationButtonRowComponent } from './organization-button-row/organization-button-row.component';\r\nimport { OrganizationService } from '../../services/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-organization-smart-table',\r\n  templateUrl: './organization-smart-table.component.html',\r\n  styleUrls: ['./organization-smart-table.component.css']\r\n})\r\nexport class OrganizationSmartTableComponent implements OnInit {\r\n\r\n  tableData = [];\r\n  dataSource: LocalDataSource = new LocalDataSource();\r\n  tableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    noDataMessage: 'There are no organizations in this list.',\r\n\r\n    columns: {\r\n      name: {\r\n        title: 'Name',\r\n        type: 'html'\r\n      },\r\n      type: {\r\n        title: 'Type',\r\n        type: 'html'\r\n      },\r\n      organizationNumber: {\r\n        title: 'Organization Number',\r\n        type: 'html'\r\n      },\r\n      description: {\r\n        title: 'Description',\r\n        type: 'html'\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: OrganizationButtonRowComponent\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private organizationService: OrganizationService\r\n  ) { }\r\n\r\n  dataRow(organization) {\r\n    const row = {\r\n      organizationModel: organization,\r\n      name: organization.name,\r\n      type: organization.organizationType.name,\r\n      organizationNumber: organization.organizationNo || `<div class=\"font-italic\">Not provided.</div>`,\r\n      description: organization.description || `<div class=\"font-italic\">Not provided.</div>`,\r\n      actions: 'btn'\r\n    };\r\n    return row;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.organizationService.organizationSearchData$.subscribe(data => {\r\n      if (data) {\r\n        if (data.length !== 0) {\r\n          const rowList = [];\r\n          data.forEach(organization => {\r\n            const row = this.dataRow(organization);\r\n            rowList.push(row);\r\n          });\r\n          this.tableData = rowList;\r\n        }\r\n      }\r\n      this.dataSource.load(this.tableData);\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/organization-smart-table/organization-smart-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-location/search-location.component.css\n// module id = ./src/app/shared/components/search-location/search-location.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n  <img src=\\\"assets/images/Flags/128x128/{{r.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\r\\n  <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\r\\n  <strong *ngIf=\\\"r.locationCode\\\">Code: </strong> {{ r.locationCode }}\\r\\n</ng-template>\\r\\n\\r\\n<div *ngIf=\\\"!locationSelected\\\" class=\\\"text-center\\\">\\r\\n  <label for=\\\"search-location\\\">Search using location name or UN/LOCODE code</label>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input id=\\\"search-location\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"locationModel\\\" [ngbTypeahead]=\\\"search\\\"\\r\\n        [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectLocation($event)\\\" placeholder=\\\"Enter search here...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <div *ngIf=\\\"searching\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/location.gif\\\" height=\\\"32px\\\">\\r\\n        <p>Searching</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searchFailed\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/VoyageIcons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n        <p>No results</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-location/search-location.component.html\n// module id = ./src/app/shared/components/search-location/search-location.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\r\n\r\n@Component({\r\n  selector: 'app-search-location',\r\n  templateUrl: './search-location.component.html',\r\n  styleUrls: ['./search-location.component.css']\r\n})\r\nexport class SearchLocationComponent implements OnInit {\r\n\r\n  @Input() showDropdown = true;\r\n  @Input() restrictTypeHarbour = false;\r\n\r\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\r\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN;\r\n  locationModel: any;\r\n  locationSelected = false;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n\r\n  constructor(private locationService: LocationService) { }\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap(term => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2);\r\n      }),\r\n      switchMap(term => (this.showDropdown) ?\r\n        this.locationService.search(term, this.restrictTypeHarbour, this.resultsDropdown).pipe(\r\n          tap(() => {\r\n            this.searchFailed = false;\r\n          }),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          })\r\n        ) : of([])\r\n      ),\r\n      tap(res => {\r\n        if (this.showDropdown) {\r\n          this.searching = false;\r\n          this.searchFailed = this.locationModel.length >= 2 && res.length === 0;\r\n        } else {\r\n          this.locationService.search(this.locationModel, this.restrictTypeHarbour, this.resultsWithoutDropdown).subscribe(\r\n            data => {\r\n              this.searchFailed = this.locationModel.length >= 2 && data.length === 0;\r\n              this.locationService.setLocationSearchData(data);\r\n              this.searching = false;\r\n            });\r\n        }\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    )\r\n\r\n  formatter = (x: { locationId: string }) => x.locationId;\r\n\r\n  selectLocation($event) {\r\n    this.locationSelected = true;\r\n    this.locationModel = $event.item;\r\n    this.locationService.setLocationData(this.locationModel);\r\n  }\r\n\r\n  deselectLocation() {\r\n    this.locationSelected = false;\r\n    this.locationService.setLocationData(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.locationService.setLocationData(null);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-location/search-location.component.ts","module.exports = \"::-webkit-input-placeholder { \\r\\n    font-style: italic; \\r\\n } \\r\\n :-moz-placeholder { \\r\\n    font-style: italic;   \\r\\n } \\r\\n ::-moz-placeholder { \\r\\n    font-style: italic;   \\r\\n } \\r\\n :-ms-input-placeholder {   \\r\\n    font-style: italic;  \\r\\n }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-organization/search-organization.component.css\n// module id = ./src/app/shared/components/search-organization/search-organization.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card-body\\\">\\r\\n  <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n    <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\r\\n    <strong *ngIf=\\\"r.organizationNo\\\">Org.no.: </strong> {{ r.organizationNo }}\\r\\n  </ng-template>\\r\\n\\r\\n  <div *ngIf=\\\"!organizationSelected\\\" class=\\\"text-center\\\">\\r\\n    <label for=\\\"search-organization\\\">Search using organization name or organization number</label>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\"></div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <div *ngIf=\\\"showDropdown\\\">\\r\\n          <input id=\\\"search-organization\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"organizationModel\\\"\\r\\n            [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectOrganization($event)\\\"\\r\\n            placeholder=\\\"Enter search here...\\\" />\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!showDropdown\\\">\\r\\n          <input id=\\\"search-organization-no-dropdown\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"organizationModel\\\"\\r\\n            [ngbTypeahead]=\\\"search\\\" placeholder=\\\"Enter search here...\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <div *ngIf=\\\"searching\\\">\\r\\n          <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/pax.gif\\\" height=\\\"32px\\\">\\r\\n          <p>Searching</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"searchFailed\\\">\\r\\n          <img class=\\\"mx-auto\\\" src=\\\"assets/images/VoyageIcons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n          <p>No results</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-organization/search-organization.component.html\n// module id = ./src/app/shared/components/search-organization/search-organization.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\r\n\r\n@Component({\r\n  selector: 'app-search-organization',\r\n  templateUrl: './search-organization.component.html',\r\n  styleUrls: ['./search-organization.component.css']\r\n})\r\nexport class SearchOrganizationComponent implements OnInit {\r\n\r\n  @Input() showDropdown = true;\r\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\r\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN;\r\n\r\n  organizationModel: any;\r\n  organizationSelected = false;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n\r\n  constructor(private organizationService: OrganizationService) { }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap(term => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2);\r\n      }),\r\n      switchMap(term => (this.showDropdown) ?\r\n        this.organizationService.search(term, this.resultsDropdown).pipe(\r\n          tap(() => {\r\n            this.searchFailed = false;\r\n          }),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          })\r\n        ) : of([])\r\n      ),\r\n      tap(res => {\r\n        if (this.showDropdown) {\r\n          this.searching = false;\r\n          this.searchFailed = this.organizationModel.length >= 2 && res.length === 0;\r\n        } else {\r\n          this.organizationService.search(this.organizationModel, this.resultsWithoutDropdown).subscribe(\r\n            data => {\r\n              this.searchFailed = this.organizationModel.length >= 2 && data.length === 0;\r\n              this.organizationService.setOrganizationSearchData(data);\r\n              this.searching = false;\r\n            });\r\n        }\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    )\r\n  formatter = (x: { organizationId: string }) => x.organizationId;\r\n\r\n  selectOrganization($event) {\r\n    this.organizationSelected = true;\r\n    this.organizationModel = $event.item;\r\n    this.organizationService.setOrganizationData(this.organizationModel);\r\n  }\r\n\r\n  deselectOrganization() {\r\n    this.organizationSelected = false;\r\n    this.organizationService.setOrganizationData(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.organizationService.organizationData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.organizationModel = data;\r\n          this.organizationSelected = true;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-organization/search-organization.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship/search-ship.component.css\n// module id = ./src/app/shared/components/search-ship/search-ship.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n  <img src=\\\"assets/images/Flags/128x128/{{r.shipFlagCode.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\r\\n  <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\r\\n  <strong *ngIf=\\\"r.callSign\\\"> Call sign: </strong> {{ r.callSign }}\\r\\n  <strong *ngIf=\\\"r.imoNo\\\"> IMO number: </strong> {{ r.imoNo }}\\r\\n  <strong *ngIf=\\\"r.mmsiNo\\\"> MMSI number: </strong> {{ r.mmsiNo }}\\r\\n</ng-template>\\r\\n\\r\\n<div *ngIf=\\\"!shipSelected\\\" class=\\\"text-center\\\">\\r\\n  <label for=\\\"search-ship\\\">Search using ship name, call sign, IMO number or MMSI number</label>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <div *ngIf=\\\"showDropdown\\\">\\r\\n        <input id=\\\"search-ship\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipModel\\\" [ngbTypeahead]=\\\"search\\\"\\r\\n          [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectShip($event)\\\" placeholder=\\\"Enter search here...\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!showDropdown\\\">\\r\\n        <input id=\\\"search-ship-no-dropdown\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipModel\\\" [ngbTypeahead]=\\\"search\\\"\\r\\n          placeholder=\\\"Enter search here...\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <div *ngIf=\\\"searching\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/ship.gif\\\" height=\\\"32px\\\">\\r\\n        <p>Searching</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searchFailed\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/VoyageIcons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n        <p>No results</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"shipSelected\\\" class=\\\"text-center\\\">\\r\\n  <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/ship.gif\\\" height=\\\"32px\\\">\\r\\n  <p>Loading ship...</p>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship/search-ship.component.html\n// module id = ./src/app/shared/components/search-ship/search-ship.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { SEARCH_AMOUNTS } from '../../constants/search-amounts';\r\n\r\n@Component({\r\n  selector: 'app-search-ship',\r\n  templateUrl: './search-ship.component.html',\r\n  styleUrls: ['./search-ship.component.css']\r\n})\r\nexport class SearchShipComponent implements OnInit {\r\n\r\n  @Input() showDropdown = true;\r\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\r\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN;\r\n\r\n  shipModel: any;\r\n  searchText: any;\r\n  shipSelected = false;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n\r\n  constructor(private shipService: ShipService) { }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap(term => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2);\r\n      }),\r\n      switchMap(term => (this.showDropdown) ?\r\n        this.shipService.search(term, this.resultsDropdown).pipe(\r\n          tap(() => {\r\n            this.searchFailed = false;\r\n          }),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          })\r\n        ) : of([])\r\n      ),\r\n      tap(res => {\r\n        if (this.showDropdown) {\r\n          this.searching = false;\r\n          this.searchFailed = this.shipModel.length >= 2 && res.length === 0;\r\n        } else {\r\n          this.shipService.search(this.shipModel, this.resultsWithoutDropdown).subscribe(\r\n            data => {\r\n              this.searchFailed = this.shipModel.length >= 2 && data.length === 0;\r\n              this.shipService.setShipSearchData(data);\r\n              this.searching = false;\r\n            });\r\n        }\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    )\r\n  formatter = (x: { shipId: string }) => x.shipId;\r\n\r\n  selectShip($event) {\r\n    this.shipSelected = true;\r\n    this.shipModel = $event.item;\r\n    this.shipService.getShip($event.item.shipId).subscribe(\r\n      result => {\r\n        if (result) {\r\n          this.shipService.setShipOverviewData(result);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  deselectShip() {\r\n    this.shipSelected = false;\r\n    this.shipService.setShipOverviewData(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.shipService.setShipOverviewData(null);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-ship/search-ship.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/select-ship-contact/select-ship-contact.component.css\n// module id = ./src/app/shared/components/select-ship-contact/select-ship-contact.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Contact Information\\\" icon=\\\"contact.png\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <label for=\\\"contact_info\\\">Select contact information</label>\\r\\n  </div>\\r\\n  <ng-select id=\\\"contact_info\\\" [items]=\\\"contactList\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"contactMedium.contactMediumType\\\"\\r\\n    placeholder=\\\"Select contact mediums\\\" [(ngModel)]=\\\"selectedContactModels\\\" (change)=\\\"contactMediumSelected()\\\"></ng-select>\\r\\n\\r\\n  <div *ngFor=\\\"let contactModel of selectedContactModels; let i = index\\\" class=\\\"form-group row mt-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n\\r\\n      <div class=\\\"input-group input-group-sm\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span class=\\\"input-group-text bg-ssn text-white\\\">{{ contactModel.contactMedium.contactMediumType }}</span>\\r\\n        </div>\\r\\n\\r\\n        <input id=\\\"contact_value\\\" name=\\\"contactValue\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter {{ contactModel.contactMedium.contactMediumType }}\\\"\\r\\n          [(ngModel)]=\\\"selectedContactModels[i].contactValue\\\" (ngModelChange)=\\\"contactInfoChanged(contactModel)\\\" />\\r\\n\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n          <div class=\\\"input-group-text bg-ssn text-white\\\">\\r\\n            <input type=\\\"radio\\\" id=\\\"{{ i }}\\\" name=\\\"preferredRadios\\\" [value]=\\\"true\\\" [(ngModel)]=\\\"selectedContactModels[i].isPreferred\\\"\\r\\n              (ngModelChange)=\\\"preferredSet(selectedContactModels[i])\\\" [checked]=\\\"selectedContactModels[i].isPreferred\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"{{ i }}\\\">Preferred</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/select-ship-contact/select-ship-contact.component.html\n// module id = ./src/app/shared/components/select-ship-contact/select-ship-contact.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContactService } from '../../services/contact.service';\r\nimport { ConstantsService } from '../../services/constants.service';\r\nimport { ShipContactModel } from '../../models/ship-contact-model';\r\n\r\n@Component({\r\n  selector: 'app-select-ship-contact',\r\n  templateUrl: './select-ship-contact.component.html',\r\n  styleUrls: ['./select-ship-contact.component.css']\r\n})\r\nexport class SelectShipContactComponent implements OnInit {\r\n  contactList: ShipContactModel[];\r\n  selectedContactModels: ShipContactModel[];\r\n\r\n  constructor(private constantsService: ConstantsService, private contactService: ContactService) { }\r\n\r\n  ngOnInit() {\r\n    this.constantsService.getContactMediumList().subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.contactList = data.map(cm => {\r\n            const contact = new ShipContactModel();\r\n            contact.contactMediumId = cm.contactMediumId;\r\n            contact.contactMedium = cm;\r\n            return contact;\r\n          });\r\n          this.contactService.contactData$.subscribe(\r\n            shipContactData => {\r\n              if (shipContactData) {\r\n                this.selectedContactModels = shipContactData;\r\n                this.contactList = this.contactList.map(cm => {\r\n                  const shipContact = shipContactData.find(sc => sc.contactMediumId === cm.contactMediumId);\r\n                  if (shipContact != null) {\r\n                    return shipContact;\r\n                  }\r\n                  return cm;\r\n                });\r\n              }\r\n            });\r\n        }\r\n      }\r\n    );\r\n  }\r\n  contactInfoChanged(contactMedium: ShipContactModel) {\r\n    this.contactService.setContactData(this.selectedContactModels);\r\n  }\r\n\r\n  contactMediumSelected() {\r\n    console.log(this.selectedContactModels);\r\n    this.contactService.setContactData(this.selectedContactModels);\r\n  }\r\n\r\n  preferredSet(selectedContactModel: ShipContactModel) {\r\n    const updatedModels = this.selectedContactModels.map(\r\n      contactModel => {\r\n        if (contactModel.contactMediumId === selectedContactModel.contactMediumId) {\r\n          return selectedContactModel;\r\n        }\r\n        const notPreferredContactModel = contactModel;\r\n        notPreferredContactModel.isPreferred = false;\r\n        return notPreferredContactModel;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/select-ship-contact/select-ship-contact.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css\n// module id = ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-responsive\\\">\\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n    <thead>\\r\\n      <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n        <th colspan=3>Selected Contact Mediums</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody class=\\\"text-left\\\">\\r\\n      <tr *ngFor=\\\"let contactModel of selectedContactModels\\\">\\r\\n        <td class=\\\"bg-ssn text-ssn\\\">{{ contactModel.contactMedium.contactMediumType }}</td>\\r\\n        <td [attr.colspan]=\\\"!contactModel.isPreferred ? 2 : null\\\">{{ contactModel.contactValue ? contactModel.contactValue : 'Value not set' }}</td>\\r\\n        <td *ngIf=\\\"contactModel.isPreferred\\\">Preferred</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html\n// module id = ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ShipContactModel } from '../../models/ship-contact-model';\r\nimport { ContactService } from '../../services/contact.service';\r\n\r\n@Component({\r\n  selector: 'app-selected-contact-mediums',\r\n  templateUrl: './selected-contact-mediums.component.html',\r\n  styleUrls: ['./selected-contact-mediums.component.css']\r\n})\r\nexport class SelectedContactMediumsComponent implements OnInit {\r\n\r\n  selectedContactModels: ShipContactModel[];\r\n\r\n  constructor(private contactService: ContactService) { }\r\n\r\n  ngOnInit() {\r\n    this.contactService.contactData$.subscribe(data => {\r\n      if (data) {\r\n        this.selectedContactModels = data;\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.css\n// module id = ./src/app/shared/components/ship-info-table/ship-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Ship Information\\\" icon=\\\"ship.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <img *ngIf=\\\"shipFlag\\\" src=\\\"assets/images/Flags/128x128/{{shipFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let entry of shipInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr>\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\r\\n        <tr *ngIf=\\\"!entry.data\\\">\\r\\n          <div class=\\\"font-italic\\\">Not provided.</div>\\r\\n        </tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\\r\\n<app-table-card header=\\\"Ship Contact Information\\\" icon=\\\"contact.png\\\" collapsible=true collapsed=true>\\r\\n  <tbody *ngIf=\\\"shipHasContactInfo\\\">\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let entry of shipContactInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr>\\r\\n          <small>{{ entry.description }}:\\r\\n            <span *ngIf=\\\"entry.isPreferred\\\"> (preferred)</span>\\r\\n          </small>\\r\\n        </tr>\\r\\n        <tr>{{ entry.data }}</tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <tbody class=\\\"text-center\\\" *ngIf=\\\"!shipHasContactInfo\\\">\\r\\n    <div class=\\\"my-3\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/warning.png\\\" height=\\\"24px\\\">\\r\\n      <span>No contact information for this ship has been provided.</span>\\r\\n    </div>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.html\n// module id = ./src/app/shared/components/ship-info-table/ship-info-table.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ShipProperties } from 'app/shared/constants/ship-properties';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-ship-info-table',\r\n  templateUrl: './ship-info-table.component.html',\r\n  styleUrls: ['./ship-info-table.component.css']\r\n})\r\nexport class ShipInfoTableComponent implements OnInit {\r\n  shipFlag: string;\r\n  contactMediumList: any;\r\n  shipHasContactInfo: boolean;\r\n  shipContactInfo: any[] = [];\r\n\r\n  shipProperties: any = ShipProperties.PROPERTIES;\r\n  shipInfo: any[];\r\n\r\n  constructor(\r\n    private shipService: ShipService,\r\n    private constantsService: ConstantsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.shipHasContactInfo = false;\r\n    this.shipService.shipOverviewData$.subscribe(shipResult => {\r\n      if (shipResult) {\r\n        if (shipResult.shipFlagCode.country) {\r\n          this.shipFlag = shipResult.shipFlagCode.country.twoCharCode.toLowerCase();\r\n        }\r\n        if (shipResult.shipType) {\r\n          this.shipProperties.SHIP_TYPE.data = shipResult.shipType.name;\r\n        }\r\n        if (shipResult.shipStatus) {\r\n          this.shipProperties.SHIP_STATUS.data = shipResult.shipStatus.name;\r\n        }\r\n        this.shipProperties.SHIP_NAME.data = shipResult.name;\r\n        this.shipProperties.CALL_SIGN.data = shipResult.callSign;\r\n        this.shipProperties.IMO_NO.data = shipResult.imoNo;\r\n        this.shipProperties.MMSI_NO.data = shipResult.mmsiNo;\r\n        this.shipProperties.GROSS_TONNAGE.data = shipResult.grossTonnage;\r\n        this.shipProperties.LENGTH.data = shipResult.length;\r\n\r\n        this.constantsService.getContactMediumList().subscribe(\r\n          contactResult => {\r\n            if (contactResult) {\r\n              this.contactMediumList = contactResult;\r\n              if (contactResult && shipResult.shipContact != null && shipResult.shipContact.length > 0) {\r\n                this.shipHasContactInfo = true;\r\n                this.contactMediumList.forEach(contactMedium => {\r\n                  const value = shipResult.shipContact.find(shipCM => shipCM.contactMediumId === contactMedium.contactMediumId);\r\n                  if (value && (this.shipContactInfo.find(sc => sc.description === (contactMedium.contactMediumType)) == null)) {\r\n                    this.shipContactInfo.push({\r\n                      description: contactMedium.contactMediumType,\r\n                      data: value.contactValue,\r\n                      isPreferred: value.isPreferred\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        this.shipFlag = null;\r\n        this.shipProperties = ShipProperties.PROPERTIES;\r\n      }\r\n      this.shipInfo = Object.values(this.shipProperties);\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.css\n// module id = ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Edit ship\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.html\n// module id = ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ViewCell } from 'ng2-smart-table';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { ShipService } from '../../../services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-ship-button-row',\r\n  templateUrl: './ship-button-row.component.html',\r\n  styleUrls: ['./ship-button-row.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class ShipButtonRowComponent implements ViewCell, OnInit {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  shipData: any[];\r\n\r\n  constructor(\r\n    private shipService: ShipService,\r\n    private contentService: ContentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.shipService.shipOverviewData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.shipData = results;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEditClick() {\r\n    this.setContent(CONTENT_NAMES.REGISTER_SHIP);\r\n  }\r\n\r\n  private setContent(content: string) {\r\n    this.setShip(content);\r\n  }\r\n\r\n  setShip(content) {\r\n    this.contentService.setLoadingScreen(true, 'ship.gif', 'Loading');\r\n    this.shipService.getShip(this.rowData.shipModel.shipId).subscribe(data => {\r\n      if (data) {\r\n        this.shipService.setShipOverviewData(data);\r\n        this.contentService.setContent(content);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n}\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n    color: black;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: '';\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a { \\r\\n    color:var(--color-primary-text); \\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link { \\r\\n    color: var(--color-primary-dark); \\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;        \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-smart-table.component.css\n// module id = ./src/app/shared/components/ship-smart-table/ship-smart-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\r\\n  <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n    <thead class=\\\"bg-ssn text-white\\\">\\r\\n      <tr>\\r\\n        <th class=\\\"py-1\\\">\\r\\n          <h5 class=\\\"mb-0\\\">Ship search results</h5>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n  </table>\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dataSource\\\"></ng2-smart-table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-smart-table.component.html\n// module id = ./src/app/shared/components/ship-smart-table/ship-smart-table.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { ShipButtonRowComponent } from './ship-button-row/ship-button-row.component';\r\n\r\n@Component({\r\n  selector: 'app-ship-smart-table',\r\n  templateUrl: './ship-smart-table.component.html',\r\n  styleUrls: ['./ship-smart-table.component.css']\r\n})\r\nexport class ShipSmartTableComponent implements OnInit {\r\n\r\n  tableData = [];\r\n  dataSource: LocalDataSource = new LocalDataSource();\r\n  tableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    noDataMessage: 'There are no ships in this list.',\r\n\r\n    columns: {\r\n      country: {\r\n        title: 'Country',\r\n        type: 'html'\r\n      },\r\n      name: {\r\n        title: 'Name',\r\n        type: 'html'\r\n      },\r\n      callSign: {\r\n        title: 'Call Sign',\r\n        type: 'html'\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: ShipButtonRowComponent\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private shipService: ShipService\r\n  ) { }\r\n\r\n  dataRow(ship) {\r\n    const row = {\r\n      shipModel: ship,\r\n      country:\r\n        `<div class=\"no-wrap\"><div hidden>` +\r\n        ship.shipFlagCode.country.name + // ugly fix for alphabetical sorting but it works\r\n        `</div> <div> <img src='assets/images/Flags/128x128/` +\r\n        ship.shipFlagCode.country.twoCharCode.toLowerCase() +\r\n        `.png' height='20px'/> ` +\r\n        ship.shipFlagCode.country.name +\r\n        `</div></div>`,\r\n      name: ship.name,\r\n      callSign: ship.callSign,\r\n      actions: 'btn'\r\n    };\r\n    return row;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.shipService.shipSearchData$.subscribe(data => {\r\n      if (data) {\r\n        if (data.length !== 0) {\r\n          const rowList = [];\r\n          data.forEach(ship => {\r\n            const row = this.dataRow(ship);\r\n            rowList.push(row);\r\n          });\r\n          this.tableData = rowList;\r\n        }\r\n      }\r\n      this.dataSource.load(this.tableData);\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ship-smart-table/ship-smart-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-bg/ssn-bg.component.css\n// module id = ./src/app/shared/components/ssn-bg/ssn-bg.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light p-3\\\">\\r\\n\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n    <div class=\\\"d-table-cell\\\" *ngIf=\\\"icon\\\">\\r\\n      <img src=\\\"{{iconPath}}{{icon}}\\\" class=\\\"mb-2\\\" height=\\\"32px\\\">\\r\\n    </div>\\r\\n    <div class=\\\"d-table-cell pl-2\\\">\\r\\n      <h3 class=\\\"text-ssn mb-0\\\">{{ header }}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ng-content></ng-content>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-bg/ssn-bg.component.html\n// module id = ./src/app/shared/components/ssn-bg/ssn-bg.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ssn-bg',\r\n  templateUrl: './ssn-bg.component.html',\r\n  styleUrls: ['./ssn-bg.component.css']\r\n})\r\nexport class SsnBgComponent implements OnInit {\r\n  iconPath = 'assets/images/VoyageIcons/128x128/white/';\r\n\r\n  @Input() icon: string;\r\n\r\n  @Input() header: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ssn-bg/ssn-bg.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-card/ssn-card.component.css\n// module id = ./src/app/shared/components/ssn-card/ssn-card.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card ssn-card my-2\\\">\\r\\n  <div class=\\\"card-header bg-ssn text-ssn text-left d-table py-1\\\">\\r\\n    <div class=\\\"d-table-row text-white px-4\\\" [ngClass]=\\\"{clickable: collapsible}\\\" (click)=\\\"collapsible ? changeState() : null\\\">\\r\\n\\r\\n      <div class=\\\"d-table-cell pt-1\\\">\\r\\n        <h5 class=\\\"mb-0 text-vertical-align\\\"><img *ngIf=\\\"icon\\\" src=\\\"{{iconPath}}{{icon}}\\\" height=\\\"24px\\\" /> {{ header }}</h5>\\r\\n      </div>\\r\\n      <div class=\\\"d-table-cell pb-0 text-right\\\">\\r\\n        <button *ngIf=\\\"collapsible\\\" class=\\\"btn btn-sm btn-outline-light\\\">\\r\\n          <img src=\\\"{{iconPath}}{{collapsedIcon}}\\\" height=\\\"16px\\\">\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body p-2\\\" *ngIf=\\\"!collapsed\\\">\\r\\n    <ng-content></ng-content>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-card/ssn-card.component.html\n// module id = ./src/app/shared/components/ssn-card/ssn-card.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ssn-card',\r\n  templateUrl: './ssn-card.component.html',\r\n  styleUrls: ['./ssn-card.component.css']\r\n})\r\nexport class SsnCardComponent implements OnInit {\r\n  iconPath = 'assets/images/VoyageIcons/128x128/white/';\r\n\r\n  @Input() icon: string;\r\n\r\n  @Input() header: string;\r\n\r\n  @Input() collapsible: boolean;\r\n\r\n  @Input() collapsed: boolean;\r\n\r\n  collapsedIcon: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (this.collapsed == null) {\r\n      this.collapsed = false;\r\n    }\r\n    this.collapsedIcon = this.collapsed\r\n      ? 'arrowhead-left.png'\r\n      : 'arrowhead-down.png';\r\n  }\r\n\r\n  changeState() {\r\n    this.collapsed = !this.collapsed;\r\n    this.collapsedIcon = this.collapsed\r\n      ? 'arrowhead-left.png'\r\n      : 'arrowhead-down.png';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ssn-card/ssn-card.component.ts","module.exports = \".table-card-header-bg {\\r\\n    background-color: #344d6e;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/table-card/table-card.component.css\n// module id = ./src/app/shared/components/table-card/table-card.component.css\n// module chunks = main","module.exports = \"<div class=\\\"border border-white table-card-header-bg p-1\\\">\\r\\n  <div class=\\\"row text-center text-white px-4\\\" [ngClass]=\\\"{clickable: collapsible}\\\" (click)=\\\"collapsible ? changeState() : null\\\">\\r\\n    <div class=\\\"d-table-cell mr-auto\\\">\\r\\n      <img *ngIf=\\\"icon\\\" src=\\\"{{iconPath}}{{icon}}\\\" height=\\\"24px\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"d-table-cell m-auto\\\">\\r\\n      <span>{{ header }}</span>\\r\\n    </div>\\r\\n    <div class=\\\"d-table-cell ml-auto\\\">\\r\\n      <button *ngIf=\\\"collapsible\\\" class=\\\"btn btn-sm btn-outline-light\\\">\\r\\n        <img src=\\\"{{iconPath}}{{collapsedIcon}}\\\" height=\\\"16px\\\">\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!collapsed\\\" class=\\\"table-responsive border-bottom border-left border-right border-white text-white\\\">\\r\\n  <table class=\\\"table mb-0\\\">\\r\\n    <ng-content></ng-content>\\r\\n  </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/table-card/table-card.component.html\n// module id = ./src/app/shared/components/table-card/table-card.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-table-card',\r\n  templateUrl: './table-card.component.html',\r\n  styleUrls: ['./table-card.component.css']\r\n})\r\nexport class TableCardComponent implements OnInit {\r\n  iconPath = 'assets/images/VoyageIcons/128x128/white/';\r\n\r\n  @Input() icon: string;\r\n\r\n  @Input() header: string;\r\n\r\n  @Input() collapsible: boolean;\r\n\r\n  @Input() collapsed: boolean;\r\n\r\n  collapsedIcon: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (this.collapsed == null) {\r\n      this.collapsed = false;\r\n    }\r\n    this.collapsedIcon = this.collapsed\r\n      ? 'arrowhead-left.png'\r\n      : 'arrowhead-down.png';\r\n  }\r\n\r\n  changeState() {\r\n    this.collapsed = !this.collapsed;\r\n    this.collapsedIcon = this.collapsed\r\n      ? 'arrowhead-left.png'\r\n      : 'arrowhead-down.png';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/table-card/table-card.component.ts","const CONTENT_NAMES = {\r\n  REGISTER_USER: 'USERS',\r\n  VIEW_SHIPS: 'SHIPS',\r\n  REGISTER_SHIP: 'Register Ship',\r\n  LOCATIONS: 'LOCATIONS',\r\n  REGISTER_LOCATION: 'Register Location',\r\n  VIEW_ORGANIZATIONS: 'ORGANIZATIONS',\r\n  REGISTER_ORGANIZATION: 'Register Organization',\r\n\r\n  VIEW_PORT_CALLS: 'PORT CALL',\r\n  REGISTER_PORT_CALL_DRAFT: 'Register Port Call Draft',\r\n  REGISTER_PORT_CALL: 'Register Port Call',\r\n  VIEW_PORT_CALL: 'View Port Call',\r\n  PORT_CALL_CLEARANCE: 'Port Call Clearance'\r\n};\r\n\r\nexport { CONTENT_NAMES };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/content-names.ts","export class LocationProperties {\r\n  static PROPERTIES = {\r\n    COUNTRY: { description: 'Country', data: null },\r\n    LOCATION_NAME: { description: 'Name', data: null },\r\n    LOCATION_CODE: { description: 'Location Code', data: null },\r\n    LOCATION_TYPE: { description: 'Type', data: null }\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/location-properties.ts","export class LocationTimeProperties {\r\n  static PROPERTIES = {\r\n    LOCATION_NAME: { description: 'Location Name', data: null },\r\n    LOCATION_CODE: { description: 'Location Code', data: null },\r\n    LOCATION_TYPE: { description: 'Location Type', data: null },\r\n    ETA: { description: 'ETA', data: null },\r\n    ETD: { description: 'ETD', data: null }\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/location-time-properties.ts","export class MenuClaims {\r\n  static TYPE = 'Menu';\r\n  static PERMISSIONS = {\r\n    'PORT CALL': false,\r\n    USERS: false,\r\n    SHIPS: false,\r\n    ORGANIZATIONS: false,\r\n    LOCATIONS: false\r\n  };\r\n  static PORT_CALL = 'PORT CALL';\r\n  static USERS = 'USERS';\r\n  static SHIPS = 'SHIPS';\r\n  static ORGANIZATIONS = 'ORGANIZATIONS';\r\n  static LOCATIONS = 'LOCATIONS';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/menu-claims.ts","export class OrganizationProperties {\r\n  static PROPERTIES = {\r\n    ORGANIZATION_NAME: { description: 'Organization Name', data: null },\r\n    ORGANIZATION_NO: { description: 'Organization No.', data: null },\r\n    ORGANIZATION_TYPE: { description: 'Type', data: null },\r\n    ORGANIZATION_DESCRIPTION: { description: 'Description', data: null }\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/organization-properties.ts","export class OrganizationTypes {\r\n    static GOVERNMENT_AGENCY_STRING = 'Authority';\r\n    static COMPANY_STRING = 'Company';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/organization-types.ts","export class PortCallClaims {\r\n  static TYPE = 'Port Call';\r\n  static buttonRowPermissions = {\r\n    view: false,\r\n    edit: false,\r\n    clearance: false,\r\n    cancel: false,\r\n    delete: false\r\n  };\r\n  static portCallPermissions = {\r\n    register: false,\r\n    edit: false,\r\n    clearance: false\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/port-call-claims.ts","export class PortCallStatusTypes {\r\n  static ACTIVE = 'Active';\r\n  static DRAFT = 'Draft';\r\n  static CANCELLED = 'Cancelled';\r\n  static COMPLETED = 'Completed';\r\n\r\n  static DRAFT_ID = 100235;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/port-call-status-types.ts","const SEARCH_AMOUNTS = {\r\n    DROPDOWN: 6,\r\n    WITHOUT_DROPDOWN: 100\r\n};\r\n\r\nexport { SEARCH_AMOUNTS };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/search-amounts.ts","export class ShipProperties {\r\n  static PROPERTIES = {\r\n    SHIP_NAME: { description: 'Ship Name', data: null },\r\n    CALL_SIGN: { description: 'Call Sign', data: null },\r\n    IMO_NO: { description: 'IMO no.', data: null },\r\n    MMSI_NO: { description: 'MMSI no.', data: null },\r\n    GROSS_TONNAGE: { description: 'Gross Tonnage', data: null },\r\n    LENGTH: { description: 'Length', data: null },\r\n    SHIP_TYPE: { description: 'Ship Type', data: null },\r\n    SHIP_STATUS: { description: 'Ship Status', data: null }\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/ship-properties.ts","export class ClearanceModel {\r\n  organizationPortCallId: number;\r\n  organizationId: number;\r\n  portCallId: number;\r\n  remark: string;\r\n  cleared: boolean;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/clearance-model.ts","export class LocationModel {\r\n  locationType: any;\r\n  locationId: number;\r\n  locationInLocationId: number;\r\n  countryId: number;\r\n  locationTypeId: number;\r\n  locationSourceId: number;\r\n  municipalityId: number;\r\n  locationCode: string;\r\n  locationNo: number;\r\n  postCode: string;\r\n  name: string;\r\n  country: any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/location-model.ts","export class OrganizationModel {\r\n  organizationType: any;\r\n  organizationId: number;\r\n  name: string;\r\n  invoiceReceiverNo: number;\r\n  organizationNo: string;\r\n  description: string;\r\n  isActive: boolean;\r\n  organizationTypeId: number;\r\n  imoCompanyNumber: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/organization-model.ts","export class PortCallDetailsModel {\r\n  portCallDetailsId: number;\r\n  portCallId: number;\r\n  numberOfCrew: number;\r\n  numberOfPassengers: number;\r\n  actualDraught: number;\r\n  airDraught: number;\r\n  reportingDpg: boolean;\r\n  reportingCargo: boolean;\r\n  reportingShipStores: boolean;\r\n  reportingCrew: boolean;\r\n  reportingPax: boolean;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-details-model.ts","export class PortCallModel {\r\n  portCallId: number;\r\n  nextLocationId: number;\r\n  previousLocationId: number;\r\n  locationId: number;\r\n  shipId: number;\r\n  portCallStatusId: number;\r\n  remark: string;\r\n  previousLocationEtd: Date;\r\n  previousLocationAtd: Date;\r\n  locationEtd: Date;\r\n  locationAtd: Date;\r\n  locationEta: Date;\r\n  locationAta: Date;\r\n  nextLocationEta: Date;\r\n  nextLocationAta: Date;\r\n  userId: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-model.ts","import { ContactMediumModel } from './contact-medium-model';\r\n\r\nexport class ShipContactModel {\r\n    shipContactId: number;\r\n    contactMediumId: number;\r\n    shipId: number;\r\n    contactValue: string;\r\n    isPreferred: boolean;\r\n    comments: string;\r\n    // internal models:\r\n    contactMedium: ContactMediumModel;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-contact-model.ts","export class ShipModel {\r\n    shipId: number;\r\n    shipHullTypeId: number;\r\n    shipStatusId: number;\r\n    shipPowerTypeId: number;\r\n    shipBreadthTypeId: number;\r\n    shipLengthTypeId: number;\r\n    shipSourceId: number;\r\n    shipFlagCodeId: number;\r\n    organizationId: number;\r\n    shipTypeId: number;\r\n    imoNo: number;\r\n    yearOfBuild: number;\r\n    mmsiNo: number;\r\n    name: string;\r\n    callSign: string;\r\n    deadweightTonnage: number;\r\n    grossTonnage: number;\r\n    length: number;\r\n    breadth: number;\r\n    power: number;\r\n    height: number;\r\n    draught: number;\r\n    hasSideThrusters: boolean;\r\n    hasSideThrustersFront: boolean;\r\n    hasSideThrustersBack: boolean;\r\n    remark: string;\r\n    certificateOfRegistryId: number;\r\n    dateOfKeelLaying: Date;\r\n    // connected models:\r\n    organization: any;\r\n    shipHullType: any;\r\n    shipStatus: any;\r\n    shipPowerType: any;\r\n    shipBreadthType: any;\r\n    shipLengthType: any;\r\n    shipSource: any;\r\n    shipFlagCode: any;\r\n    shipType: any;\r\n    shipContact: any[];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-model.ts","export class UserModel {\r\n  email: string;\r\n  phoneNumber: string;\r\n  givenName: string;\r\n  surname: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/user-model.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { UserModelWithPassword } from 'app/shared/models/user-model-with-password';\r\nimport { BaseRequest } from 'app/shared/utils/base.request';\r\nimport { ConfigService } from 'app/shared/utils/config.service';\r\nimport { AuthRequest } from './auth.request.service';\r\n\r\n\r\n@Injectable()\r\nexport class AccountService extends BaseRequest {\r\n    // URLs\r\n    private accountBaseUrl = '/account';\r\n    private actionUrl: string;\r\n    private registerUserUrl: string;\r\n    private userUrl: string;\r\n    private rolesUrl: string;\r\n    private userClaimsUrl: string;\r\n    private userNameUrl: string;\r\n    private emailTakenUrl: string;\r\n    private organizationForUserUrl: string;\r\n\r\n    // Subjects & observables\r\n    private userClaimsDataSource = new BehaviorSubject<any>(null);\r\n    userClaimsData$ = this.userClaimsDataSource.asObservable();\r\n\r\n    private userOrganizationDataSource = new BehaviorSubject<any>(null);\r\n    userOrganizationData$ = this.userOrganizationDataSource.asObservable();\r\n\r\n    constructor(\r\n        private http: Http,\r\n        authRequestService: AuthRequest,\r\n        configService: ConfigService\r\n    ) {\r\n        super(configService, authRequestService);\r\n        this.actionUrl = this.baseUrl + this.accountBaseUrl;\r\n        this.userUrl = this.actionUrl + '/user';\r\n        this.rolesUrl = this.actionUrl + '/roles';\r\n        this.userClaimsUrl = this.userUrl + '/claims';\r\n        this.userNameUrl = this.userUrl + '/name';\r\n        this.emailTakenUrl = this.actionUrl + '/emailTaken';\r\n    }\r\n\r\n    getAllRoles() {\r\n        const options = this.getRequestOptions();\r\n        return this.http\r\n            .get(this.rolesUrl, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    setUserOrganization(data) {\r\n        this.userOrganizationDataSource.next(data);\r\n    }\r\n\r\n    getUserClaims() {\r\n        const options = this.getRequestOptions();\r\n        return this.http.get(this.userClaimsUrl, options)\r\n            .map(res => res.json());\r\n    }\r\n    setUserClaims(data) {\r\n        this.userClaimsDataSource.next(data);\r\n    }\r\n\r\n    // Will be deprecated once email registration is implemented.\r\n    registerUser(newUser: UserModelWithPassword) {\r\n        const options = this.getRequestOptions();\r\n        return this.http.post(this.userUrl, newUser, options);\r\n    }\r\n\r\n    getUserName() {\r\n        const options = this.getRequestOptions();\r\n        return this.http\r\n            .get(this.userNameUrl, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getUserByEmail(email: string) {\r\n        const options = this.getRequestOptions();\r\n        const uri = [this.userUrl, email].join('/');\r\n\r\n        return this.http\r\n            .get(uri, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    emailTaken(email: string): Observable<boolean> {\r\n        const options = this.getRequestOptions();\r\n        const uri = [this.emailTakenUrl, email].join('/');\r\n        console.log(uri);\r\n\r\n        return this.http\r\n            .get(uri, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    changeRole(userName: string, roleName: string) {\r\n        /* Not yet implemented\r\n        return this.http.post(url,body)\r\n            .map(res => res.json());\r\n         */\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/account.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions } from '@angular/http';\r\nimport { BaseRequest } from 'app/shared/utils/base.request';\r\nimport { ConfigService } from 'app/shared/utils/config.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthRequest } from './auth.request.service';\r\n\r\n@Injectable()\r\nexport class AuthService extends BaseRequest {\r\n  private authBaseUrl = '/auth';\r\n  private actionUrl;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private authService: AuthRequest,\r\n    configService: ConfigService\r\n  ) {\r\n    super(configService, authService);\r\n    this.actionUrl = this.baseUrl + this.authBaseUrl;\r\n  }\r\n\r\n  isAdmin(): Observable<boolean> {\r\n    const authHeader = this.authService.GetHeaders();\r\n    const options = new RequestOptions({ headers: authHeader });\r\n    return this.http\r\n      .get(this.actionUrl + '/isAdmin', options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  canSetClearance(): Observable<any> {\r\n    const authHeader = this.authService.GetHeaders();\r\n    const options = new RequestOptions({ headers: authHeader });\r\n    return (\r\n      this.http\r\n        // .get(this.actionUrl + \"/canSetPortCallClearance\", options);\r\n        .get('api/test/canSetPortCallClearance', options)\r\n        .map(res => res.json())\r\n    );\r\n  }\r\n\r\n  hasToken(): boolean {\r\n    return localStorage.getItem('auth_token') != null;\r\n  }\r\n\r\n  hasValidToken(): Observable<boolean> {\r\n    const authHeader = this.authService.GetHeaders();\r\n    const options = new RequestOptions({ headers: authHeader });\r\n    return this.http\r\n      .get(this.actionUrl + '/hasValidToken', options)\r\n      .map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/auth-service.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class AuthRequest {\r\n  constructor(private http: Http) {}\r\n\r\n  GetHeaders() {\r\n    const headers = new Headers();\r\n    headers.append(\r\n      'Authorization',\r\n      'Bearer ' + localStorage.getItem('auth_token')\r\n    );\r\n    return headers;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/auth.request.service.ts","// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/shared/services/base.service.ts\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport abstract class BaseService {\r\n  constructor() {}\r\n  protected handleError(error: any) {\r\n    const applicationError = error.headers.get('Application-Error');\r\n\r\n    // either applicationError in header or model error in body\r\n    if (applicationError) {\r\n      return Observable.throw(applicationError);\r\n    }\r\n\r\n    let modelStateErrors = '';\r\n    const serverError = error.json();\r\n\r\n    if (!serverError.type) {\r\n      for (const key in serverError) {\r\n        if (serverError[key]) { modelStateErrors += serverError[key] + '\\n'; }\r\n      }\r\n    }\r\n\r\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\r\n    return Observable.throw(modelStateErrors || 'Server error');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/base.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class ConstantsService {\r\n  private contactMediumUrl: string;\r\n  private claimUrl: string;\r\n  private portCallClaimsUrl: string;\r\n  private getMenuClaimListUrl: string;\r\n\r\n  constructor(private http: Http) {\r\n    this.contactMediumUrl = 'api/contactmedium';\r\n    this.claimUrl = 'api/claim';\r\n    this.portCallClaimsUrl = 'api/claim/type/portcall';\r\n    this.getMenuClaimListUrl = 'api/claim/type/menu';\r\n  }\r\n\r\n  getContactMediumList() {\r\n    return this.http.get(this.contactMediumUrl).map(res => res.json());\r\n  }\r\n\r\n  getClaimList() {\r\n    return this.http.get(this.claimUrl).map(res => res.json());\r\n  }\r\n\r\n  GetPortCallClaimList() {\r\n    return this.http.get(this.portCallClaimsUrl).map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/constants.service.ts","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\n\r\n@Injectable()\r\nexport class ContactService {\r\n  private contactDataSource = new BehaviorSubject<any>(null);\r\n  contactData$ = this.contactDataSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  wipeServiceData() {\r\n    this.contactDataSource.next(null);\r\n  }\r\n\r\n  setContactData(data) {\r\n    this.contactDataSource.next(data);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/contact.service.ts","import { Injectable } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { BaseService } from './base.service';\r\nimport { LoadingScreen } from '../interfaces/loading-screen.interface';\r\n\r\n@Injectable()\r\nexport class ContentService extends BaseService {\r\n  private contentSource = new BehaviorSubject<string>(\r\n    CONTENT_NAMES.VIEW_PORT_CALLS\r\n  );\r\n  contentName$ = this.contentSource.asObservable();\r\n\r\n  private portCallFormSource = new BehaviorSubject<string>('Port Call Details');\r\n  portCallFormName$ = this.portCallFormSource.asObservable();\r\n\r\n  private loadingScreenSource = new BehaviorSubject<LoadingScreen>(null);\r\n  loadingScreen$ = this.loadingScreenSource.asObservable();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  setContent(contentName: string) {\r\n    this.setLoadingScreen(false, null, null);\r\n    this.contentSource.next(contentName);\r\n  }\r\n\r\n  setPortCallForm(contentName: string) {\r\n    this.portCallFormSource.next(contentName);\r\n  }\r\n\r\n  setLoadingScreen(isLoading: boolean, loadingIcon: string, loadingText: string) {\r\n    this.loadingScreenSource.next({isLoading, loadingIcon, loadingText});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/content.service.ts","import { Injectable } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { BaseService } from './base.service';\r\nimport { Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class DbConnectionService extends BaseService {\r\n  private connectionUrl: string;\r\n\r\n  private hasDbConnectionSource = new BehaviorSubject<boolean>(true);\r\n  hasDbConnection$ = this.hasDbConnectionSource.asObservable();\r\n\r\n  constructor(private http: Http) {\r\n    super();\r\n    this.connectionUrl = 'api/connection/state';\r\n  }\r\n\r\n  getHasDbConnection() {\r\n    return this.http.get(this.connectionUrl).map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/db-connection.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions } from '@angular/http';\r\nimport { LocationModel } from 'app/shared/models/location-model';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthRequest } from './auth.request.service';\r\nimport { SearchService } from './search.service';\r\nimport 'rxjs/add/observable/of';\r\n\r\n@Injectable()\r\nexport class LocationService {\r\n  private searchService: SearchService;\r\n  private searchUrl: string;\r\n  private searchHarbourUrl: string;\r\n  private locationUrl: string;\r\n  private locationTypeUrl: string;\r\n  private countryUrl: string;\r\n\r\n  constructor(private http: Http, private authRequest: AuthRequest) {\r\n    this.searchService = new SearchService(http);\r\n    this.searchUrl = 'api/location/search';\r\n    this.searchHarbourUrl = 'api/location/harbour/search';\r\n    this.locationUrl = 'api/location';\r\n    this.locationTypeUrl = 'api/locationtype';\r\n    this.countryUrl = 'api/country';\r\n  }\r\n\r\n  private locationDataSource = new BehaviorSubject<any>(null);\r\n  locationData$ = this.locationDataSource.asObservable();\r\n\r\n  private locationSearchDataSource = new BehaviorSubject<any>(null);\r\n  locationSearchData$ = this.locationSearchDataSource.asObservable();\r\n\r\n  setLocationData(data) {\r\n    this.locationDataSource.next(data);\r\n  }\r\n\r\n  setLocationSearchData(data) {\r\n    this.locationSearchDataSource.next(data);\r\n  }\r\n\r\n  public search(term: string, restrictTypeHarbour: boolean, amount = 10) {\r\n    if (term.length < 2) {\r\n      return Observable.of([]);\r\n    }\r\n    const uri = (restrictTypeHarbour) ? this.searchHarbourUrl : this.searchUrl;\r\n    return this.searchService.search(uri, term, amount);\r\n  }\r\n\r\n  public searchHarbour(term: string) {\r\n    if (term.length < 2) {\r\n      return Observable.of([]);\r\n    }\r\n    return this.searchService.search(this.searchHarbourUrl, term);\r\n  }\r\n\r\n  public updateLocation(location: LocationModel) {\r\n    const auth_headers = this.authRequest.GetHeaders();\r\n    const options = new RequestOptions({ headers: auth_headers });\r\n    return this.http\r\n      .put(this.locationUrl, location, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  public registerLocation(newLocation: LocationModel) {\r\n    const authHeaders = this.authRequest.GetHeaders();\r\n    const options = new RequestOptions({ headers: authHeaders });\r\n    return this.http\r\n      .post(this.locationUrl, newLocation, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  public getLocationTypes() {\r\n    return this.http.get(this.locationTypeUrl).map(res => res.json());\r\n  }\r\n\r\n  public getCountries() {\r\n    return this.http.get(this.countryUrl).map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/location.service.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { ConfigService } from '../utils/config.service';\r\nimport { AccountService } from './account.service';\r\nimport { BaseService } from './base.service';\r\n\r\n// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/shared/services/user.service.ts\r\n\r\n@Injectable()\r\nexport class LoginService extends BaseService {\r\n  baseUrl = '';\r\n\r\n  // Observable navItem source\r\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n  // Observable navItem stream\r\n  authNavStatus$ = this._authNavStatusSource.asObservable();\r\n\r\n  private _loggedInSource = new BehaviorSubject<boolean>(false);\r\n  loggedIn$ = this._loggedInSource.asObservable();\r\n  private loggedIn = false;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private configService: ConfigService,\r\n    private jwtHelperService: JwtHelperService\r\n  ) {\r\n    super();\r\n    this.loggedIn = !!localStorage.getItem('auth_token');\r\n    // ?? not sure if this the best way to broadcast the status but seems to resolve issue on page refresh where auth status is lost in\r\n    // header component resulting in authed user nav links disappearing despite the fact user is still logged in\r\n    this._authNavStatusSource.next(this.loggedIn);\r\n    this.baseUrl = configService.getApiURI();\r\n    this.jwtHelperService = new JwtHelperService({\r\n      tokenGetter: () => localStorage.getItem('')\r\n    });\r\n  }\r\n\r\n  login(userName, password) {\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return this.http\r\n      .post(\r\n        this.baseUrl + '/auth/login',\r\n        JSON.stringify({ userName, password }),\r\n        { headers }\r\n      )\r\n      .map(res => res.json())\r\n      .map(res => {\r\n        if (res) {\r\n          localStorage.setItem('auth_token', res.auth_token);\r\n          this.loggedIn = true;\r\n          this._loggedInSource.next(true);\r\n          this._authNavStatusSource.next(true);\r\n          return true;\r\n        }\r\n        this._loggedInSource.next(false);\r\n        this._authNavStatusSource.next(false);\r\n        return false;\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('auth_token');\r\n    localStorage.removeItem('user_claims');\r\n    this.loggedIn = false;\r\n    this._loggedInSource.next(false);\r\n    this._authNavStatusSource.next(false);\r\n  }\r\n\r\n  // Tips from https://ryanchenkie.com/angular-authentication-using-route-guards\r\n  isLoggedIn() {\r\n    // Get token from localStorage\r\n    const token = localStorage.getItem('auth_token');\r\n    // Check whether the token is expired\r\n    const isExpired = this.jwtHelperService.isTokenExpired(token);\r\n\r\n    return !isExpired;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/login.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { OrganizationModel } from '../models/organization-model';\r\nimport { AuthRequest } from './auth.request.service';\r\nimport { SearchService } from './search.service';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class OrganizationService {\r\n  private searchService: SearchService;\r\n  private searchOrganizationUrl: string;\r\n  private organizationUrl: string;\r\n  private organizationTypeUrl: string;\r\n  private organizationUserUrl: string;\r\n\r\n  constructor(private http: Http, private authRequestService: AuthRequest) {\r\n    this.searchService = new SearchService(http);\r\n    this.organizationUrl = 'api/organization';\r\n    this.organizationTypeUrl = 'api/organizationtype';\r\n    this.organizationUserUrl = this.organizationUrl + '/user';\r\n    this.searchOrganizationUrl = this.organizationUrl + '/search';\r\n  }\r\n\r\n  private organizationDataSource = new BehaviorSubject<any>(null);\r\n  organizationData$ = this.organizationDataSource.asObservable();\r\n\r\n  private organizationSearchDataSource = new BehaviorSubject<any>(null);\r\n  organizationSearchData$ = this.organizationSearchDataSource.asObservable();\r\n\r\n  setOrganizationData(data) {\r\n    this.organizationDataSource.next(data);\r\n  }\r\n\r\n  setOrganizationSearchData(data) {\r\n    this.organizationSearchDataSource.next(data);\r\n  }\r\n\r\n  public registerOrganization(newOrganization: OrganizationModel) {\r\n    const authHeaders = this.authRequestService.GetHeaders();\r\n    const options = new RequestOptions({ headers: authHeaders });\r\n    return this.http\r\n      .post(this.organizationUrl, newOrganization, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  updateOrganization(organization: OrganizationModel) {\r\n    const auth_headers = this.authRequestService.GetHeaders();\r\n    const options = new RequestOptions({ headers: auth_headers });\r\n    return this.http\r\n      .put(this.organizationUrl, organization, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  public search(term: string, amount = 10) {\r\n    if (term.length < 2) {\r\n      return Observable.of([]);\r\n    }\r\n    return this.searchService.search(this.searchOrganizationUrl, term, amount);\r\n  }\r\n\r\n  public getOrganizationTypes() {\r\n    return this.http.get(this.organizationTypeUrl).map(res => res.json());\r\n  }\r\n\r\n  public getOrganizationForUser() {\r\n    const auth_headers = this.authRequestService.GetHeaders();\r\n    const options = new RequestOptions({ headers: auth_headers });\r\n    const uri: string = this.organizationUserUrl;\r\n    return this.http.get(uri, options).map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/organization.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { BaseRequest } from 'app/shared/utils/base.request';\r\nimport { ConfigService } from 'app/shared/utils/config.service';\r\nimport { AuthRequest } from './auth.request.service';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\n\r\n@Injectable()\r\nexport class PortCallOverviewService extends BaseRequest {\r\n    private portCallUrl: string;\r\n    private portCallUserUrl: string;\r\n    private overviewUrl: string;\r\n    private partialOverviewUrl: string;\r\n\r\n    private overviewDataSource = new BehaviorSubject<any>(null);\r\n    overviewData$ = this.overviewDataSource.asObservable();\r\n\r\n    private draftOverviewDataSource = new BehaviorSubject<any>(null);\r\n    draftOverviewData$ = this.draftOverviewDataSource.asObservable();\r\n\r\n    private showCancelledPortCallsSource = new BehaviorSubject<boolean>(false);\r\n    showCancelledPortCall$ = this.showCancelledPortCallsSource.asObservable();\r\n\r\n    private clearedByUserAgencyDataSource = new BehaviorSubject<any>(null);\r\n    clearedByUserAgencyOverviewData$ = this.clearedByUserAgencyDataSource.asObservable();\r\n\r\n    private portCallDataSource = new BehaviorSubject<any>(null);\r\n    portCallData$ = this.portCallDataSource.asObservable();\r\n\r\n    private loadingPortCallSource = new BehaviorSubject<boolean>(false);\r\n    loadingPortCall$ = this.loadingPortCallSource.asObservable();\r\n\r\n    constructor(\r\n        private http: Http,\r\n        authRequestService: AuthRequest,\r\n        configService: ConfigService\r\n    ) {\r\n        super(configService, authRequestService);\r\n        this.portCallUrl = 'api/portcall';\r\n        this.partialOverviewUrl = this.portCallUrl + '/partialOverview';\r\n        this.overviewUrl = this.portCallUrl + '/overview';\r\n        this.portCallUserUrl = this.portCallUrl + '/user';\r\n    }\r\n\r\n    setLoadingPortCall(data: boolean) {\r\n        this.loadingPortCallSource.next(data);\r\n    }\r\n\r\n    setOverviewData(data) {\r\n        this.overviewDataSource.next(data);\r\n    }\r\n\r\n    setDraftData(data) {\r\n        this.draftOverviewDataSource.next(data);\r\n    }\r\n\r\n    setShowCancelledPortCalls(showCancelled) {\r\n        this.showCancelledPortCallsSource.next(showCancelled);\r\n    }\r\n\r\n    setClearedData(data) {\r\n        this.clearedByUserAgencyDataSource.next(data);\r\n    }\r\n\r\n    getPartialOverview(portCallId: number) {\r\n        const uri: string = [this.partialOverviewUrl, portCallId].join('/');\r\n        return this.http.get(uri).map(res => res.json());\r\n    }\r\n\r\n    getOverview(portCallId: number) {\r\n        const uri: string = [this.overviewUrl, portCallId].join('/');\r\n        return this.http.get(uri).map(res => res.json());\r\n    }\r\n\r\n    setPortCallData(data) {\r\n        this.portCallDataSource.next(data);\r\n    }\r\n\r\n    getPortCalls() {\r\n        const options = this.getRequestOptions();\r\n        const uri = this.portCallUserUrl;\r\n        return this.http.get(uri, options).map(res => res.json());\r\n    }\r\n\r\n    getOverviews() {\r\n        const uri = this.overviewUrl;\r\n        return this.http.get(uri).map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call-overview.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions } from '@angular/http';\r\nimport { FormMetaData } from 'app/shared/interfaces/form-meta-data.interface';\r\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\r\nimport { PortCallModel } from 'app/shared/models/port-call-model';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthRequest } from './auth.request.service';\r\n\r\n@Injectable()\r\nexport class PortCallService {\r\n  // Global port call\r\n  private portCallUrl: string;\r\n  private portCallUserUrl: string;\r\n  private updatePortCallStatusActiveUrl: string;\r\n  private updatePortCallStatusCancelledUrl: string;\r\n  // Global purpose\r\n  private purposePortCallUrl: string;\r\n  private purposeOtherNameUrl: string;\r\n  // Global details\r\n  private detailsUrl: string;\r\n  private detailsPortCallUrl: string;\r\n  // Global clearance\r\n  private clearanceUrl: string;\r\n  private clearancePortCallUrl: string;\r\n  // Subjects\r\n  private detailsPristine = new BehaviorSubject<boolean>(true);\r\n  detailsPristine$ = this.detailsPristine.asObservable();\r\n\r\n  // Data sources with observables\r\n  private updateOverviewSource = new BehaviorSubject<any>(null);\r\n  updateOverview$ = this.updateOverviewSource.asObservable();\r\n\r\n  private shipDataSource = new BehaviorSubject<any>(null);\r\n  shipData$ = this.shipDataSource.asObservable();\r\n\r\n  private locationDataSource = new BehaviorSubject<any>(null);\r\n  locationData$ = this.locationDataSource.asObservable();\r\n\r\n  private etaEtdDataSource = new BehaviorSubject<any>(null);\r\n  etaEtdData$ = this.etaEtdDataSource.asObservable();\r\n\r\n  private portCallStatusSource = new BehaviorSubject<any>(null);\r\n  portCallStatusData$ = this.portCallStatusSource.asObservable();\r\n\r\n  private detailsIdentificationSource = new BehaviorSubject<any>(null);\r\n  detailsIdentificationData$ = this.detailsIdentificationSource.asObservable();\r\n\r\n  private crewPassengersAndDimensionsSource = new BehaviorSubject<any>(null);\r\n  crewPassengersAndDimensionsData$ = this.crewPassengersAndDimensionsSource.asObservable();\r\n\r\n  private crewPassengersAndDimensionsMeta = new BehaviorSubject<FormMetaData>({\r\n    valid: true\r\n  });\r\n  crewPassengersAndDimensionsMeta$ = this.crewPassengersAndDimensionsMeta.asObservable();\r\n\r\n  private reportingForThisPortCallSource = new BehaviorSubject<any>(null);\r\n  reportingForThisPortCallData$ = this.reportingForThisPortCallSource.asObservable();\r\n\r\n  private portCallPurposeDataSource = new BehaviorSubject<any>(null);\r\n  portCallPurposeData$ = this.portCallPurposeDataSource.asObservable();\r\n\r\n  private otherPurposeNameSource = new BehaviorSubject<string>('');\r\n  otherPurposeName$ = this.otherPurposeNameSource.asObservable();\r\n\r\n  private otherPurposeDataSource = new BehaviorSubject<any>(null);\r\n  otherPurposeData$ = this.otherPurposeDataSource.asObservable();\r\n\r\n  private clearanceDataSource = new BehaviorSubject<any>(null);\r\n  clearanceData$ = this.clearanceDataSource.asObservable();\r\n\r\n  private clearanceListDataSource = new BehaviorSubject<any>(null);\r\n  clearanceListData$ = this.clearanceListDataSource.asObservable();\r\n\r\n  constructor(private http: Http, private authRequestService: AuthRequest) {\r\n    // Port call\r\n    this.portCallUrl = 'api/portcall';\r\n    this.portCallUserUrl = 'api/portcall/user';\r\n    this.updatePortCallStatusActiveUrl = 'api/portcall/updatestatus/active';\r\n    this.updatePortCallStatusCancelledUrl =\r\n      'api/portcall/updatestatus/cancelled';\r\n    // Purpose\r\n    this.purposePortCallUrl = 'api/purpose/portcall';\r\n    this.purposeOtherNameUrl = 'api/purpose/othername';\r\n    // Details\r\n    this.detailsUrl = 'api/portcalldetails';\r\n    this.detailsPortCallUrl = 'api/portcalldetails/portcall';\r\n    // Clearance\r\n    this.clearanceUrl = 'api/organizationportcall';\r\n    this.clearancePortCallUrl = 'api/organizationportcall/portcall';\r\n  }\r\n\r\n  // Helper method for ETA/ETD formatting\r\n  etaEtdDataFormat(arrival, departure) {\r\n    const etaData = new Date(arrival);\r\n    const etdData = new Date(departure);\r\n    return {\r\n      eta: {\r\n        year: etaData.getFullYear(),\r\n        month: etaData.getMonth() + 1,\r\n        day: etaData.getDate(),\r\n        hour: etaData.getHours(),\r\n        minute: etaData.getMinutes()\r\n      },\r\n      etd: {\r\n        year: etdData.getFullYear(),\r\n        month: etdData.getMonth() + 1,\r\n        day: etdData.getDate(),\r\n        hour: etdData.getHours(),\r\n        minute: etdData.getMinutes()\r\n      }\r\n    };\r\n  }\r\n\r\n  setUpdateOverview(data) {\r\n    this.updateOverviewSource.next(data);\r\n  }\r\n\r\n  /** * * * * * * * * * * *\r\n   *                       *\r\n   *  == NEW PORT CALL ==  *\r\n   *                       *\r\n   * * * * * * * * * * * * */\r\n  // setPortCall: sets values for: Ship, Location, ETA/ETD, and Clearance list\r\n  setPortCall(overview: any) {\r\n    // Ship Location Time\r\n    this.setShipData(overview.ship);\r\n    this.setLocationData(overview.location);\r\n    const etaEtd = this.etaEtdDataFormat(\r\n      overview.portCall.locationEta,\r\n      overview.portCall.locationEtd\r\n    );\r\n    this.setEtaEtdData(etaEtd);\r\n    // Clearance list\r\n    this.setClearanceListData(overview.clearanceList);\r\n    this.setPortCallStatus(overview.status);\r\n  }\r\n\r\n  updatePortCall(portCall: PortCallModel) {\r\n    console.log('Updating port call...');\r\n    const authHeaders = this.authRequestService.GetHeaders();\r\n    const options = new RequestOptions({ headers: authHeaders });\r\n    this.http\r\n      .put(this.portCallUrl, portCall, options)\r\n      .map(res => res.json())\r\n      .subscribe(data => {\r\n        console.log('Success');\r\n        console.log(data);\r\n      });\r\n  }\r\n  setShipData(data) {\r\n    this.shipDataSource.next(data);\r\n  }\r\n  // Location\r\n  setLocationData(data) {\r\n    // NEW\r\n    this.locationDataSource.next(data);\r\n  }\r\n  // ETA / ETD\r\n\r\n  setEtaEtdData(data) {\r\n    // NEW\r\n    this.etaEtdDataSource.next(data);\r\n  }\r\n  // Status\r\n\r\n  setPortCallStatus(data) {\r\n    this.portCallStatusSource.next(data);\r\n  }\r\n\r\n  // REGISTER NEW PORT CALL\r\n  registerNewPortCall(portCall: PortCallModel) {\r\n    // NEW\r\n    console.log('Registering new port call...');\r\n    const authHeaders = this.authRequestService.GetHeaders();\r\n    const options = new RequestOptions({ headers: authHeaders });\r\n    const uri: string = this.portCallUrl;\r\n    this.setPortCallStatus('Draft');\r\n    return this.http.post(uri, portCall, options).map(res => res.json());\r\n  }\r\n  // Set port call status to actual\r\n  updatePortCallStatusActive(portCallId: number) {\r\n    const uri = [this.updatePortCallStatusActiveUrl, portCallId].join('/');\r\n    console.log('Updating port call status to active...');\r\n    return this.http.post(uri, null).map(res => res.json());\r\n  }\r\n  // Set port call status to cancelled\r\n  updatePortCallStatusCancelled(portCallId: number) {\r\n    const uri = [this.updatePortCallStatusCancelledUrl, portCallId].join('/');\r\n    console.log('Updating port call status to cancelled...');\r\n    this.http\r\n      .post(uri, null)\r\n      .map(res => res.json())\r\n      .subscribe(updateStatusResponse => {\r\n        console.log('Port call successfully cancelled.');\r\n      });\r\n  }\r\n  // Delete port call draft\r\n  deletePortCallDraft(portCall: PortCallModel) {\r\n    console.log('Deleting port call...');\r\n    const authHeaders = this.authRequestService.GetHeaders();\r\n    const options = new RequestOptions({\r\n      headers: authHeaders,\r\n      body: portCall\r\n    });\r\n    const uri: string = this.portCallUrl;\r\n\r\n    return this.http.delete(uri, options).map(res => res.json());\r\n  }\r\n  // Get methods\r\n  getPortCallById(portCallId: number) {\r\n    const uri: string = [this.portCallUrl, portCallId].join('/');\r\n\r\n    return this.http.get(uri).map(res => res.json());\r\n  }\r\n\r\n  getPortCallsByUserId(userId: number) {\r\n    const uri: string = [this.portCallUserUrl, userId].join('/');\r\n    return this.http.get(uri).map(res => res.json());\r\n  }\r\n\r\n  /** * * * * * * * * * * * * *\r\n   *                           *\r\n   * == PORT CALL DETAILS ==   *\r\n   *                           *\r\n   * * * * * * * * * * * * * * */\r\n  setDetails(details: PortCallDetailsModel) {\r\n    // NEW\r\n    this.setCrewPassengersAndDimensionsData(details);\r\n    this.setReportingForThisPortCallData(details);\r\n    this.setDetailsIdentificationData(details);\r\n    this.detailsPristine.next(true);\r\n  }\r\n\r\n  setDetailsIdentificationData(data) {\r\n    this.detailsPristine.next(false);\r\n    this.detailsIdentificationSource.next(data);\r\n  }\r\n  // Crew, passengers and dimensions\r\n\r\n  setCrewPassengersAndDimensionsData(data) {\r\n    // NEW\r\n    this.detailsPristine.next(false);\r\n    this.crewPassengersAndDimensionsSource.next(data);\r\n  }\r\n\r\n  setCrewPassengersAndDimensionsMeta(metaData: FormMetaData) {\r\n    this.crewPassengersAndDimensionsMeta.next(metaData);\r\n  }\r\n  // Reporting\r\n  // This is a list of checkboxes that specify which FAL forms to include in this port call registration\r\n\r\n  setReportingForThisPortCallData(data) {\r\n    // NEW\r\n    this.detailsPristine.next(false);\r\n    this.reportingForThisPortCallSource.next(data);\r\n  }\r\n  // Purpose\r\n\r\n  setPortCallPurposeData(data) {\r\n    // NEW\r\n    this.detailsPristine.next(false);\r\n    this.portCallPurposeDataSource.next(data);\r\n  }\r\n  // User-specified purpose of type \"Other\"\r\n  setOtherPurposeName(data) {\r\n    this.detailsPristine.next(false);\r\n    this.otherPurposeNameSource.next(data);\r\n  }\r\n\r\n  setOtherPurposeData(data) {\r\n    // NEW - try to use otherpurpose object instead of just name string, for easier id handling etc.\r\n    this.otherPurposeDataSource.next(data);\r\n  }\r\n\r\n  // SAVE DETAILS\r\n  saveDetails(details: any, purposes: any, otherName: string) {\r\n    // NEW\r\n    details.portCallDetailsId = details.portCallId; // To ensure one-to-one in DB\r\n    console.log('Saving port call details...');\r\n    this.http\r\n      .post(this.detailsUrl, details)\r\n      .map(res => res.json())\r\n      .subscribe(detailsResponse => {\r\n        console.log('Successfully saved port call details.');\r\n        this.savePurposesForPortCall(details.portCallId, purposes, otherName);\r\n      });\r\n  }\r\n  savePurposesForPortCall(pcId: number, purposes: any, otherName: string) {\r\n    // NEW\r\n    if (purposes.length === 0) {\r\n      const uri = [this.purposePortCallUrl, pcId.toString()].join('/');\r\n      this.http\r\n        .delete(uri, null)\r\n        .map(res => res.json())\r\n        .subscribe(removePurposeResponse => {\r\n          if (removePurposeResponse) {\r\n            this.detailsPristine.next(true);\r\n          }\r\n        });\r\n    } else {\r\n      const pcHasPurposeList = purposes.map(p => {\r\n        return {\r\n          portCallId: pcId,\r\n          portCallPurposeId: p.portCallPurposeId,\r\n          purposeIfUnknown: p.name === 'Other' ? otherName : null\r\n        };\r\n      });\r\n      console.log('Saving port call purposes to database...');\r\n      this.http\r\n        .put(this.purposePortCallUrl, pcHasPurposeList)\r\n        .map(res => res.json())\r\n        .subscribe(purposeResponse => {\r\n          if (purposeResponse) {\r\n            this.detailsPristine.next(true);\r\n          }\r\n          console.log('Purposes successfully saved.');\r\n        });\r\n    }\r\n  }\r\n\r\n  // Get methods\r\n  getDetailsByPortCallId(portCallId: number) {\r\n    const uri: string = [this.detailsPortCallUrl, portCallId].join('/');\r\n    return this.http\r\n      .get(uri)\r\n      .map(res => {\r\n        if (res && res.ok) {\r\n          return res.json();\r\n        } else {\r\n          return res.status;\r\n        }\r\n      })\r\n      .catch(e => {\r\n        return Observable.of(e);\r\n      });\r\n  }\r\n\r\n  getPurposeByPortCallId(portCallId: number) {\r\n    const uri: string = [this.purposePortCallUrl, portCallId].join('/');\r\n    return this.http\r\n      .get(uri)\r\n      .map(res => {\r\n        return res.json();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        return Observable.of(e);\r\n      });\r\n  }\r\n\r\n  getOtherName(portCallId: number) {\r\n    const uri: string = [this.purposeOtherNameUrl, portCallId].join('/');\r\n    return this.http\r\n      .get(uri)\r\n      .map(res => {\r\n        return res.json();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        return Observable.of(e);\r\n      });\r\n  }\r\n\r\n  /** * * * * * * * * *\r\n   *                   *\r\n   *  == CLEARANCE ==  *\r\n   *                   *\r\n   * * * * * * * * * * */\r\n\r\n  setClearance(data) {\r\n    this.clearanceDataSource.next(data);\r\n  }\r\n\r\n  // Clearance agencies list\r\n\r\n  setClearanceListData(data) {\r\n    // NEW\r\n    this.clearanceListDataSource.next(data);\r\n  }\r\n\r\n  saveClearance(clearanceModel: any) {\r\n    console.log('Saving clearance to database...');\r\n    this.http\r\n      .put(this.clearanceUrl, clearanceModel)\r\n      .map(res => res.json())\r\n      .subscribe(\r\n        data => {\r\n          console.log('Clearance saved successfully.');\r\n        },\r\n        error => {\r\n          console.log('ERROR: ', error);\r\n        }\r\n      );\r\n  }\r\n\r\n  getClearanceListForPortCall(portCallId: number) {\r\n    const uri: string = [this.clearancePortCallUrl, portCallId].join('/');\r\n\r\n    return this.http.get(uri).map(res =>\r\n      res.json().catch(error => {\r\n        return Observable.of(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  // REGISTER CLEARANCE AGENCIES FOR NEW PORT CALL\r\n  registerClearanceAgenciesForPortCall(portCall: PortCallModel) {\r\n    // NEW\r\n    this.http\r\n      .post(this.clearanceUrl, portCall)\r\n      .map(res => res.json())\r\n      .subscribe(clearanceData => {\r\n        console.log(\r\n          'Clearance agency information successfully added to port call.'\r\n        );\r\n        this.clearanceListDataSource.next(clearanceData);\r\n      });\r\n  }\r\n\r\n  // Wipe methods\r\n  wipeServiceData() {\r\n    this.shipDataSource.next(null);\r\n    this.locationDataSource.next(null);\r\n    this.etaEtdDataSource.next(null);\r\n    this.clearanceListDataSource.next(null);\r\n    // Details\r\n    this.wipeDetailsData();\r\n  }\r\n\r\n  wipeDetailsData() {\r\n    this.reportingForThisPortCallSource.next(null);\r\n    this.crewPassengersAndDimensionsSource.next(null);\r\n    this.portCallPurposeDataSource.next(null);\r\n    this.otherPurposeNameSource.next('');\r\n    this.detailsPristine.next(true);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class PurposeService {\r\n  private purposeUrl = 'api/purpose';\r\n\r\n  constructor(private http: Http) {}\r\n\r\n  getPurposes() {\r\n    return this.http.get(this.purposeUrl).map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/purpose.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class SearchService {\r\n  constructor(private http: Http) { }\r\n\r\n  public search(baseUrl: string, term: string, amount = 10) {\r\n    const encodedTerm: string = encodeURIComponent(term);\r\n    const uri: string = [baseUrl, encodedTerm, amount].join('/');\r\n\r\n    return this.http.get(uri).map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/search.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { SearchService } from './search.service';\r\n\r\n@Injectable()\r\nexport class ShipFlagCodeService {\r\n  constructor(private http: Http) {\r\n    this.searchService = new SearchService(http);\r\n    this.actionUrl = 'api/shipflagcode/search';\r\n  }\r\n\r\n  private searchService: SearchService;\r\n  private actionUrl: string;\r\n\r\n  public search(term: string) {\r\n    if (term.length < 1) {\r\n      return Observable.of([]);\r\n    }\r\n    return this.searchService.search(this.actionUrl, term);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/ship-flag-code.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ShipContactModel } from '../models/ship-contact-model';\r\nimport { AuthRequest } from './auth.request.service';\r\nimport { SearchService } from './search.service';\r\nimport 'rxjs/add/observable/of';\r\n\r\n@Injectable()\r\nexport class ShipService {\r\n  private searchService: SearchService;\r\n  private shipSearchUrl: string;\r\n  private shipTypeUrl: string;\r\n  private hullTypeUrl: string;\r\n  private lengthTypeUrl: string;\r\n  private breadthTypeUrl: string;\r\n  private powerTypeUrl: string;\r\n  private shipSourceUrl: string;\r\n  private shipStatusListUrl: string;\r\n  private shipUrl: string;\r\n  private flagCodeSearchUrl: string;\r\n  private contactListShipUrl: string;\r\n  private shipContactListUrl: string;\r\n\r\n  private organizationDataSource = new BehaviorSubject<any>(null);\r\n  organizationData$ = this.organizationDataSource.asObservable();\r\n\r\n  private shipFlagCodeDataSource = new BehaviorSubject<any>(null);\r\n  shipFlagCodeData$ = this.shipFlagCodeDataSource.asObservable();\r\n\r\n  private shipOverviewDataSource = new BehaviorSubject<any>(null);\r\n  shipOverviewData$ = this.shipOverviewDataSource.asObservable();\r\n\r\n  private shipSearchDataSource = new BehaviorSubject<any>(null);\r\n  shipSearchData$ = this.shipSearchDataSource.asObservable();\r\n\r\n  private countryDataSource = new BehaviorSubject<any>(null);\r\n  countryData$ = this.countryDataSource.asObservable();\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private authRequest: AuthRequest\r\n  ) {\r\n    this.searchService = new SearchService(http);\r\n    this.shipUrl = 'api/ship';\r\n    this.shipSearchUrl = 'api/ship/search';\r\n    this.shipTypeUrl = 'api/shiptype';\r\n    this.hullTypeUrl = 'api/shiphulltype';\r\n    this.lengthTypeUrl = 'api/shiplengthtype';\r\n    this.breadthTypeUrl = 'api/shipbreadthtype';\r\n    this.powerTypeUrl = 'api/shippowertype';\r\n    this.shipSourceUrl = 'api/shipsource';\r\n    this.shipStatusListUrl = 'api/shipstatus';\r\n    this.flagCodeSearchUrl = 'api/shipflagcode/search';\r\n    this.contactListShipUrl = 'api/shipcontact/ship';\r\n    this.shipContactListUrl = 'api/shipcontact/list';\r\n  }\r\n\r\n  registerShip(newShip: any) {\r\n    const auth_header = this.authRequest.GetHeaders();\r\n    const options = new RequestOptions({ headers: auth_header });\r\n    return this.http\r\n      .post(this.shipUrl, newShip, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  getShip(id: number) {\r\n    const uri = [this.shipUrl, id].join('/');\r\n    return this.http.get(uri)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  setShipOverviewData(data) {\r\n    this.shipOverviewDataSource.next(data);\r\n  }\r\n\r\n  setOrganizationData(data) {\r\n    this.organizationDataSource.next(data);\r\n  }\r\n\r\n  setCountryData(data) {\r\n    this.countryDataSource.next(data);\r\n  }\r\n\r\n  setShipSearchData(data) {\r\n    this.shipSearchDataSource.next(data);\r\n  }\r\n\r\n  updateShip(ship: any) {\r\n    const auth_header = this.authRequest.GetHeaders();\r\n    const options = new RequestOptions({ headers: auth_header });\r\n    return this.http.put(this.shipUrl, ship, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  saveShipContactList(shipContactList: ShipContactModel[]) {\r\n    return this.http.post(this.shipContactListUrl, shipContactList)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  setShipFlagCodeData(data) {\r\n    this.shipFlagCodeDataSource.next(data);\r\n  }\r\n\r\n  search(term: string, amount = 10) {\r\n    if (term.length < 2) {\r\n      return Observable.of([]);\r\n    }\r\n    return this.searchService.search(this.shipSearchUrl, term, amount);\r\n  }\r\n\r\n  searchFlagCode(term: string, amount = 10) {\r\n    if (term.length < 1) {\r\n      return Observable.of([]);\r\n    }\r\n    return this.searchService.search(this.flagCodeSearchUrl, term);\r\n  }\r\n\r\n  getShipTypes() {\r\n    return this.http.get(this.shipTypeUrl).map(res => res.json());\r\n  }\r\n\r\n  getHullTypes() {\r\n    return this.http.get(this.hullTypeUrl).map(res => res.json());\r\n  }\r\n\r\n  getLengthTypes() {\r\n    return this.http.get(this.lengthTypeUrl).map(res => res.json());\r\n  }\r\n\r\n  getBreadthTypes() {\r\n    return this.http.get(this.breadthTypeUrl).map(res => res.json());\r\n  }\r\n\r\n  getPowerTypes() {\r\n    return this.http.get(this.powerTypeUrl).map(res => res.json());\r\n  }\r\n\r\n  getShipSources() {\r\n    return this.http.get(this.shipSourceUrl).map(res => res.json());\r\n  }\r\n\r\n  getShipStatusList() {\r\n    return this.http.get(this.shipStatusListUrl).map(res => res.json());\r\n  }\r\n\r\n  getContactList(shipId: number) {\r\n    const uri: string = [this.contactListShipUrl, shipId].join('/');\r\n    return this.http.get(uri).map(res => res.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/ship.service.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ConfirmationModalComponent } from './components/confirmation-modal/confirmation-modal.component';\r\nimport { ClearancesComponent } from './components/confirmation-view/clearances/clearances.component';\r\nimport { ConfirmationViewComponent } from './components/confirmation-view/confirmation-view.component';\r\nimport { PortCallDetailsComponent } from './components/confirmation-view/port-call-details/port-call-details.component';\r\nimport { SelectedPurposesComponent } from './components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component';\r\nimport { LocationInfoTableComponent } from './components/location-info-table/location-info-table.component';\r\nimport { LocationTimeInfoTableComponent } from './components/location-time-info-table/location-time-info-table.component';\r\nimport { SearchLocationComponent } from './components/search-location/search-location.component';\r\nimport { SearchOrganizationComponent } from './components/search-organization/search-organization.component';\r\nimport { SearchShipComponent } from './components/search-ship/search-ship.component';\r\nimport { ShipInfoTableComponent } from './components/ship-info-table/ship-info-table.component';\r\nimport { SsnCardComponent } from './components/ssn-card/ssn-card.component';\r\nimport { TableCardComponent } from './components/table-card/table-card.component';\r\nimport { ContactService } from './services/contact.service';\r\nimport { DbConnectionService } from './services/db-connection.service';\r\nimport { LocationService } from './services/location.service';\r\nimport { OrganizationService } from './services/organization.service';\r\nimport { ShipService } from './services/ship.service';\r\nimport { IntegerValidator } from './utils/custom-validators/integer-validator.directive';\r\nimport { NumberValidator } from './utils/custom-validators/number-validator.directive';\r\nimport { PositiveNumberValidator } from './utils/custom-validators/positive-number-validator.directive';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { SelectedContactMediumsComponent } from './components/selected-contact-mediums/selected-contact-mediums.component';\r\nimport { SelectShipContactComponent } from './components/select-ship-contact/select-ship-contact.component';\r\nimport { SsnBgComponent } from './components/ssn-bg/ssn-bg.component';\r\nimport { ShipSmartTableComponent } from './components/ship-smart-table/ship-smart-table.component';\r\nimport { ShipButtonRowComponent } from 'app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component';\r\nimport { OrganizationSmartTableComponent } from 'app/shared/components/organization-smart-table/organization-smart-table.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { OrganizationButtonRowComponent } from 'app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component';\r\nimport { LocationSmartTableComponent } from 'app/shared/components/location-smart-table/location-smart-table.component';\r\nimport { LocationButtonRowComponent } from 'app/shared/components/location-smart-table/location-button-row/location-button-row.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, NgSelectModule, NgbModule, Ng2SmartTableModule],\r\n  declarations: [\r\n    SsnCardComponent,\r\n    TableCardComponent,\r\n    ConfirmationViewComponent,\r\n    SelectedPurposesComponent,\r\n    PortCallDetailsComponent,\r\n    ClearancesComponent,\r\n    PositiveNumberValidator,\r\n    NumberValidator,\r\n    IntegerValidator,\r\n    ConfirmationModalComponent,\r\n    SearchOrganizationComponent,\r\n    SearchShipComponent,\r\n    ShipInfoTableComponent,\r\n    LocationTimeInfoTableComponent,\r\n    LocationInfoTableComponent,\r\n    SearchLocationComponent,\r\n    SelectShipContactComponent,\r\n    SelectedContactMediumsComponent,\r\n    SsnBgComponent,\r\n    ShipSmartTableComponent,\r\n    ShipButtonRowComponent,\r\n    OrganizationSmartTableComponent,\r\n    OrganizationButtonRowComponent,\r\n    LocationSmartTableComponent,\r\n    LocationButtonRowComponent,\r\n  ],\r\n  exports: [\r\n    SsnCardComponent,\r\n    TableCardComponent,\r\n    ConfirmationViewComponent,\r\n    PositiveNumberValidator,\r\n    NumberValidator,\r\n    IntegerValidator,\r\n    ConfirmationModalComponent,\r\n    SearchOrganizationComponent,\r\n    SearchShipComponent,\r\n    ShipInfoTableComponent,\r\n    LocationTimeInfoTableComponent,\r\n    LocationInfoTableComponent,\r\n    SearchLocationComponent,\r\n    SelectShipContactComponent,\r\n    SelectedContactMediumsComponent,\r\n    SsnBgComponent,\r\n    ShipSmartTableComponent,\r\n    OrganizationSmartTableComponent,\r\n    LocationSmartTableComponent\r\n  ],\r\n  providers: [\r\n    ContactService,\r\n    OrganizationService,\r\n    ShipService,\r\n    LocationService,\r\n    DbConnectionService\r\n  ],\r\n  entryComponents: [ConfirmationModalComponent, ShipButtonRowComponent, OrganizationButtonRowComponent, LocationButtonRowComponent]\r\n})\r\nexport class SharedModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import { RequestOptions } from '@angular/http';\r\nimport { AuthRequest } from 'app/shared/services/auth.request.service';\r\nimport { BaseService } from 'app/shared/services/base.service';\r\nimport { ConfigService } from './config.service';\r\n\r\nexport abstract class BaseRequest extends BaseService {\r\n  protected baseUrl: string;\r\n\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private authRequestService: AuthRequest\r\n  ) {\r\n    super();\r\n    this.baseUrl = this.configService.getApiURI();\r\n  }\r\n\r\n  getRequestOptions() {\r\n    const headers = this.authRequestService.GetHeaders();\r\n    const requestOptions = new RequestOptions({ headers: headers });\r\n    return requestOptions;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/base.request.ts","// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/shared/utils/config.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  _apiURI: string;\r\n\r\n  constructor() {\r\n    this._apiURI = 'api';\r\n  }\r\n\r\n  getApiURI() {\r\n    return this._apiURI;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/config.service.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector:\r\n    // tslint:disable-next-line:directive-selector\r\n    '[integerValidator][formControlName],[integerValidator][formControl],[integerValidator][ngModel]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => IntegerValidator),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class IntegerValidator implements Validator {\r\n  constructor() {}\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    if (\r\n      c.value !== undefined &&\r\n      (isNaN(c.value) || c.value - Math.floor(c.value) !== 0)\r\n    ) {\r\n      return { notIntegerError: true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/integer-validator.directive.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector:\r\n    // tslint:disable-next-line:directive-selector\r\n    '[numberValidator][formControlName],[numberValidator][formControl],[numberValidator][ngModel]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => NumberValidator),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class NumberValidator implements Validator {\r\n  constructor() {}\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    if (c.value !== undefined && c.value === null) {\r\n      return { notNumberError: true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/number-validator.directive.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector:\r\n    // tslint:disable-next-line:directive-selector\r\n    '[positiveNumberValidator][formControlName],[positiveNumberValidator][formControl],[positiveNumberValidator][ngModel]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PositiveNumberValidator),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PositiveNumberValidator implements Validator {\r\n  constructor() {}\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    if (c.value !== undefined && (isNaN(c.value) || c.value < 0)) {\r\n      return { notPositiveNumberError: true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/positive-number-validator.directive.ts","import { Request, XHRBackend, BrowserXhr, ResponseOptions, XSRFStrategy, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport { Injectable } from '@angular/core';\r\n\r\n// sweet global way to handle 401s - works in tandem with existing AuthGuard route checks\r\n// http://stackoverflow.com/questions/34934009/handling-401s-globally-with-angular-2\r\n@Injectable()\r\nexport class AuthenticateXHRBackend extends XHRBackend {\r\n\r\n    constructor(\r\n        _browserXhr: BrowserXhr,\r\n        _baseResponseOptions: ResponseOptions,\r\n        _xsrfStrategy: XSRFStrategy\r\n    ) {\r\n        super(_browserXhr, _baseResponseOptions, _xsrfStrategy);\r\n    }\r\n\r\n    createConnection(request: Request) {\r\n        let xhrConnection = super.createConnection(request);\r\n        xhrConnection.response = xhrConnection.response.catch((error: Response) => {\r\n            if ((error.status === 401 || error.status === 403) && (window.location.href.match(/\\?/g) || []).length < 2) {\r\n                \r\n                console.log('The authentication session expired or the user is not authorized. Force refresh of the current page.');\r\n                /* Great solution for bundling with Auth Guard! \r\n                1. Auth Guard checks authorized user (e.g. by looking into LocalStorage). \r\n                2. On 401/403 response you clean authorized user for the Guard (e.g. by removing coresponding parameters in LocalStorage). \r\n                3. As at this early stage you can't access the Router for forwarding to the login page,\r\n                4. refreshing the same page will trigger the Guard checks, which will forward you to the login screen */\r\n                localStorage.removeItem('auth_token');\r\n                window.location.href = window.location.href + '?' + new Date().getMilliseconds();             \r\n            }\r\n            return Observable.throw(error);\r\n        });\r\n        return xhrConnection;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/authenticate-xhr.backend.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}